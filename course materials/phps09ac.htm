<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
</head><body><mledit by="insert_name" date="insert_date" note="insert_note"></mledit>

<script language="JavaScript" src="phps09ac_files/mlclientpage.js"></script>
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

<script language="JavaScript" src="phps09ac_files/site.js"></script><script language="Javascript" src="phps09ac_files/resource_strings.js"></script><script language="Javascript" src="phps09ac_files/special_cases.js"></script>
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

<script language="JavaScript">var ThisPage=new MlPage();</script>
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

<title>PHP and MySQL: Developing Web Applications</title>

<script language="JavaScript">var crsAcronym="phps09";</script>
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

<script language="JavaScript" src="phps09ac_files/access.js"></script><script language="Javascript" src="phps09ac_files/params.js"></script><script language="Javascript" src="phps09ac_files/courseware.js"></script><script language="Javascript" src="phps09ac_files/phps09.js"></script><script language="Javascript" src="phps09ac_files/printbut.js"></script><table width="97%"><tbody><tr><td align="right"><div id="printButton" class="printbut" onclick="javascript:printPage();" onmouseover="this.style.backgroundPosition='-48px -24px';" onmouseout="this.style.backgroundPosition='-48px 0px';" title="Print"></div></td></tr></tbody></table>
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>


<!--<DPECTPL>access</DPECTPL>-->

<h1>PHP and MySQL: Developing Web Applications</h1>
<script language="JavaScript">
var numAccQuestions =16;
writeAccIntro();
</script>You can print this text-only version of this course for future reference.<br>&nbsp;<br> If you wish to use the accessible version of our courses, which includes questions in text-only format, click <b>Text Only</b> on the log on page, and then enter your user ID and password from the Accessibility Log On page.
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

<hr>
<a name="skipped">
</a><a name="pha001"></a>
<br><a name="topic1"></a><h2>Lesson 1. Course Introduction</h2><dpecw1>

In this course, you will learn about a number of independent topics that
 are present in more sophisticated Web applications. Their proper usage 
distinguishes the more seasoned programmer from the beginner.<br>
First of all, you'll learn methods of making your applications more 
flexible by adjusting their behavior to correspond to certain server 
settings. Also, you'll learn several tricks for managing database 
information, in particular editing and deleting records. At that same 
time, a couple new ways of passing data to your PHP pages will be 
introduced.<br>
Next, new features will be added to an existing script. These include 
paginating query results and making sortable displays. Finally, you'll 
discover what HTTP headers are, why they're important, and how to 
control them with PHP.

</dpecw1><br>
<a name="phb001"></a><br><a name="topic2"></a><h2>Lesson 2. Adjusting Behavior for Server Settings</h2><dpecw1>

There are a number of ways that you can improve the portability of your 
PHP applications by making scripts behave differently according to 
server-specific information.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Implement the <tt><tt>ini_set()</tt></tt> function
	</li>
	<li>
Use the <tt><tt>function_exists()</tt></tt> function
	</li>
</ul>

</dpecw1><br>
<a name="phb002"></a>
<br><dpecw1>

Using the <tt>ini_get()</tt> function is just one way you can make scripts behave differently according to server-specific information.<br>
Complementing the <tt>ini_get()</tt> function is <tt>ini_set()</tt>, which changes a PHP configuration for the duration of that script. This tool is a way of turning on PHP's <tt>display_errors</tt><i> </i>setting:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; ini_set('display_errors', 1);&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

While useful for many things, this function's powers are limited. Some features cannot be altered using <tt>ini_set()</tt>, like Magic Quotes and <tt>register_globals</tt><i> </i>(in both cases because the form data will be received by the page before any <tt>ini_set()</tt> alterations can occur).

</dpecw2><br>
<a name="phb003"></a>
<br><dpecw1>

Another useful tool for checking out a server's configuration is <tt>function_exists()</tt>. As you might expect from the name, this function returns either <tt>TRUE</tt> or <tt>FALSE</tt> to indicate whether a function exists in your PHP installation. You can use it to check if:<br>
<ul>
	<li>
A user-defined function exists (has been defined).
	</li>
	<li>
A function added in a recent version of PHP is available.
	</li>
	<li>
A function that requires external libraries is available for use, like <tt>mysql_connect()</tt>.
	</li>
</ul>
Using the function is simple:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (function_exists('mysql_connect')) {…&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phb004"></a>
<br><dpecw1>
	
To see the list of configurable options, see <tt>www.php.net/manual/en/ini.php</tt>. Any option marked as either <tt>PHP_INI_ALL</tt> or <tt>PHP_INI_USER</tt> can be adjusted with <tt>ini_set()</tt>.
	
</dpecw1><br>
<a name="phb005"></a>
<br><dpecw1>

<b>* Using <tt></tt></b><tt>function_exists()</tt><br>
Let's create a script utilizing <tt>function_exists()</tt>.<br>
<b>* Step 1</b><br>
Open or create <tt>mysql_connect.php</tt> in your text editor or IDE.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # mysql_connect.php</tt><br>
<tt>&nbsp;&nbsp; // This file contains the database access information.</tt><br>
<tt>&nbsp;&nbsp; // This file also establishes a connection to MySQL and selects the database.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; // Set the database access information as constants.</tt><br>
<tt>&nbsp;&nbsp; DEFINE ('DB_USER', 'username');</tt><br>
<tt>&nbsp;&nbsp; DEFINE ('DB_PASSWORD', 'password');</tt><br>
<tt>&nbsp;&nbsp; DEFINE ('DB_HOST', 'localhost');</tt><br>
<tt>&nbsp;&nbsp; DEFINE ('DB_NAME', 'sitename');</tt><br>
<tt>&nbsp;&nbsp; // Make the connnection.</tt><br>
<tt>&nbsp;&nbsp; $dbc = @mysql_connect (DB_HOST, DB_USER, DB_PASSWORD) OR</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;die ('Could not connect to MySQL: ' . mysql_error() );</tt><br>
<tt>&nbsp;&nbsp; // Select the database.</tt><br>
<tt>&nbsp;&nbsp; @mysql_select_db (DB_NAME) OR</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;die ('Could not select the database: ' . mysql_error() );&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;<br>
</dpeccode><br>
<a name="phb006"></a>
<br><dpecw1>

<b>* Step 2</b><br>
After you have connected to and selected the database, begin defining the <tt>escape_data()</tt> function.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; function escape_data($data) {&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

As multiple scripts within this application will need this function, you'll define it within the <tt>mysql_connect.php</tt> page instead of within each individual page.<br>
<b>Note:</b> To prevent declaring the <tt>escape_data()</tt> function twice remove the following from the <tt>register.php</tt> file and any other scripts:<br>
<tt>// Create a function for escaping the data.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;function escape_data ($data) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;global $dbc; // Need the connection.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ini_get('magic_quotes_gpc')) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data = stripslashes($data);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return mysql_real_escape_string(trim($data), $dbc);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} // End of function.</tt>

</dpecw2><br>
<a name="phb007"></a>
<br><dpecw1>

<b>* Step 3</b><br>
Check for, and respond to, the Magic Quotes setting.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (ini_get('magic_quotes_gpc')) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $data = stripslashes($data);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } </tt><br>
</dpeccode><br><dpecw2>

The <tt>ini_get()</tt> function will return <tt>TRUE</tt> or <tt>FALSE</tt>
 indicating whether Magic Quotes GPC is on. If it is, the data will have
 already been escaped and you'll want to remove those slashes before 
using the database-specific escaping function.

</dpecw2><br>
<a name="phb008"></a>
<br><dpecw1>

<b>* Step 4</b><br>
Check for, and respond to, the existence of the <tt>mysql_real_escape_string()</tt> function.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (function_exists('mysql_real_escape_string')) {</tt><br>
<tt>&nbsp;&nbsp; global $dbc;</tt><br>
<tt>&nbsp;&nbsp; $data = mysql_real_escape_string&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(trim($data), $dbc);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; $data = mysql_escape_string</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(trim($data));</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br><dpecw2>

The conditional checks if the <tt>mysql_ real_escape_string()</tt> 
function is available for use (it was added in version 4.3 of PHP, which
 your server may not be running). If it is, the database connection — <tt>$dbc</tt> — is made available via the <tt>global</tt> statement. Next, the <tt>mysql_real_ escape_string()</tt> function is applied to the trimmed data.<br>
If that particular function is not available, the older <tt>mysql_escape_string()</tt> function is used instead. This function works in much the same way but does not require a database connection.

</dpecw2><br>
<a name="phb009"></a>
<br><dpecw1>

<b>* Step 5</b><br>
Complete the function definition.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; return $data;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br><dpecw2>

The last step is to return the escaped data back to the script that called this function.

</dpecw2><br>
<a name="phb010"></a>
<br><dpecw1>

<b>* Step 6</b><br>
Save the file and upload it to your server. Remember to place this file outside of your Web root directory, if at all possible.<br>
The <tt>escape_data()</tt> function is now defined within this, the latest version of the <tt>mysql_connect.php</tt> script. The <tt>escape_data()</tt> function now checks for the availability of the <tt>mysql_real_escape_string()</tt> function before calling it.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # mysql_connect.php</tt><br>
<tt>&nbsp;&nbsp; // This file contains the database access information. </tt><br>
<tt>&nbsp;&nbsp; // This file also establishes a connection to MySQL and selects the database.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; // This file also defines the escape_data() function.</tt><br>
<tt>&nbsp;&nbsp; // Set the database access information as constants.</tt><br>
<tt>&nbsp;&nbsp; DEFINE ('DB_USER', 'username');</tt><br>
<tt>&nbsp;&nbsp; DEFINE ('DB_PASSWORD', 'password');</tt><br>
<tt>&nbsp;&nbsp; DEFINE ('DB_HOST', 'localhost');</tt><br>
<tt>&nbsp;&nbsp; DEFINE ('DB_NAME', 'sitename');</tt><br>
<tt>&nbsp;&nbsp; // Make the connection.</tt><br>
<tt>&nbsp;&nbsp; $dbc = @mysql_connect (DB_HOST, DB_USER, DB_PASSWORD) OR</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;die ('Could not connect to MySQL: ' . mysql_error() );</tt><br>
<tt>&nbsp;&nbsp; // Select the database.</tt><br>
<tt>&nbsp;&nbsp; @mysql_select_db (DB_NAME) OR</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;die ('Could not select the database: ' . mysql_error() );&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; // Create a function for escaping the data.</tt><br>
<tt>&nbsp;&nbsp; function escape_data ($data) {</tt><br>
<tt>&nbsp;&nbsp; // Address Magic Quotes.</tt><br>
<tt>&nbsp;&nbsp; if (ini_get('magic_quotes_gpc')) {</tt><br>
<tt>&nbsp;&nbsp; $data = stripslashes($data);</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Check for mysql_real_escape_string() support.</tt><br>
<tt>&nbsp;&nbsp; if (function_exists('mysql_real_escape_string'))</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{global $dbc; // Need the connection.</tt><br>
<tt>&nbsp;&nbsp; $data = mysql_real_escape_string (trim($data), $dbc);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; $data = mysql_escape_string (trim($data));</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Return the escaped value.</tt>&nbsp;&nbsp;&nbsp;&nbsp;<br>
<tt>&nbsp;&nbsp; return $data;</tt><br>
<tt>&nbsp;&nbsp; } // End of function.</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;<br>
</dpeccode><br>
<a name="phb011"></a>
<br><dpecw1>
	
Similar to the <tt>function_exists()</tt> function is <tt>extension_loaded()</tt>. This function returns <tt>TRUE</tt> or <tt>FALSE</tt>
 to indicate whether the extension name given as an argument is loaded 
in your PHP configuration. You can use it to check, for example, if PHP 
has MySQL support enabled.
	
</dpecw1><br>
<a name="phb012"></a>

<script language="JavaScript">insertAccQuestion('1','phb012.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phb013"></a>

<script language="JavaScript">insertAccQuestion('2','phb013.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phb016"></a>
<br><a name="topic3"></a><h2>Topic 2.1 Exercises</h2><br><b>* Exercise 1</b><dpecw1>

<br>
Try using the <tt>function_exists()</tt> function.<br>
<ml_ins_href><ml_data_href>

</ml_data_href></ml_ins_href></dpecw1><br><dpecw2>

<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Step</b>

</th><th class="heading" scope="col">
<b>Action</b>

	</th></tr>
	<tr valign="top">
<td>
1
</td>
<td>
Open the <tt>mysql_connect.php</tt> script in your text editor or IDE. <ml_ins_href><ml_data_href>
</ml_data_href></ml_ins_href></td>
	</tr>
	<tr valign="top">
<td>
2
</td>
<td>
Define the <tt>escape_data()</tt> function.
</td>
	</tr>
	<tr valign="top">
<td>
3
</td>
<td>
Check for, and respond to, the Magic Quotes setting.
</td>
	</tr>
	<tr valign="top">
<td>
4
</td>
<td>
Check for, and respond to, the existence of the <tt>mysql_real_escape_string()</tt> function.
</td>
	</tr>
	<tr valign="top">
<td>
5
</td>
<td>
Complete the function definition.
</td>
	</tr>
	<tr valign="top">
<td>
6
</td>
<td>
Save the file and upload it to your server.
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw2><br>
<br><a name="phb016a"></a>
<br><dpecw1>
	
<dpeccode>
<br>
<tt></tt>&lt;<tt>?php # mysql_connect.php</tt><br>
<tt>// This file contains the database access information.</tt><br>
<tt>// This file also establishes a connection to MySQL and</tt><br>
<tt>&nbsp;&nbsp; selects the database.&nbsp;&nbsp; </tt><br>
<tt>// Set the database access information as constants.</tt><br>
<tt>DEFINE ('DB_USER', 'username');</tt><br>
<tt>DEFINE ('DB_PASSWORD', 'password');</tt><br>
<tt>DEFINE ('DB_HOST', 'localhost');</tt><br>
<tt>DEFINE ('DB_NAME', 'sitename');</tt><br>
<tt>// Make the connnection.</tt><br>
<tt>$dbc = @mysql_connect (DB_HOST, DB_USER, DB_PASSWORD) OR</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;die ('Could not connect to MySQL: ' . mysql_error() );</tt><br>
<tt>// Select the database.</tt><br>
<tt>@mysql_select_db (DB_NAME) OR</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;die ('Could not select the database: ' . mysql_error() );&nbsp;&nbsp; </tt><br>
<tt>?&gt;</tt></dpeccode></dpecw1><br><br>
<a name="phb017"></a>
<br><dpecw1>
	
In this lesson, you learned how to improve the portability of your PHP 
applications by making scripts behave differently according to 
server-specific information. The <tt>ini_get()</tt> function is one way; a complementary way is the <tt>ini_set</tt> function, which changes a PHP configuration for the duration of that script.<br>
You also learned how to use the <tt>function_exists()</tt> function. This tool returns either <tt>TRUE</tt> or <tt>FALSE</tt> to indicate whether a function exists in your PHP installation.
	
</dpecw1><br>
<a name="phc001"></a><br><a name="topic4"></a><h2>Lesson 3. Sending Values Manually</h2><dpecw1>

In many cases, data received in the PHP script comes from what the user 
entered in a form. There are, however, other ways you can pass variables
 and values to a PHP script.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Manually send values to a PHP script
	</li>
</ul>

</dpecw1><br>
<a name="phc002"></a>
<br><dpecw1>

In the examples so far, all of the data received in the PHP script came 
from what the user entered in a form. There are, however, two different 
ways you can pass variables and values to a PHP script, both worth 
knowing.<br>
The first method is to make use of HTML's hidden input type:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>input type="hidden" name="name"&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value="Brian" /</tt>&gt;<br>
</dpeccode><br><dpecw2>

As long as this code is anywhere between the <tt>form</tt> tags, the variable <tt>$_POST['name']</tt> will have a value of <tt>Brian</tt><i> </i>in the handling PHP script (assuming that the form uses the <tt>POST</tt> method).

</dpecw2><br>
<a name="phc003"></a>
<br><dpecw1>

The second method is to append a value to the PHP script's URL:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; www.mycompany.com/page.php?name=Brian&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

This technique emulates the <tt>GET</tt> method of an HTML form. With this specific example, <tt>page.php</tt> receives a variable called <tt>$_GET['name']</tt> with a value of <tt>Brian</tt>.<br>
To demonstrate this <tt>GET</tt> method trick, a new version of the <tt>view_users.php</tt>
 script will be written. This one will provide links to edit or delete 
an existing user. The links will pass the user's ID to the handling 
pages, both of which will be written subsequently.

</dpecw2><br>
<a name="phc004"></a>
<br><dpecw1>

Let's look at how to manually send values to a PHP script.<br>
<b>* Step 1</b><br>
Open or create <tt>view_users.php</tt> in your text editor or IDE.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # view_users.php</tt><br>
<tt>&nbsp;&nbsp; // This script retrieves all the records from the users table.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'View the Current Users';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; // Page header.</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Registered Users</tt>&lt;<tt>/h1</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp; // Make the query.</tt><br>
<tt>&nbsp;&nbsp; $query = "SELECT CONCAT(last_name, ', ', first_name) AS name,</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DATE_FORMAT(registration_date, '%M %d, %Y') AS dr FROM users ORDER&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BY registration_date ASC";</tt><br>
<tt>&nbsp;&nbsp; $result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp; $num = mysql_num_rows($result);</tt><br>
<tt>&nbsp;&nbsp; if ($num </tt>&gt;<tt> 0) { // If it ran OK, display the records.</tt><br>
<tt>&nbsp;&nbsp; echo "</tt>&lt;<tt>p</tt>&gt;<tt>There are currently $num registered users.</tt> &lt;<tt>/p</tt>&gt;<tt>\n";</tt><br>
<tt>&nbsp;&nbsp; // Table header.</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>table align="center" cellspacing="0" cellpadding="5"</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>tr</tt>&gt;&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b&gt;Date</tt><br> <tt>&nbsp;&nbsp;&nbsp;&nbsp; Registered</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;&lt;<tt>/tr</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; ';</tt><br>
<tt>&nbsp;&nbsp; // Fetch and print all the records.</tt><br>
<tt>&nbsp;&nbsp; while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>tr</tt>&gt;&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['name'] .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</tt>&lt;<tt>/td</tt>&gt;&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['dr'] . '</tt>&lt;<tt>/td</tt>&gt;&lt;<tt>/tr</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; ';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>/table</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; mysql_free_result ($result); // Free up the resources.</tt><br>
<tt>&nbsp;&nbsp; } else { // If it did not run OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>p class="error"</tt>&gt;<tt>There are currently no registered users.</tt> &lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br> 
<tt>&nbsp;&nbsp; // Include the HTML footer.</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;<br>
</dpeccode><br>
<a name="phc005"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Change the SQL query as follows.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $query = "SELECT last_name,&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first_name, DATE_FORMAT(registration_date, '%M %d, %Y')&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AS dr, user_id FROM users ORDER BY&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;registration_date ASC";</tt><br>
</dpeccode><br><dpecw2>

We have changed this query in a couple of ways. First, we select the 
first and last names as separate values, instead of as one concatenated 
value. Second, we now also select the <tt>user_id</tt> value, which will be necessary in creating the links.

</dpecw2><br>
<a name="phc006"></a>
<br><dpecw1>

<b>* Step 3</b><br>
Add three more columns to the main table.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>table align="center"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cellspacing="0" cellpadding="5"</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>tr</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt> &gt;&lt;<tt>b</tt>&gt;<tt>Edit</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt> &gt;&lt;<tt>b</tt>&gt;<tt>Delete</tt>&lt;<tt>/b</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt> &gt;&lt;<tt>b</tt>&gt;<tt>Last Name</tt>&lt;<tt>/b</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt> &gt;&lt;<tt>b</tt>&gt;<tt>First Name</tt>&lt;<tt>/b</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt> &gt;&lt;<tt>b</tt>&gt;<tt>Date</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Registered</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>&nbsp;&nbsp; ';</tt><br>
</dpeccode><br><dpecw2>

In the previous version of the script, there were only two columns: one 
for the name and another for the date the user registered. We've 
separated out the name column into its two parts and created one column 
for the Edit link and another for the Delete<i> </i>link.

</dpecw2><br>
<a name="phc007"></a>
<br><dpecw1>

<b>* Step 4</b><br>
Change the <tt>echo</tt> statement within the <tt>while</tt> loop to match the table's new structure.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>tr</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt; &lt;<tt>a href="edit_user.php?id=' . $row['user_id']&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;. '"&gt;Edit</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt; &lt;<tt>a href="delete_user.php?id=' . $row['user_id']&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;. '"</tt>&gt;<tt>Delete</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['last_name'] . '</tt>&lt;<tt>/td</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['first_name'] . '</tt>&lt;<tt>/td</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['dr']</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;. '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>&nbsp;&nbsp; '; </tt><br>
</dpeccode><br><dpecw2>

For each record returned from the database, this line will print out a 
row with five columns. The last three columns are obvious and easy to 
create: just refer to the returned column name.

</dpecw2><br>
<a name="phc008"></a>
<br><dpecw1>

For the first two columns, which provide links to edit or delete the 
user, the syntax is slightly more complicated. The desired end result is
 HTML code like <tt>&lt;a href<tt>=</tt>"edit_user.php?id=<i>X</i>"&gt;Edit&lt;/a&gt;</tt>, where <i><tt>X</tt> </i>is the user's ID. Having established this, all we have to do is print <tt>$row['user_id']</tt> for <i><tt>X</tt></i>, being mindful of the quotation marks to avoid parse errors.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>tr</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt; &lt;<tt>a href="edit_user.php?id=' . $row['user_id']&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;. '"</tt>&gt;<tt>Edit</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt; &lt;<tt>a href="delete_user.php?id=' . $row['user_id']&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;. '"&gt;Delete</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['last_name'] . '</tt>&lt;<tt>/td</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['first_name'] . '</tt>&lt;<tt>/td</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt> &gt;<tt>' . $row['dr']</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;. '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>&nbsp;&nbsp; '; </tt><br>
</dpeccode><br>
<a name="phc009"></a>
<br><dpecjs><b>* Step 5</b>
<br>
Save the file as <tt>view_users.php</tt>, upload it to your server, and run in your Web browser.
<br>

<a name="phc010"></a>
<br><dpecjs><b>* Step 6</b>
<br>
If you want, view the HTML source of the page to see each dynamically generated link. <ml_ins_href><ml_data_href>php script.
<br>

<br><a name="phc010b"></a>
<br><dpecw1>
	
<dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # view_users.php </tt><br>
<tt>&nbsp;&nbsp; // This script retrieves all the records from the users table.</tt><br>
<tt>&nbsp;&nbsp; // This new version links to edit and delete pages.</tt><br>
<tt>&nbsp;&nbsp; $page_title='View the Current Users';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; // Page header.</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Registered Users</tt>&lt;<tt>/h1</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp; // Make the query.</tt><br>
<tt>&nbsp;&nbsp; $query="SELECT last_name, first_name,</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DATE_FORMAT(registration_date, '%M %d, %Y')</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AS dr, user_id FROM users ORDER BY registration_date ASC";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $result=mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp; $num=mysql_num_rows($result);</tt><br>
<tt>&nbsp;&nbsp; if ($num </tt>&gt;<tt> 0) { // If it ran OK, display the records.</tt><br>
<tt>&nbsp;&nbsp; echo "</tt>&lt;<tt>p</tt>&gt;<tt>There are currently $num registered users.</tt>&lt;<tt>/p</tt>&gt;<tt>\n";</tt><br>
<tt>&nbsp;&nbsp; // Table header.</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>table align="center" cellspacing="0" cellpadding="5"</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>tr</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Edit</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Delete</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Last Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>First Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Date Registered</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>&nbsp;&nbsp; ';</tt><br>
<tt>&nbsp;&nbsp; // Fetch and print all the records.</tt><br>
<tt>&nbsp;&nbsp; while ($row=mysql_fetch_array($result, MYSQL_ASSOC)) {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>tr</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="edit_user.php?id=' . $row['user_id'] .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'"</tt>&gt;<tt>Edit</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="delete_user.php?id=' . $row['user_id'] .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'"</tt>&gt;<tt>Delete</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['last_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['first_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['dr'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>&nbsp;&nbsp; ';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>/table</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; mysql_free_result ($result); // Free up the resources.</tt><br>
<tt>&nbsp;&nbsp; } else { // If it did not run OK.</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>p class="error"</tt>&gt;<tt>There are currently no registered users.</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html'); // Include the HTML footer.</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;
</dpeccode>
	
</dpecw1><br><br>
<a name="phc011"></a>
<br><b>Appending multiple variables  <br>  </b>  To append multiple variables to a URL, use this syntax: <tt>page.php?<i>name1</i>=<i>value1</i> &amp;<i>name2</i>=<i>value2</i>&amp;<i>name3</i>=<i>value3</i></tt>. It's simply a matter of using the ampersand, plus another <tt><i>name</i>=<i>value</i></tt> pair.  <br><br>  <b>Adding variables to URLs  <br>  </b>
  One trick to adding variables to URLs is that strings should be 
encoded to ensure that the value is handled properly. For example, the 
space in the string <tt>Jane Smith</tt><i> </i>would be problematic. The solution then is to use the <tt>urlencode()</tt> function:  <tt>$url = 'page.php?name=' . &nbsp;    urlencode('Jane Smith'); </tt>  You only need to do this when manually<i> </i>adding values to a URL. When a form uses a <tt>GET</tt> method, it automatically encodes the data properly.  <br><br>  
<a name="phc012"></a>

<script language="JavaScript">insertAccQuestion('3','phc012.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phc013"></a>

<script language="JavaScript">insertAccQuestion('4','phc013.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phc014"></a>

<script language="JavaScript">insertAccQuestion('5','phc014.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phc016"></a>
<br><a name="topic5"></a><h2>Topic 3.1 Exercises</h2><br><b>* Exercise 1</b><dpecw1>

<br>
Try manually sending values to a PHP script.

</dpecw1><br><dpecw2>

<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Step</b>

</th><th class="heading" scope="col">
<b>Action</b>

	</th></tr>
	<tr valign="top">
<td>
1
</td>
<td>
Open the <tt>view_users.php</tt> script in your text editor or IDE. <ml_ins_href><ml_data_href>
</ml_data_href></ml_ins_href></td>
	</tr>
	<tr valign="top">
<td>
2
</td>
<td>
Change the SQL query to select the first and last names as separate values. Also select the <tt>user_id</tt> value.
</td>
	</tr>
	<tr valign="top">
<td>
3
</td>
<td>
Recreate the main table so that there are separate columns for first and
 last name and new columns for the Edit and Delete links.
</td>
	</tr>
	<tr valign="top">
<td>
4
</td>
<td>
Change the <tt>echo</tt> statement within the <tt>while</tt> loop to match the table's new structure.
</td>
	</tr>
	<tr valign="top">
<td>
5
</td>
<td>
Save the file, upload it to your server, and run it in your Web browser.
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw2><br>
<br><a name="phc016a"></a>
<br><dpecw1>
	
<dpeccode>
<br>
<tt></tt>&lt;<tt>?php # view_users.php</tt><br>
<tt>// This script retrieves all the records from the users table.</tt><br>
<tt>$page_title = 'View the Current Users';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Page header.</tt><br>
<tt>echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Registered Users</tt>&lt;<tt>/h1</tt>&gt;<tt>';</tt><br>
<tt>require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>// Make the query.</tt><br>
<tt>$query = "SELECT CONCAT(last_name, ', ', first_name) AS name,</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;DATE_FORMAT(registration_date, '%M %d, %Y') AS dr FROM users ORDER&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;BY registration_date ASC";</tt><br>
<tt>$result = @mysql_query ($query); // Run the query.</tt><br>
<tt>$num = mysql_num_rows($result);</tt><br>
<tt>if ($num </tt>&gt;<tt> 0) { // If it ran OK, display the records.</tt><br>
<tt>echo "</tt>&lt;<tt>p</tt>&gt;<tt>There are currently $num registered users.</tt> &lt;<tt>/p</tt>&gt;<tt>\n";</tt><br>
<tt>// Table header.</tt><br>
<tt>echo '</tt>&lt;<tt>table align="center" cellspacing="0" cellpadding="5"</tt>&gt;<br>
<tt></tt>&lt;<tt>tr</tt>&gt;&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;&lt;<tt>td align="left"</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>b&gt;Date Registered</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;&lt;<tt>/tr</tt>&gt;<tt></tt><br>
<tt>';</tt><br>
<tt>// Fetch and print all the records.</tt><br>
<tt>while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {</tt><br>
<tt>echo '</tt>&lt;<tt>tr</tt>&gt;&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['name'] .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;'</tt>&lt;<tt>/td</tt>&gt;&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['dr'] . '</tt>&lt;<tt>/td</tt>&gt;&lt;<tt>/tr</tt>&gt;<tt></tt><br>
<tt>';</tt><br>
<tt>}</tt><br>
<tt>echo '</tt>&lt;<tt>/table</tt>&gt;<tt>';</tt><br>
<tt>mysql_free_result ($result); // Free up the resources.</tt><br>
<tt>} else { // If it did not run OK.</tt><br>
<tt>echo '</tt>&lt;<tt>p class="error"</tt>&gt;<tt>There are currently no registered users.</tt> &lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>}</tt><br>
<tt>mysql_close(); // Close the database connection.</tt><br>
<tt>include ('./includes/footer.html'); // Include the HTML footer.</tt><br>
<tt>?</tt>&gt;</dpeccode></dpecw1><br><br>
<a name="phc017"></a>
<br><dpecw1>
	
In this lesson, you learned how to pass variables and values to a PHP 
script by appending them to the PHP script's URL. This technique 
emulates the <tt>GET</tt> method of an HTML form.<br>
You also learned how to append multiple variables to a URL and use the <tt>urlencode()</tt> function.
	
</dpecw1><br>
<a name="phd001"></a><br><a name="topic6"></a><h2>Lesson 4. Using Hidden Form Inputs</h2><dpecw1>

Using HTML's hidden input type is one way to pass variables and values to a PHP script.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Use hidden form inputs
	</li>
</ul>

</dpecw1><br>
<a name="phd002"></a>
<br><dpecw1>

Let's create <tt>delete_user.php</tt> that will take a passed user ID 
and allow the administrator to delete that user. Although you could have
 this page simply execute a <tt>DELETE</tt> query on the database, for security purposes (and to prevent an inadvertent deletion), there will be multiple steps:<br>
1. The page must check that it received a numeric user ID.<br>
2. A message will confirm that this user should be deleted.<br>
3. The user ID will be stored in a hidden form input.<br>
4. Upon submission of this form, the user will actually be deleted.<br>
The following example explains how to use hidden form inputs.

</dpecw1><br>
<a name="phd003"></a>
<br><dpecw1>

<b>* Step 1</b><br>
Create a new PHP document in your text editor or IDE.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # delete_user.php&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phd004"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Include the page header. This document will use the same template system as the other pages in the application.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $page_title = 'Delete a User'; include ('./includes/header.html');&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phd005"></a>
<br><dpecw1>

<b>* Step 3</b><br>
Check for a valid user ID value.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if ( (isset($_GET['id'])) &amp;&amp; (is_numeric($_GET['id'])) ) {$id = $_GET['id'];&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } elseif ( (isset($_POST['id'])) &amp;&amp;(is_numeric($_POST['id'])) ) {$id = $_POST['id'];&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt> &gt;<tt>Page Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p class="error"</tt> &gt;<tt>This page has been accessed in error.</tt> &lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; exit();</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br>
<a name="phd006"></a>
<br><dpecw1>

This script relies upon having a valid user ID, which will be used in a <tt>DELETE</tt> query's <tt>WHERE</tt> clause. The first time this page is accessed, the user ID should be passed in the URL (the page's URL will end with <tt>delete_user.php?id=<i>X</i></tt>), after clicking the Delete<i> </i>link in the <tt>view_users.php</tt> page. The first <tt>if</tt> condition checks for such a value and that the value is numeric.<br>
As you will learn, the script will then store the user ID value in a 
hidden form input. When the form is submitted (back to this same page), 
the page will receive the ID through <tt>$_POST</tt>. The second condition checks this and, again, that the ID value is numeric.<br>
If neither of these conditions are <tt>TRUE</tt>, then the page cannot proceed, so an error message is displayed and the script's execution is terminated.

</dpecw1><br>
<a name="phd007"></a>
<br><dpecw1>

<b>* Step 4</b><br>
Include the MySQL connection script.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; require_once ('../mysql_connect.php');&nbsp;&nbsp;&nbsp;&nbsp;</tt><br>
</dpeccode><br><dpecw2>

Both of this script's processes — showing the form and handling the form
 — require a database connection, so this line is outside of the main 
submit conditional
(Step 5).<br>
<b>Note:</b> If you experience a fatal error when attempting to connect to your MySQL server, you should modify the <tt>require_once( )</tt> as <tt>require_once ('./mysql_connect.php');</tt>

</dpecw2><br>
<a name="phd008"></a>
<br><dpecw1>

<b>* Step 5</b><br>
Begin the main submit conditional.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phd009"></a>
<br><dpecw1>

<b>* Step 6</b><br>
Delete the user, if appropriate.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if ($_POST['sure'] == 'Yes') {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $query = "DELETE FROM users WHERE user_id=$id";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query); </tt><br>
</dpeccode><br>
<a name="phd010"></a>
<br><dpecjs>The form will make the user click a radio button to confirm 
the deletion. This little step prevents any accidents. Thus, the 
handling process first checks that the right radio button was selected. 
If so, a basic <tt>DELETE</tt> query is defined, using the user's ID in the <tt>WHERE</tt> clause.
<br>

<a name="phd011"></a>
<br><dpecw1>

<b>* Step 7</b><br>
Check if the deletion worked and respond accordingly.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (mysql_affected_rows() == 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Delete a User</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>The user has been deleted.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>System Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p class="error"</tt>&gt;<tt>The user could not be deleted due to a system error.</tt> &lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>p</tt>&gt;<tt>' . mysql_error() . '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>Query: ' . $query . '</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br>
<a name="phd012"></a>
<br><dpecw1>

The <tt>mysql_affected_rows()</tt> function checks that exactly one row was affected by the <tt>DELETE</tt>
 query. If so, a happy message is displayed. If not, an error message is
 sent out. 
Keep in mind that it's possible that no rows were affected without a 
MySQL error occurring. For example, if the query tries to delete the 
record where the user ID is equal to 42000<i> </i>(which presumably doesn't exist), no rows will be deleted but no MySQL error will occur.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (mysql_affected_rows() == 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Delete a User</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>The user has been deleted.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>System Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p class="error"</tt>&gt;<tt>The user could not be deleted due to a system error.</tt> &lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>p</tt>&gt;<tt>' . mysql_error() . '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>Query: ' . $query . '</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br>
<a name="phd013"></a>
<br><dpecw1>

<b>* Step 8</b><br>
Complete the <tt>$_POST['sure']</tt> conditional.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Delete a User</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>The user has NOT been deleted.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } </tt><br>
</dpeccode><br><dpecw2>

If the page user did not explicitly check the Yes<i> </i>box, the user will not be deleted and this message is displayed.

</dpecw2><br>
<a name="phd014"></a>
<br><dpecw1>

<b>* Step 9</b><br>
Begin the <tt>else</tt> clause of the main submit conditional.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; } else {&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

The page will either handle the form or display it. Most of the code 
prior to this takes effect if the form has been submitted (if <tt>$_POST['submitted']</tt> is set). The code from here on takes effect if the form has not yet been submitted, in which case the form should be displayed.

</dpecw2><br>
<a name="phd015"></a>
<br><dpecw1>

<b>* Step 10</b><br>
Retrieve the information for the user being deleted.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $query = "SELECT CONCAT(last_name,', ', first_name) FROM users WHERE user_id=$id";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $result = @mysql_query ($query);</tt><br>
<tt>&nbsp;&nbsp; if (mysql_num_rows($result) == 1) { </tt><br>
</dpeccode><br><dpecw2>

To confirm that the script received a valid user ID and to state exactly
 who is being deleted, the to-be-deleted user's name is retrieved from 
the database.<br>
The conditional — checking that a single row was returned — ensures that a valid user ID was provided.

</dpecw2><br>
<a name="phd016"></a>
<br><dpecw1>

<b>* Step 11</b><br>
Display the form. First, the database information is retrieved using the <tt>mysql_fetch_array()</tt>
 function. Then the form is printed, showing the name value retrieved 
from the database at the top. An important step here is that the user ID
 (<tt>$id</tt>) is stored as a hidden form input so that the handling process can also access this value.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $row = mysql_fetch_array ($result,MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h2</tt>&gt;<tt>Delete a User</tt>&lt;<tt>/h2</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>form action="delete_user.php" method="post"</tt> &gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>h3</tt>&gt;<tt>Name: ' . $row[0] . '</tt>&lt;<tt>/h3</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>Are you sure you want to delete this user?</tt> &lt;<tt>br /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>input type="radio" name="sure" value="Yes" /</tt>&gt;<tt> Yes</tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>input type="radio" name="sure" value="No" checked="checked" /</tt>&gt;<tt> No</tt>&lt;<tt>/p</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>input type="submit" name= "submit" value="Submit" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>input type="hidden" name="submitted" value="TRUE" /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>input type="hidden" name="id" value="' . $id . '" /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/form</tt>&gt;<tt>';</tt><br>
</dpeccode><br>
<a name="phd017"></a>
<br><dpecw1>

<b>* Step 12</b><br>
Complete the <tt>mysql_num_rows()</tt> conditional.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Page Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p class="error"</tt>&gt;<tt>This page has been accessed in error.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } </tt><br>
</dpeccode><br><dpecw2>

If no record was returned from the database (because an invalid user ID was submitted), this message is displayed.<br>
If you are unsure of your MySQL query, you could call the <tt>mysql_error()</tt>
 function here and print out the query to check for errors. Again 
though, an invalid user ID can cause no records to be returned without a
 MySQL error having occurred.

</dpecw2><br>
<a name="phd018"></a>
<br><dpecw1>

<b>* Step 13</b><br>
Complete the PHP page.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; mysql_close();</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt><br>
</dpeccode><br><dpecw2>

The closing brace finishes the main submit conditional. Then the MySQL connection is closed and the footer is included.

</dpecw2><br>
<a name="phd019"></a>
<br><dpecjs><b>* Step 14</b>
<br>
Save the file as <tt>delete_user.php</tt> and upload it to your Web server (it should be placed in the same directory as <tt>view_users.php</tt>). If you select Yes in the form and click Submit, this should be the result.
<br>

<a name="phd020"></a>
<br><dpecjs>Run the page by first clicking a Delete<i> </i>link in the <tt>view_users.php</tt> page. If you do not select Yes in the form, no database changes are made.
<br>

<a name="phd021"></a>
<br><dpecw1>

Here is the finished <tt>delete_user.php</tt> script. This script 
expects a user ID to be passed to it through the URL. It then presents a
 confirmation form and deletes the user upon submission.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # delete_user.php</tt><br>
<tt>&nbsp;&nbsp; // This page deletes a user.</tt><br>
<tt>&nbsp;&nbsp; // This page is accessed through view_users.php.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Delete a User';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; // Check for a valid user ID, through GET or POST.</tt><br>
<tt>&nbsp;&nbsp; if ( (isset($_GET['id'])) &amp;&amp; (is_numeric($_GET['id'])) )</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ // Accessed through view_users.php</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$id = $_GET['id'];</tt><br>
<tt>&nbsp;&nbsp; } elseif ( (isset($_POST['id'])) &amp;&amp; (is_numeric($_POST['id'])) )</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ // Form has been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$id = $_POST['id'];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { // No valid ID, kill the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Page Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>This page has been accessed in error.</tt> &lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; include ('./includes/footer.html'); </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exit();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp; require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($_POST['sure'] == 'Yes') { // Delete them.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Make the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query = "DELETE FROM users WHERE user_id=$id";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (mysql_affected_rows() == 1) { // If it ran OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Print a message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Delete a User</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p</tt>&gt;<tt>The user has been deleted.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { // If the query did not run OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>System Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>The user could not be deleted due to a</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;system error.</tt>&lt;<tt>/p</tt>&gt;<tt>'; // Public message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>p</tt>&gt;<tt>' . mysql_error() . '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query: ' . $query . '</tt>&lt;<tt>/p</tt>&gt;<tt>'; // Debugging message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp; } else { // Wasn't sure about deleting the user.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Delete a User</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>The user has NOT been deleted.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; } else { // Show the form.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Retrieve the user's information.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query = "SELECT 
CONCAT(last_name, ', ', first_name) FROM users WHERE 
user_id=$id";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mysql_num_rows($result) == 1) { // Valid user ID, show the form.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Get the user's information.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>h2</tt>&gt;<tt>Delete a User</tt>&lt;<tt>/h2</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>form action="delete_user.php" method="post"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>h3</tt>&gt;<tt>Name: ' . $row[0] . '</tt>&lt;<tt>/h3</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>Are you sure you want to delete this user?</tt>&lt;<tt>br /</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>input type="radio" name="sure" value="Yes" /</tt>&gt;<tt> Yes </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>input type="radio" name="sure" value="No" checked="checked" /</tt>&gt;<tt> No</tt>&lt;<tt>/p</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>input type="submit" name="submit" value="Submit" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>input type="hidden" name="submitted" value="TRUE" /</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>input type="hidden" name="id" value="' . $id . '" /</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>/form</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // Not a valid user ID.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Page Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p class="error</tt>&gt;<tt>This page has been accessed in error.</tt> &lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;
</dpeccode><br>
<a name="phd022"></a>
<br><b><tt>GET</tt> method  <br>  </b>  Another way of writing this script would be to have the form use the <tt>GET</tt> method. Then the validation conditional would only have to validate <tt>$_GET['id']</tt>, as the ID would be passed in the URL whether the page was first being accessed or the form had been submitted.  <br><br>  <b>Security consideration  <br>  </b>
  Hidden form elements don't display in the Web browser but are still 
present in the HTML source code. For this reason, never store anything 
there that must be kept truly secure.  <br><br>  <b><tt>parse_url()</tt> function  <br>  </b>  PHP's <tt>parse_url()</tt> function can be used to break a URL down into its subparts. See the PHP manual for more information.  <br><br>  
<a name="phd024"></a>

<script language="JavaScript">insertAccQuestion('6','phd024.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phd025"></a>

<script language="JavaScript">insertAccQuestion('7','phd025.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phd026"></a>
<br><dpecw1>
	
In this lesson, you learned how to use HTML's hidden input type to send 
values to a script. Specifically, you learned to write a script that 
passes a value, stores it in a hidden form input, and then deletes a 
database record based on that value.<br>
You also learned that hidden form elements don't display in the Web 
browser, but are still present in the HTML source code. Therefore, you 
shouldn't store anything there that must be kept secure.
	
</dpecw1><br>
<a name="phe001"></a><br><a name="topic7"></a><h2>Lesson 5. Editing Existing Records</h2><dpecw1>

A common practice with database-driven Web sites is having a system in 
place so that you can easily edit existing records. This concept seems 
daunting to many beginning programmers, but it's surprisingly 
straightforward.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Edit existing records
	</li>
</ul>

</dpecw1><br>
<a name="phe002"></a>
<br><dpecw1>

The following example, editing registered user records, combines skills you should already have:<br>
<ul>
	<li>
Making sticky forms
	</li>
	<li>
Using hidden inputs
	</li>
</ul>
This next example is generally very similar to <tt>delete_user.php</tt> and will also be linked from the <tt>view_users.php</tt> script (when a person clicks Edit). <ml_ins_href><ml_data_href>php. <ml_ins_href><ml_data_href>php.<br>
A form will be displayed with the user's current information, allowing 
for those values to be changed. Upon submitting the form, an <tt>UPDATE</tt> query will be run to update the database. 

</ml_data_href></ml_ins_href></ml_data_href></ml_ins_href></dpecw1><br>
<br><a name="phe002a"></a>
<br><dpecw1>
	
<dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # delete_user.php</tt><br>
<tt>&nbsp;&nbsp; // This page deletes a user.</tt><br>
<tt>&nbsp;&nbsp; // This page is accessed through view_users.php.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Delete a User';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; // Check for a valid user ID, through GET or POST.</tt><br>
<tt>&nbsp;&nbsp; if ( (isset($_GET['id'])) &amp;&amp; (is_numeric($_GET['id'])) )</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ // Accessed through view_users.php</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$id = $_GET['id'];</tt><br>
<tt>&nbsp;&nbsp; } elseif ( (isset($_POST['id'])) &amp;&amp; (is_numeric($_POST['id'])) )</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ // Form has been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$id = $_POST['id'];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { // No valid ID, kill the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Page Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>This page has been accessed in error.</tt> &lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; include ('./includes/footer.html'); </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exit();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp; require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($_POST['sure'] == 'Yes') { // Delete them.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Make the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query = "DELETE FROM users WHERE user_id=$id";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (mysql_affected_rows() == 1) { // If it ran OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Print a message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Delete a User</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p</tt>&gt;<tt>The user has been deleted.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { // If the query did not run OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>System Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>The user could not be deleted due to a</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;system error.</tt>&lt;<tt>/p</tt>&gt;<tt>'; // Public message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>p</tt>&gt;<tt>' . mysql_error() . '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query: ' . $query . '</tt>&lt;<tt>/p</tt>&gt;<tt>'; // Debugging message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp; } else { // Wasn't sure about deleting the user.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Delete a User</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>The user has NOT been deleted.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; } else { // Show the form.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Retrieve the user's information.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query = "SELECT 
CONCAT(last_name, ', ', first_name) FROM users WHERE 
user_id=$id";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mysql_num_rows($result) == 1) { // Valid user ID, show the form.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Get the user's information.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>h2</tt>&gt;<tt>Delete a User</tt>&lt;<tt>/h2</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>form action="delete_user.php" method="post"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>h3</tt>&gt;<tt>Name: ' . $row[0] . '</tt>&lt;<tt>/h3</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>Are you sure you want to delete this user?</tt>&lt;<tt>br /</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>input type="radio" name="sure" value="Yes" /</tt>&gt;<tt> Yes </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>input type="radio" name="sure" value="No" checked="checked" /</tt>&gt;<tt> No</tt>&lt;<tt>/p</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>input type="submit" name="submit" value="Submit" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>input type="hidden" name="submitted" value="TRUE" /</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>input type="hidden" name="id" value="' . $id . '" /</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>/form</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // Not a valid user ID.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Page Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p class="error</tt>&gt;<tt>This page has been accessed in error.</tt> &lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;<br></dpeccode></dpecw1><br><br>
<br><a name="phe002b"></a>
<br><dpecw1>
	
<dpeccode>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # view_users.php </tt><br>
<tt>&nbsp;&nbsp; // This script retrieves all the records from the users table.</tt><br>
<tt>&nbsp;&nbsp; // This new version links to edit and delete pages.</tt><br>
<tt>&nbsp;&nbsp; $page_title='View the Current Users';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; // Page header.</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Registered Users</tt>&lt;<tt>/h1</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp; // Make the query.</tt><br>
<tt>&nbsp;&nbsp; $query="SELECT last_name, first_name,</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DATE_FORMAT(registration_date, '%M %d, %Y')</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AS dr, user_id FROM users ORDER BY registration_date ASC";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $result=mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp; $num=mysql_num_rows($result);</tt><br>
<tt>&nbsp;&nbsp; if ($num </tt>&gt;<tt> 0) { // If it ran OK, display the records.</tt><br>
<tt>&nbsp;&nbsp; echo "</tt>&lt;<tt>p</tt>&gt;<tt>There are currently $num registered users.</tt>&lt;<tt>/p</tt>&gt;<tt>\n";</tt><br>
<tt>&nbsp;&nbsp; // Table header.</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>table align="center" cellspacing="0" cellpadding="5"</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>tr</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Edit</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Delete</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Last Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>First Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Date Registered</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>&nbsp;&nbsp; ';</tt><br>
<tt>&nbsp;&nbsp; // Fetch and print all the records.</tt><br>
<tt>&nbsp;&nbsp; while ($row=mysql_fetch_array($result, MYSQL_ASSOC)) {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>tr</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="edit_user.php?id=' . $row['user_id'] .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'"</tt>&gt;<tt>Edit</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="delete_user.php?id=' . $row['user_id'] .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'"</tt>&gt;<tt>Delete</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['last_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['first_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['dr'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>&nbsp;&nbsp; ';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>/table</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; mysql_free_result ($result); // Free up the resources.</tt><br>
<tt>&nbsp;&nbsp; } else { // If it did not run OK.</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>p class="error"</tt>&gt;<tt>There are currently no registered users.</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html'); // Include the HTML footer.</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;</dpeccode></dpecw1><br><br>
<a name="phe003"></a>
<br><dpecw1>

<b>* Step 1</b><br>
Create a new PHP document in your text editor or IDE.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # edit_user.php</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Edit a User';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phe004"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Check for a valid user ID value. This validation routine is exactly the same as that in <tt>delete_user.php</tt>, confirming that a numeric user ID has been received.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if ( (isset($_GET['id'])) &amp;&amp; (is_numeric($_GET['id'])) ) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $id = $_GET['id'];&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } elseif ( (isset($_POST['id'])) &amp;&amp; (is_numeric($_POST['id'])) ) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $id = $_POST['id'];</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Page Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p class="error"</tt>&gt;<tt>This page has been accessed in error.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; exit();</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br>
<a name="phe005"></a>
<br><dpecw1>

<b>* Step 3</b><br>
Include the MySQL connection script and begin the main submit conditional. 

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; require_once ('./mysql_connect.php');&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp; $errors = array();</tt><br>
</dpeccode><br><dpecw2>

This script makes use of an array to track errors.

</dpecw2><br>
<a name="phe006"></a>
<br><dpecw1>

<b>* Step 4</b><br>
Validate the form data.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (empty($_POST['first_name'])) {</tt><br>
<tt>&nbsp;&nbsp; $errors[] = 'You forgot to enter your first name.';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; $fn = escape_data($_POST ['first_name']);</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; if (empty($_POST['last_name'])) {</tt><br>
<tt>&nbsp;&nbsp; $errors[] = 'You forgot to enter your last name.';</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; $ln = escape_data($_POST ['last_name']);</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp; } </tt><br>
</dpeccode><br>
<a name="phe007"></a>
<br><dpecjs>The form is like a registration form but without the 
password fields. The form data can therefore be validated using the same
 methods used in the registration scripts.
<br>

<a name="phe008"></a>
<br><dpecw1>

<b>* Step 5</b><br>
If there were no errors, check that the submitted email address is not already in use.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (empty($errors)) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $query = "SELECT user_id FROM users WHERE email='$e' AND user_id != $id";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $result = mysql_query($query);</tt><br>
<tt>&nbsp;&nbsp; if (mysql_num_rows($result) == 0) { </tt><br>
</dpeccode><br><dpecw2>

The integrity of the database and of the application as a whole 
partially depends upon having unique email address values in the users<i> </i>table.
 This guarantees that the login system works. Because the form allows 
for altering the user's email address, special steps have to be taken to
 ensure uniqueness. Let's consider two possibilities.

</dpecw2><br>
<a name="phe009"></a>
<br><dpecw1>

In the first, the user's email address is being changed. In this case 
you just need to run a query making sure that that particular email 
address isn't already registered:<br>
<tt>   SELECT user_id FROM users WHERE email='$e')</tt>.<br>
In the second possibility, the user's email address will remain the 
same. In this case, it's okay if the email address is already in use, 
because it's already in use for this user. To write one query that will 
work for both possibilities, don't check to see if the email address is 
being used, but rather see if it's being used by anyone else:<br>
<tt>   SELECT user_id FROM users WHERE email='$e' AND user_id != $id</tt>.

</dpecw1><br>
<a name="phe010"></a>
<br><dpecw1>

<b>* Step 6</b><br>
Update the database.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $query = "UPDATE users SET first_name='$fn', last_name='$ln',&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; email='$e' WHERE user_id=$id";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $result = @mysql_query ($query); if (mysql_affected_rows() == 1)</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; { echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Edit a User</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>The user has been edited.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p&gt;</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>System Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p class="error"</tt>&gt;<tt>The user could not be edited due to a system error.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; We apologize for any inconvenience.</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>p</tt>&gt;<tt>' . mysql_error() . '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>Query: ' . $query . '</tt>&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; exit();</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br>
<a name="phe011"></a>
<br><dpecw1>

The <tt>UPDATE</tt> query updates all three fields — first name, last 
name, and email address — using the values submitted by the form. This 
system works because the form is preset with the existing values. So, if
 you edit the first name in the form but nothing else, the first name 
value in the database is updated using this new value, but the last name
 and email address values are "updated" using their current values. This
 system is much easier than trying to determine which form values have 
changed and updating just those in the database.<br>
The <tt>mysql_affected_rows()</tt> function is used to report upon the success of the operation.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $query = "UPDATE users SET first_name='$fn', last_name='$ln',&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; email='$e' WHERE user_id=$id";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $result = @mysql_query ($query); if (mysql_affected_rows() == 1)</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; { echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Edit a User</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>The user has been edited.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p&gt;</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>System Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p class="error"</tt>&gt;<tt>The user could not be edited due to a system error.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; We apologize for any inconvenience.</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>p</tt>&gt;<tt>' . mysql_error() . '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>Query: ' . $query . '</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; exit();</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br>
<a name="phe012"></a>
<br><dpecw1>

<b>* Step 7</b><br>
Complete the email, <tt>$errors</tt>, and submit conditionals.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Error!</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p class="error"</tt>&gt;<tt>The email address has already been registered.</tt>&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Error!</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p class="error"</tt>&gt;<tt>The following error(s) occurred:</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>br /</tt>&gt;<tt>'; foreach ($errors as $msg) { echo " $msg</tt>&lt;<tt>br /</tt>&gt;<tt>\n";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;<tt>Please try again.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; } </tt><br>
</dpeccode><br>
<a name="phe013"></a>
<br><dpecw1>

This first <tt>else</tt> completes the conditional that checked if an email address was already being used by another user. The second <tt>else</tt>
 is used to report any errors in the form (namely, a lack of a first 
name, last name, or email address). The final closing brace completes 
the main submit conditional.<br>
In this example, the form will be displayed whenever the page is 
accessed. So after submitting the form, the database will be updated, 
and the form will be shown again, now displaying the latest information.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Error!</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p class="error"</tt>&gt;<tt>The email address has already been registered.</tt>&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Error!</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p class="error"</tt>&gt;<tt>The following error(s) occurred:</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>br /</tt>&gt;<tt>'; foreach ($errors as $msg) { echo " $msg</tt>&lt;<tt>br /</tt>&gt;<tt>\n";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;<tt>Please try again.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; } </tt><br>
</dpeccode><br>
<a name="phe014"></a>
<br><dpecw1>

<b>* Step 8</b><br>
Retrieve the information for the user being edited.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $query = "SELECT first_name, last_name, email FROM users WHERE user_id=$id";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $result = @mysql_query ($query);</tt><br>
<tt>&nbsp;&nbsp; if (mysql_num_rows($result) == 1) {</tt><br>
</dpeccode><br><dpecw2>

This query is similar to the one in <tt>delete_user.php</tt>, although 
three individual values are retrieved from the database. Again, the 
conditional — checking that a single row was returned — ensures that a 
valid user ID was provided.

</dpecw2><br>
<a name="phe015"></a>
<br><dpecw1>

<b>* Step 9</b><br>
Display the form. The form has but three text inputs, each of which is 
made sticky using the data retrieved from the database. The user ID (<tt>$id</tt>) is stored as a hidden form input so that the handling process can also access this value.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h2</tt>&gt;<tt>Edit a User</tt>&lt;<tt>/h2</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>form action="edit_user.php" method="post"</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>First Name: </tt>&lt;<tt>input type="text" name="first_name" size="15"&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; maxlength="15" value="' . $row[0] . '" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>Last Name: </tt>&lt;<tt>input type="text" name="last_name" size="15"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; maxlength="30" value="' . $row[1] . '" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>Email Address: </tt>&lt;<tt>input type="text" name="email" size="20"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; maxlength="40" value="' . $row[2] . '" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>input type="submit" name="submit" value="Submit"/</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>input type="hidden" name="submitted" value="TRUE" /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>input type="hidden" name="id" value="' . $id . '" /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/form</tt>&gt;<tt>';</tt><br>
</dpeccode><br>
<a name="phe016"></a>
<br><dpecw1>

<b>* Step 10</b><br>
Complete the <tt>mysql_num_rows()</tt> conditional.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Page Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p class="error"</tt>&gt;<tt>This page has been accessed in error.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br><dpecw2>

If no record was returned from the database, because an invalid user ID was submitted, this message is displayed.

</dpecw2><br>
<a name="phe017"></a>
<br><dpecw1>

<b>* Step 11</b><br>
Complete the PHP page.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; mysql_close();</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt><br>
</dpeccode><br>
<a name="phe018"></a>
<br><dpecjs><b>* Step 12</b>
<br>
Save the file as <tt>edit_user.php</tt> and upload it to your Web server. The new values are displayed in the form after successfully updating the database.
<br>

<a name="phe019"></a>
<br><dpecjs><b>* Step 13</b>
<br>
Run the page by first clicking an Edit<i> </i>link in the <tt>view_users.php</tt> page. If you try to change a record to an existing email address or if you omit any input, errors are reported.
<br>

<a name="phe020"></a>
<br><dpecw1>

Here is the completed <tt><tt>edit_user.php</tt></tt> script. The <tt>edit_user.php</tt>
 page first displays the user's current information in a form. Upon 
submission of the form, the record will be updated in the database.

</dpecw1><br><dpeccode>
<br>
<tt></tt>&lt;<tt>?php # edit_user.php</tt><br>
<tt>// This page edits a user.</tt><br>
<tt>// This page is accessed through view_users.php.</tt><br>
<tt>$page_title = 'Edit a User';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Check for a valid user ID, through GET or POST.</tt><br>
<tt>if ( (isset($_GET['id'])) &amp;&amp; (is_numeric($_GET['id'])) )</tt><br>
<tt>&nbsp;&nbsp; { // Accessed through view_users.php&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$id = $_GET['id'];</tt><br>
<tt>} elseif ( (isset($_POST['id'])) &amp;&amp; (is_numeric($_POST['id'])) )</tt><br>
<tt>&nbsp;&nbsp; { // Form has been submitted.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$id = $_POST['id'];</tt><br>
<tt>} else { // No valid ID, kill the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Page Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>This page has been accessed in error.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;include ('./includes/footer.html'); </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;exit();</tt><br>
<tt>}</tt><br>
<tt>require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>// Check if the form has been submitted.</tt><br>
<tt>if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Check for a first name.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['first_name'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your first name.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $fn = escape_data($_POST['first_name']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Check for a last name.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['last_name'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your last name.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ln = escape_data($_POST['last_name']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;Test for unique email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT user_id FROM users WHERE email='$e' AND user_id != $id";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = mysql_query($query);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (mysql_num_rows($result) == 0) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Make the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query =
 "UPDATE users SET first_name='$fn', last_name='$ln', 
email='$e'&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WHERE user_id=$id";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mysql_affected_rows() == 1) { // If it ran OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Print a message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Edit a User</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p</tt>&gt;<tt>The user has been edited.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { // If it did not run OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>System Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>The user could not be edited due to a system error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;We apologize for any inconvenience.</tt>&lt;<tt>/p</tt>&gt;<tt>'; // Public message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;<tt>' . mysql_error() . '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query: ' . $query . '</tt>&lt;<tt>/p</tt>&gt;<tt>'; // Debugging message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include ('./includes/footer.html'); </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // Already registered.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Error!</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>The email address has already been registered.</tt>&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} else { // Report the errors.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Error!</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p class="error"</tt>&gt;<tt>The following error(s) occurred:</tt>&lt;<tt>br /</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo " - $msg</tt>&lt;<tt>br /</tt>&gt;<tt>\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;<tt>Please try again.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>} // End of submit conditional.</tt><br>
<tt>// Always show the form.</tt><br>
<tt>// Retrieve the user's information.</tt><br>
<tt>$query = "SELECT first_name, last_name, email FROM users WHERE user_id=$id";</tt><br>
<tt>$result = @mysql_query ($query); // Run the query.</tt><br>
<tt>if (mysql_num_rows($result) == 1) { // Valid user ID, show the form.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Get the user's information.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Create the form.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h2</tt>&gt;<tt>Edit a User</tt>&lt;<tt>/h2</tt>&gt;<br>
<tt></tt>&lt;<tt>form action="edit_user.php" method="post"</tt>&gt;<br>
<tt></tt>&lt;<tt>p</tt>&gt;<tt>First Name: </tt>&lt;<tt>input type="text" name="first_name" size="15"</tt><br>
<tt>&nbsp;&nbsp; maxlength="15" value="' . $row[0] . '" /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt></tt><br>
<tt></tt>&lt;<tt>p</tt>&gt;<tt>Last Name: </tt>&lt;<tt>input type="text" name="last_name" size="15"</tt><br>
<tt>&nbsp;&nbsp; maxlength="30" value="' . $row[1] . '" /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt></tt><br>
<tt></tt>&lt;<tt>p</tt>&gt;<tt>Email Address: </tt>&lt;<tt>input type="text" name="email" size="20"</tt><br>
<tt>&nbsp;&nbsp; maxlength="40" value="' . $row[2] . '"&nbsp;&nbsp;/</tt>&gt;&lt;<tt>/p</tt>&gt;<tt></tt><br>
<tt></tt>&lt;<tt>p</tt>&gt;&lt;<tt>input type="submit" name="submit" value="Submit" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt></tt>&lt;<tt>input type="hidden" name="submitted" value="TRUE" /</tt>&gt;<br>
<tt></tt>&lt;<tt>input type="hidden" name="id" value="' . $id . '" /</tt>&gt;<br>
<tt></tt>&lt;<tt>/form</tt>&gt;<tt>';</tt><br>
<tt>} else { // Not a valid user ID.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Page Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>This page has been accessed in error.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>}</tt><br>
<tt>mysql_close(); // Close the database connection.</tt><br>
<tt>include ('./includes/footer.html');</tt><br>
<tt>?&gt;</tt></dpeccode><br>
<a name="phe021"></a>
<br><b>Changing the password  <br>  </b>  This edit page does not 
include the functionality to change the password. If you would like to 
incorporate that functionality here, keep in mind that you cannot 
display the current password, as it is encrypted.  Instead, just present
 two boxes for changing the password (the new password input and a 
confirmation). If these values are submitted, update the password in the
 database as well. If these inputs are left blank, do not update the 
password in the database.  <br><br>  <b>Updating without affecting records  <br>  </b>  The <tt>mysql_affected_rows()</tt> function will return a value of 0<i> </i>if an <tt>UPDATE</tt>
 command successfully ran but didn't actually affect any records. So if 
you submit this form without changing any of the form values, a system 
error is displayed, which may not technically be correct.  Once you have
 this script effectively working, you could change the error message to 
indicate that no alterations were made in such a case.  <br><br>  
<a name="phe022"></a>

<script language="JavaScript">insertAccQuestion('8','phe022.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<br><a name="phe023a"></a>
<br><dpecw1>
	
<dpeccode>
<br>
<tt></tt>&lt;<tt>?php # edit_user.php</tt><br>
<tt>// This page edits a user.</tt><br>
<tt>// This page is accessed through view_users.php.</tt><br>
<tt>$page_title = 'Edit a User';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Check for a valid user ID, through GET or POST.</tt><br>
<tt>if ( (isset($_GET['id'])) &amp;&amp; (is_numeric($_GET['id'])) )</tt><br>
<tt>&nbsp;&nbsp; { // Accessed through view_users.php&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$id = $_GET['id'];</tt><br>
<tt>} elseif ( (isset($_POST['id'])) &amp;&amp; (is_numeric($_POST['id'])) )</tt><br>
<tt>&nbsp;&nbsp; { // Form has been submitted.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$id = $_POST['id'];</tt><br>
<tt>} else { // No valid ID, kill the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Page Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>This page has been accessed in error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;include ('./includes/footer.html'); </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;exit();</tt><br>
<tt>}</tt><br>
<tt>require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>// Check if the form has been submitted.</tt><br>
<tt>if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Check for a first name.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['first_name'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your first name.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $fn = escape_data($_POST['first_name']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Check for a last name.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['last_name'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your last name.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ln = escape_data($_POST['last_name']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;Test for unique email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT user_id FROM users WHERE email='$e'</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND user_id != $id";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = mysql_query($query);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (mysql_num_rows($result) == 0) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Make the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query = "UPDATE users SET first_name='$fn', </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;last_name='$ln', email='$e'&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WHERE user_id=$id";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mysql_affected_rows() == 1) { // If it ran OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Print a message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Edit a User</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p</tt>&gt;<tt>The user has been edited.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { // If it did not run OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>System Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>The user could not be edited due</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to a system error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;We apologize for any inconvenience.</tt>&lt;<tt>/p</tt>&gt;<tt>'; // Public message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;<tt>' . mysql_error() . '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query: ' . $query . '</tt>&lt;<tt>/p</tt>&gt;<tt>'; // Debugging message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include ('./includes/footer.html'); </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // Already registered.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Error!</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>The email address has already been</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;registered.</tt>&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} else { // Report the errors.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Error!</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p class="error"</tt>&gt;<tt>The following error(s) occurred:</tt>&lt;<tt>br /</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo " - $msg</tt>&lt;<tt>br /</tt>&gt;<tt>\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;<tt>Please try again.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>} // End of submit conditional.</tt><br>
<tt>// Always show the form.</tt><br>
<tt>// Retrieve the user's information.</tt><br>
<tt>$query = "SELECT first_name, last_name, email FROM users</tt><br>
<tt>&nbsp;&nbsp; WHERE user_id=$id";</tt><br>
<tt>$result = @mysql_query ($query); // Run the query.</tt><br>
<tt>if (mysql_num_rows($result) == 1) { // Valid user ID, show the form.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Get the user's information.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Create the form.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h2</tt>&gt;<tt>Edit a User</tt>&lt;<tt>/h2</tt>&gt;<br>
<tt></tt>&lt;<tt>form action="edit_user.php" method="post"</tt>&gt;<br>
<tt></tt>&lt;<tt>p</tt>&gt;<tt>First Name: </tt>&lt;<tt>input type="text" name="first_name" size="15"</tt><br>
<tt>&nbsp;&nbsp; maxlength="15" value="' . $row[0] . '" /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt></tt><br>
<tt></tt>&lt;<tt>p</tt>&gt;<tt>Last Name: </tt>&lt;<tt>input type="text" name="last_name" size="15"</tt><br>
<tt>&nbsp;&nbsp; maxlength="30" value="' . $row[1] . '" /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt></tt><br>
<tt></tt>&lt;<tt>p</tt>&gt;<tt>Email Address: </tt>&lt;<tt>input type="text" name="email" size="20"</tt><br>
<tt>&nbsp;&nbsp; maxlength="40" value="' . $row[2] . '"&nbsp;&nbsp;/</tt>&gt;&lt;<tt>/p</tt>&gt;<tt></tt><br>
<tt></tt>&lt;<tt>p</tt>&gt;&lt;<tt>input type="submit" name="submit" value="Submit" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt></tt>&lt;<tt>input type="hidden" name="submitted" value="TRUE" /</tt>&gt;<br>
<tt></tt>&lt;<tt>input type="hidden" name="id" value="' . $id . '" /</tt>&gt;<br>
<tt></tt>&lt;<tt>/form</tt>&gt;<tt>';</tt><br>
<tt>} else { // Not a valid user ID.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Page Error</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>This page has been accessed in</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>}</tt><br>
<tt>mysql_close(); // Close the database connection.</tt><br>
<tt>include ('./includes/footer.html');</tt><br>
<tt>?&gt;</tt></dpeccode></dpecw1><br><br>
<a name="phe024"></a>

<script language="JavaScript">insertAccQuestion('9','phe024.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phe025"></a>
<br><dpecw1>
	
In this lesson, you learned how to edit existing records, an important 
concept when working with database-driven Web sites. You created a 
script that allowed you to edit user records and combine such skills as 
making sticky forms and using hidden inputs.
	
</dpecw1><br>
<a name="phf001"></a><br><a name="topic8"></a><h2>Lesson 6. Paginating Query Results</h2><dpecw1>

Pagination is a concept you're familiar with even if you don't know the 
term. When you use a search engine like Google, it displays the results 
as a series of pages and not as one long list.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Paginate query results
	</li>
</ul>

</dpecw1><br>
<a name="phf002"></a>
<br><dpecjs>Paginating query results makes extensive use of the <tt>LIMIT</tt> SQL clause. <tt>LIMIT</tt>
 restricts which subset of the matched records are actually returned. To
 paginate the returned results of a query, each page will run the same 
query using different <tt>LIMIT</tt> parameters. These parameters will also be passed from page to page in the URL, like the user IDs passed from the <tt>view_users.php</tt>
 page.
Another, more cosmetic technique will be demonstrated here: displaying 
each row of the table — each returned record — using an alternating 
background color. This effect will be achieved with ease, using the 
ternary operator.
<br>

<a name="phf003"></a>
<br><dpecw1>

<b>* Step 1</b><br>
Open or create <tt>view_users.php</tt> in your text editor or IDE.

</dpecw1><br><dpeccode>
<tt></tt>&lt;<tt>?php # view_users.php </tt><br>
<tt>// This script retrieves all the records from the users table.</tt><br>
<tt>// This new version links to edit and delete pages.</tt><br>
<tt>$page_title='View the Current Users';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Page header.</tt><br>
<tt>echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Registered Users</tt>&lt;<tt>/h1</tt>&gt;<tt>';</tt><br>
<tt>require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>// Make the query.</tt><br>
<tt>$query="SELECT last_name, first_name, DATE_FORMAT(registration_date, '%M %d, %Y')</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;AS dr, user_id FROM users ORDER BY registration_date ASC";&nbsp;&nbsp; </tt><br>
<tt>$result=mysql_query ($query); // Run the query.</tt><br>
<tt>$num=mysql_num_rows($result);</tt><br>
<tt>if ($num &gt; 0) { // If it ran OK, display the records.</tt><br>
<tt>echo "</tt>&lt;<tt>p</tt>&gt;<tt>There are currently $num registered users.</tt>&lt;<tt>/p</tt>&gt;<tt>\n";</tt><br>
<tt>// Table header.</tt><br>
<tt>echo '</tt>&lt;<tt>table align="center" cellspacing="0" cellpadding="5"</tt>&gt;<br>
<tt></tt>&lt;<tt>tr</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Edit</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Delete</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Last Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>First Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Date Registered</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>';</tt><br>
<tt>// Fetch and print all the records.</tt><br>
<tt>while ($row=mysql_fetch_array($result, MYSQL_ASSOC)) {</tt><br>
<tt>echo '</tt>&lt;<tt>tr</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="edit_user.php?id=' . $row['user_id'] .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;'"</tt>&gt;<tt>Edit</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="delete_user.php?id=' . $row['user_id'] .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;'"</tt>&gt;<tt>Delete</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['last_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['first_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['dr'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>';</tt><br>
<tt>}</tt><br>
<tt>echo '</tt>&lt;<tt>/table</tt>&gt;<tt>';</tt><br>
<tt>mysql_free_result ($result); // Free up the resources.</tt><br>
<tt>} else { // If it did not run OK.</tt><br>
<tt>echo '</tt>&lt;<tt>p class="error"</tt>&gt;<tt>There are currently no registered users.</tt>&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>}</tt><br>
<tt>mysql_close(); // Close the database connection.</tt><br>
<tt>include ('./includes/footer.html'); // Include the HTML footer.</tt><br>
<tt>?</tt>&gt;</dpeccode><br>
<a name="phf004"></a>
<br><dpecw1>

<b>* Step 2</b><br>
After including the database connection, set the number of records to display per page.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $display = 10;&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

By establishing this value as a variable here, you'll make it easy to 
change the number of records displayed on each page at a later date.

</dpecw2><br>
<a name="phf005"></a>
<br><dpecw1>

<b>* Step 3</b><br>
Check if the number of required pages has been determined.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (isset($_GET['np'])) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$num_pages = $_GET['np'];&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } else { </tt><br>
</dpeccode><br><dpecw2>

For this script to display the users over several pages, it will need to
 determine how many total pages of results will be required. The first 
time the script is run, this number will be calculated. From then on, 
the number of pages will be passed to the script as part of the URL, as 
the <tt>$_GET['np']</tt> variable. If this variable is set, its value will be assigned to the <tt>$num_pages</tt> variable. If not, then the number of pages will need to be calculated.

</dpecw2><br>
<a name="phf006"></a>
<br><dpecw1>

<b>* Step 4</b><br>
Count the number of records in the database.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $query = "SELECT COUNT(*) FROM users ORDER BY registration_date ASC";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $result = mysql_query ($query);</tt><br>
<tt>&nbsp;&nbsp; $row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp; $num_records = $row[0]; </tt><br>
</dpeccode><br><dpecw2>

Using the <tt>COUNT()</tt> function, you can easily see the number of records in the users<i> </i>table. This query will return a single row with a single column: the number of records.

</dpecw2><br>
<a name="phf007"></a>
<br><dpecw1>

<b>* Step 5</b><br>
Mathematically calculate how many pages are required.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if ($num_records &gt; $display) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $num_pages = ceil ($num_records/$display);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$num_pages = 1;</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; }</tt>
</dpeccode><br><dpecw2>

The number of pages used to display the records is based upon the total 
number of records to be shown and the number to display per page (as set
 by the <tt>$display</tt> variable). If there are more rows than there 
are records to be displayed per page, multiple pages will be required. 
To calculate exactly how many pages, take the next highest integer from 
the division of the two (the <tt>ceil()</tt> function returns the next highest integer). If <tt>$num_records</tt> is not greater than <tt>$display</tt>, only one page is necessary.

</dpecw2><br>
<a name="phf008"></a>
<br><dpecw1>

<b>* Step 6</b><br>
Determine the starting point in the database.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (isset($_GET['s'])) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $start = $_GET['s'];</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; $start = 0;</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br><dpecw2>

The second parameter the script will receive — on subsequent viewings of
 the page — will be the starting record. Upon initially calling the 
script, the first 10 records should be retrieved. The second page would 
show records 10 through 20; the third, 20 through 30; and so forth. The 
first page will not have an <tt>$_GET['s']</tt> variable set, and so <tt>$start</tt> will be 0 (the first record in a <tt>LIMIT</tt> clause is indexed at 0). Subsequent pages will receive the <tt>$_GET['s']</tt> variable from the URL, and it will be assigned to <tt>$start</tt>.

</dpecw2><br>
<a name="phf009"></a>
<br><dpecw1>

<b>* Step 7</b><br>
Change the query so that it uses the <tt>LIMIT</tt> clause.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $query = "SELECT last_name, first_name,</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DATE_FORMAT(registration_date, '%M %d, %Y') AS&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dr, user_id FROM users ORDER BY</tt><br>
<tt>&nbsp;&nbsp; registration_date ASC LIMIT $start, $display";&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

The <tt>LIMIT</tt> clause dictates which record to begin retrieving (<tt>$start</tt>) and how many to return (<tt>$display</tt>) from that point. The first time the page is run, the query will be <tt>SELECT last_name, first_name … LIMIT 0, 10</tt>. Clicking to the next page will result in <tt>SELECT last_name, first_name … LIMIT 10, 10</tt>.

</dpecw2><br>
<a name="phf010"></a>
<br><dpecw1>

<b>* Step 8</b><br>
Delete the references to the <tt>$num</tt> variable. In order to simplify this script a little bit, delete both the assignment of the <tt>$num</tt> variable and the <tt>if ($num &gt; 0)</tt> conditional. We'll assume that there are records to be displayed.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $num = mysql_num_rows($result);</tt><br>
<tt>&nbsp;&nbsp; if ($num </tt>&gt;<tt> 0) { // If it ran OK, display the records.</tt><br>
<tt>&nbsp;&nbsp; echo "</tt>&lt;<tt>p</tt>&gt;<tt>There are currently $num registered users.</tt>&lt;<tt>/p</tt>&gt;<tt>\n";&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phf011"></a>
<br><dpecw1>

<b>* Step 9</b><br>
Before the <tt>while</tt> loop, initialize the background color variable.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $bg = '#eeeeee';&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

We'll initialize a <tt>$bg</tt> variable (to #eeeeee, a light gray), which will be used as the background color for every other row.

</dpecw2><br>
<a name="phf012"></a>
<br><dpecw1>

<b>* Step 10</b><br>
Within the <tt>while</tt> loop, add the following:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $bg = ($bg=='#eeeeee' ? '#ffffff' : '#eeeeee');&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

The background color used by each row in the table is assigned to the <tt>$bg</tt> variable. Because we want this color to alternate, we'll use this line of code to assign the opposite color to <tt>$bg</tt>. If it's equal to #eeeeee, then it will be assigned the value of #ffffff<i> </i>and vice versa. For the first row, <tt>$bg</tt> is equal to #eeeeee<i> </i>and will therefore be assigned #ffffff, making a white background. For the second row, <tt>$bg</tt> is not equal to #eeeeee, so it will be assigned that value, making a gray background.

</dpecw2><br>
<a name="phf013"></a>
<br><dpecw1>
	
In this example, we'll be using the ternary<i> </i>operator. Its structure is<br>
<tt>   (<i>condition</i>) ? <i>valueT </i>: <i>valueF </i></tt><br>
The condition in parentheses will be evaluated; if it is <tt>TRUE</tt>, the first value will be returned (<tt><i><tt>valueT</tt></i></tt>). If the condition is <tt>FALSE</tt>, the second value (<tt><i><tt>valueF</tt></i></tt>)
 will be returned. Because the ternary operator returns a value, the 
entire structure is often the argument of a function. For example, the 
line<br>
<tt>   echo (isset($var)) ? 'SET' : 'NOT SET';   </tt><br>
will print out SET or NOT SET, depending upon the status of the variable <tt>$var</tt>.<br>
In this version of the <tt>view_users.php</tt> script, the ternary 
operator assigns a value to a variable. The variable itself will then be
 used to dictate the background color of each record in the table. There
 are certainly other ways to set this value, but the ternary operator is
 the most concise.
	
</dpecw1><br>
<a name="phf014"></a>
<br><dpecw1>

<b>* Step 11</b><br>
Modify the <tt>while</tt> loop's <tt>echo</tt> statement so that it prints the table row's background color.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>tr bgcolor="' . $bg . '"</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phf015"></a>
<br><dpecw1>

<b>* Step 12</b><br>
After completing the HTML table, begin a section for displaying links to other pages, if necessary.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if ($num_pages </tt>&gt;<tt> 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $current_page = ($start/$display) + 1;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; if ($current_page != 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>a href="view_users.php?s=' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ($start - $display) . '&amp;np=' . $num_pages . '"</tt>&gt;<tt>Previous</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } </tt><br>
</dpeccode><br>
<a name="phf016"></a>
<br><dpecjs>If the script requires multiple pages to display all of the 
records, we'll want to make the appropriate links at the bottom of the 
page. For these links, first determine the current page, which can be 
calculated as the start number divided by the display number, plus 1. 
For example, on the second instance of this script, <tt>$start</tt> will be 10 (because on the first instance, <tt>$start</tt> is 0), so 10/10 + 1 = 2.
<br>

<a name="phf017"></a>
<br><dpecjs>If the current page is not the first page, we'll display a Previous<i> </i>link
 to the earlier result set. Each link will be made up of the script 
name, plus the starting point and the number of pages. The starting 
point for the previous page will be the current starting point minus the
 number being displayed.
<br>

<a name="phf018"></a>
<br><dpecw1>

<b>* Step 13</b><br>
Finish making the links.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; for ($i = 1; $i </tt>&lt;<tt>= $num_pages; $i++) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; if ($i != $current_page) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (($display * ($i - 1))) . '&amp;np=' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages . '"</tt>&gt;<tt>' . $i . '</tt>&lt;<tt>/a</tt>&gt;<tt> ';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $i . ' ';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; if ($current_page != $num_pages) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start + $display) . '&amp;np=' .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages . '"</tt>&gt;<tt>Next</tt>&lt;<tt>/a</tt>&gt;<tt> ';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br>
<a name="phf019"></a>
<br><dpecjs>The bulk of the links will be created by looping from 1 to 
the total number of pages. Each page will be linked except for the 
current one.
Finally, a Next<i> </i>page link will be displayed, assuming that this is not the final page.
<br>

<a name="phf020"></a>
<br><dpecjs><b>* Step 14</b>
<br>
Save the file as <tt>view_users.php</tt>, upload it to your Web server, and test in your Web browser.
<br>

<a name="phf021"></a>
<br><dpecw1>

Here is the <tt><tt>view_users.php</tt></tt> script in full. This new version of <tt>view_users.php</tt> incorporates pagination so that the users are listed over multiple Web browser pages.

</dpecw1><br><dpeccode>
<br>
<tt></tt>&lt;<tt>?php # view_users.php</tt><br>
<tt>// This script retrieves all the records from the users table.&nbsp;&nbsp; </tt><br>
<tt>// This new version paginates the query results.</tt><br>
<tt>$page_title = 'View the Current Users';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Page header.</tt><br>
<tt>echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Registered Users</tt>&lt;<tt>/h1</tt>&gt;<tt>';</tt><br>
<tt>require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>// Number of records to show per page:</tt><br>
<tt>$display = 10;</tt><br>
<tt>// Determine how many pages there are. </tt><br>
<tt>if (isset($_GET['np'])) { // Already been determined.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$num_pages = $_GET['np'];</tt><br>
<tt>} else { // Need to determine.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Count the number of records</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$query = "SELECT COUNT(*) FROM users ORDER BY registration_date ASC";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$result = mysql_query ($query);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$num_records = $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Calculate the number of pages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($num_records </tt>&gt;<tt> $display) { // More than 1 page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages = ceil ($num_records/$display);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages = 1;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>} // End of np IF.</tt><br>
<tt>// Determine where in the database to start returning results.</tt><br>
<tt>if (isset($_GET['s'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$start = $_GET['s'];</tt><br>
<tt>} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$start = 0;</tt><br>
<tt>}</tt><br>
<tt>// Make the query.</tt><br>
<tt>$query = "SELECT last_name, first_name, </tt><br>
<tt>&nbsp;&nbsp; DATE_FORMAT(registration_date, '%M %d, %Y') AS dr, user_id FROM users</tt><br>
<tt>&nbsp;&nbsp; ORDER BY registration_date ASC LIMIT $start, $display";</tt><br>
<tt>$result = mysql_query ($query); // Run the query.</tt><br>
<tt>// Table header.</tt><br>
<tt>echo '</tt>&lt;<tt>table align="center" cellspacing="0" cellpadding="5"</tt>&gt;<br>
<tt></tt>&lt;<tt>tr</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Edit</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Delete</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Last Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>First Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Date Registered</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>';</tt><br>
<tt>// Fetch and print all the records.</tt><br>
<tt>$bg = '#eeeeee'; // Set the background color.</tt><br>
<tt>while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$bg = ($bg=='#eeeeee' ? '#ffffff' : '#eeeeee'); // Switch the background color.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>tr bgcolor="' . $bg . '"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="edit_user.php?id=' . $row['user_id'] .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'"</tt>&gt;<tt>Edit</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="delete_user.php?id=' . $row['user_id'] .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'"</tt>&gt;<tt>Delete</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<tt></tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['last_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['first_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['dr'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;';</tt><br>
<tt>}</tt><br>
<tt>echo '</tt>&lt;<tt>/table</tt>&gt;<tt>';</tt><br>
<tt>mysql_free_result ($result); // Free up the resources.</tt><br>
<tt>mysql_close(); // Close the database connection.</tt><br>
<tt>// Make the links to other pages, if necessary.</tt><br>
<tt>if ($num_pages &gt; 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Determine what page the script is on.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$current_page = ($start/$display) + 1;</tt><br>
<tt>// If it's not the first page, make a Previous button.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($current_page != 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start - $display) .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; '&amp;np=' . $num_pages . '"</tt>&gt;<tt>Previous</tt>&lt;<tt>/a</tt>&gt;<tt> ';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Make all the numbered pages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;for ($i = 1; $i </tt>&lt;<tt>= $num_pages; $i++) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($i != $current_page) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>a href="view_users.php?s=' . (($display * ($i - 1))) .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&amp;np=' . $num_pages . '"</tt>&gt;<tt>' . $i . '</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo $i . ' ';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// If it's not the last page, make a Next button.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($current_page != $num_pages) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start + $display) .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; '&amp;np=' . $num_pages . '"</tt>&gt;<tt>Next</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>} // End of links section.</tt><br>
<tt>include ('./includes/footer.html'); // Include the HTML footer.</tt><br>
<tt>?</tt>&gt;</dpeccode><br>
<a name="phf022"></a>
<br><b>Security consideration  <br>  </b>  From a security standpoint, it would be better if this script validated <tt>$_GET['np']</tt> and <tt>$_GET['s']</tt>
 to ensure they are numeric.  Such steps have been omitted for brevity, 
but note that you should not assume that data received by a PHP page 
will necessarily be of a certain type or value.  <br><br>  <b>Error handling  <br>  </b>
  Also, no error handling has been included in this script, as we know 
the queries function as written.  If you have problems, remember your 
MySQL/SQL debugging steps: print the query, run it using the mysql 
client or phpMyAdmin to confirm the results, and invoke the <tt>mysql_error()</tt> function as needed.  <br><br>  <b>Ternary operator  <br>  </b>
  The ternary operator derives its name from the fact that there are 
three parts to its structure (the conditional and the two returned 
values). It is also sometimes referred to as the trinary<i> </i>operator.  <br><br>  
<br><a name="phf024a"></a>
<br><dpecw1>
	
<dpeccode>
<br>
<tt></tt>&lt;<tt>?php # view_users.php</tt><br>
<tt>// This script retrieves all the records from the users table.&nbsp;&nbsp; </tt><br>
<tt>// This new version paginates the query results.</tt><br>
<tt>$page_title = 'View the Current Users';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Page header.</tt><br>
<tt>echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Registered Users</tt>&lt;<tt>/h1</tt>&gt;<tt>';</tt><br>
<tt>require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>// Number of records to show per page:</tt><br>
<tt>$display = 10;</tt><br>
<tt>// Determine how many pages there are. </tt><br>
<tt>if (isset($_GET['np'])) { // Already been determined.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$num_pages = $_GET['np'];</tt><br>
<tt>} else { // Need to determine.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Count the number of records</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$query = "SELECT COUNT(*) FROM users</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ORDER BY registration_date ASC";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$result = mysql_query ($query);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$num_records = $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Calculate the number of pages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($num_records </tt>&gt;<tt> $display) { // More than 1 page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages = ceil ($num_records/$display);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages = 1;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>} // End of np IF.</tt><br>
<tt>// Determine where in the database to start returning results.</tt><br>
<tt>if (isset($_GET['s'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$start = $_GET['s'];</tt><br>
<tt>} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$start = 0;</tt><br>
<tt>}</tt><br>
<tt>// Make the query.</tt><br>
<tt>$query = "SELECT last_name, first_name, </tt><br>
<tt>&nbsp;&nbsp; DATE_FORMAT(registration_date, '%M %d, %Y') AS dr, user_id FROM users</tt><br>
<tt>&nbsp;&nbsp; ORDER BY registration_date ASC LIMIT $start, $display";</tt><br>
<tt>$result = mysql_query ($query); // Run the query.</tt><br>
<tt>// Table header.</tt><br>
<tt>echo '</tt>&lt;<tt>table align="center" cellspacing="0" cellpadding="5"</tt>&gt;<br>
<tt></tt>&lt;<tt>tr</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Edit</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Delete</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Last Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>First Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Date Registered</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>';</tt><br>
<tt>// Fetch and print all the records.</tt><br>
<tt>$bg = '#eeeeee'; // Set the background color.</tt><br>
<tt>while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$bg = ($bg=='#eeeeee' ? '#ffffff' : '#eeeeee'); // Switch the</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;background color.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>tr bgcolor="' . $bg . '"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="edit_user.php?id=' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row['user_id'] .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'"</tt>&gt;<tt>Edit</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="delete_user.php?id=' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row['user_id'] .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'"</tt>&gt;<tt>Delete</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<tt></tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['last_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['first_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['dr'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;';</tt><br>
<tt>}</tt><br>
<tt>echo '</tt>&lt;<tt>/table</tt>&gt;<tt>';</tt><br>
<tt>mysql_free_result ($result); // Free up the resources.</tt><br>
<tt>mysql_close(); // Close the database connection.</tt><br>
<tt>// Make the links to other pages, if necessary.</tt><br>
<tt>if ($num_pages &gt; 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Determine what page the script is on.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$current_page = ($start/$display) + 1;</tt><br>
<tt>// If it's not the first page, make a Previous button.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($current_page != 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start - $display) .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; '&amp;np=' . $num_pages . '"</tt>&gt;<tt>Previous</tt>&lt;<tt>/a</tt>&gt;<tt> ';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Make all the numbered pages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;for ($i = 1; $i </tt>&lt;<tt>= $num_pages; $i++) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($i != $current_page) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>a href="view_users.php?s=' . (($display * ($i - 1))) .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&amp;np=' . $num_pages . '"</tt>&gt;<tt>' . $i . '</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo $i . ' ';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// If it's not the last page, make a Next button.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($current_page != $num_pages) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start + $display) .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; '&amp;np=' . $num_pages . '"</tt>&gt;<tt>Next</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>} // End of links section.</tt><br>
<tt>include ('./includes/footer.html'); // Include the HTML footer.</tt><br>
<tt>?</tt>&gt;
</dpeccode>
	
</dpecw1><br><br>
<a name="phf026"></a>

<script language="JavaScript">insertAccQuestion('10','phf026.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phf027"></a>
<br><a name="topic9"></a><h2>Topic 6.1 Exercises</h2><br><b>* Exercise 1</b><dpecw1>

<br>
Try paginating query results.

</dpecw1><br><dpecw2>

<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Step</b>

</th><th class="heading" scope="col">
<b>Action</b>

	</th></tr>
	<tr valign="top">
<td>
1
</td>
<td>
Open the <tt>view_users.php</tt> script in your text editor or IDE. <ml_ins_href><ml_data_href>
</ml_data_href></ml_ins_href></td>
	</tr>
	<tr valign="top">
<td>
2
</td>
<td>
Set the number of records to display per page using a variable.
</td>
	</tr>
	<tr valign="top">
<td>
3
</td>
<td>
Check if the number of required pages has been determined.
</td>
	</tr>
	<tr valign="top">
<td>
4
</td>
<td>
Count the number of records in the database.
</td>
	</tr>
	<tr valign="top">
<td>
5
</td>
<td>
Mathematically calculate how many pages are required.
</td>
	</tr>
	<tr valign="top">
<td>
6
</td>
<td>
Determine the starting point in the database.
</td>
	</tr>
	<tr valign="top">
<td>
7
</td>
<td>
Change the query so that it uses the <tt>LIMIT</tt> clause.
</td>
	</tr>
	<tr valign="top">
<td>
8
</td>
<td>
Delete the references to the <tt>$num</tt> variable.
</td>
	</tr>
	<tr valign="top0">
<td>
9
</td>
<td>
Create a section for displaying links to other pages, if necessary.
</td>
	</tr>
	<tr valign="top1">
<td>
10
</td>
<td>
Save the file, upload it to your Web server, and test it in your Web browser.
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw2><br>
<br><a name="phf027a"></a>
<br><dpecw1>
	
<dpeccode>
<tt></tt>&lt;<tt>?php # view_users.php </tt><br>
<tt>// This script retrieves all the records from the users table.</tt><br>
<tt>// This new version links to edit and delete pages.</tt><br>
<tt>$page_title = 'View the Current Users';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Page header.</tt><br>
<tt>echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Registered Users</tt>&lt;<tt>/h1</tt>&gt;<tt>';</tt><br>
<tt>require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>// Make the query.</tt><br>
<tt>$query = "SELECT last_name, first_name, </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;DATE_FORMAT(registration_date, '%M %d, %Y')</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;AS dr, user_id FROM users ORDER BY registration_date ASC";&nbsp;&nbsp; </tt><br>
<tt>$result = mysql_query ($query); // Run the query.</tt><br>
<tt>$num = mysql_num_rows($result);</tt><br>
<tt>if ($num &gt; 0) { // If it ran OK, display the records.</tt><br>
<tt>echo "</tt>&lt;<tt>p</tt>&gt;<tt>There are currently $num registered users.</tt>&lt;<tt>/p</tt>&gt;<tt>\n";</tt><br>
<tt>// Table header.</tt><br>
<tt>echo '</tt>&lt;<tt>table align="center" cellspacing="0" cellpadding="5"</tt>&gt;<br>
<tt></tt>&lt;<tt>tr</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Edit</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Delete</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Last Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>First Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Date Registered</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>';</tt><br>
<tt>// Fetch and print all the records.</tt><br>
<tt>while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {</tt><br>
<tt>echo '</tt>&lt;<tt>tr</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="edit_user.php?id=' . $row['user_id'] .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;'"</tt>&gt;<tt>Edit</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="delete_user.php?id=' . $row['user_id'] .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;'"</tt>&gt;<tt>Delete</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['last_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['first_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['dr'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>';</tt><br>
<tt>}</tt><br>
<tt>echo '</tt>&lt;<tt>/table</tt>&gt;<tt>';</tt><br>
<tt>mysql_free_result ($result); // Free up the resources.</tt><br>
<tt>} else { // If it did not run OK.</tt><br>
<tt>echo '</tt>&lt;<tt>p class="error"</tt>&gt;<tt>There are currently no registered users.</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>}</tt><br>
<tt>mysql_close(); // Close the database connection.</tt><br>
<tt>include ('./includes/footer.html'); // Include the HTML footer.</tt><br>
<tt>?</tt>&gt;
</dpeccode>
	
</dpecw1><br><br>
<a name="phf028"></a>
<br><dpecw1>
	
In this lesson, you learned how to paginate query results. This displays
 the results as a series of pages and not as one long list making the 
results more user friendly.<br>
You also learned how to display each row of the table using an 
alternating background color. This makes each returned record more 
legible for the user. You used the ternary operator to accomplish this.
	
</dpecw1><br>
<a name="phg001"></a><br><a name="topic10"></a><h2>Lesson 7. Making Sortable Displays</h2><dpecw1>

You can use the <tt>ORDER BY</tt> clause and PHP functionality to indicate a preferred sort order of returned records.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Make sortable displays
	</li>
</ul>

</dpecw1><br>
<a name="phg002"></a>
<br><dpecw1>

Consider the <tt>view_users.php</tt> script. <ml_ins_href><ml_data_href>
 In its current state the list of users is displayed in order by the 
date they registered. It would be nice to be able to view them by name 
as well.<br>
From a MySQL perspective, accomplishing this task is easy: just change the <tt>ORDER BY</tt> clause. Therefore, all we need to do is add some functionality in PHP that will change the <tt>ORDER BY</tt>
 clause. The logical way to do this is to link the column headings so 
that clicking them changes the display order. As you can guess, this 
involves using the <tt>GET</tt> method to pass a parameter back to this page indicating the preferred sort order.<br>
To take this concept just a little bit further, let's say we want the 
sorting links to be contextual. For example, clicking the Last Name<i> </i>column
 the first time will sort the results in ascending order by last name. 
Clicking that same column again should sort the results in descending<i> </i>order by last name. This is easily accomplished by toggling the link's parameters.

</ml_data_href></ml_ins_href></dpecw1><br>
<br><a name="phg002a"></a>
<br><dpecw1>
	
<dpeccode>
<br>
<tt></tt>&lt;<tt>?php # view_users.php</tt><br>
<tt>// This script retrieves all the records from the users table.&nbsp;&nbsp; </tt><br>
<tt>// This new version paginates the query results.</tt><br>
<tt>$page_title = 'View the Current Users';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Page header.</tt><br>
<tt>echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Registered Users</tt>&lt;<tt>/h1</tt>&gt;<tt>';</tt><br>
<tt>require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>// Number of records to show per page:</tt><br>
<tt>$display = 10;</tt><br>
<tt>// Determine how many pages there are. </tt><br>
<tt>if (isset($_GET['np'])) { // Already been determined.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$num_pages = $_GET['np'];</tt><br>
<tt>} else { // Need to determine.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Count the number of records</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$query = "SELECT COUNT(*) FROM users</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ORDER BY registration_date ASC";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$result = mysql_query ($query);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$num_records = $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Calculate the number of pages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($num_records </tt>&gt;<tt> $display) { // More than 1 page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages = ceil ($num_records/$display);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages = 1;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>} // End of np IF.</tt><br>
<tt>// Determine where in the database to start returning results.</tt><br>
<tt>if (isset($_GET['s'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$start = $_GET['s'];</tt><br>
<tt>} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$start = 0;</tt><br>
<tt>}</tt><br>
<tt>// Make the query.</tt><br>
<tt>$query = "SELECT last_name, first_name, </tt><br>
<tt>&nbsp;&nbsp; DATE_FORMAT(registration_date, '%M %d, %Y') AS dr, user_id FROM users</tt><br>
<tt>&nbsp;&nbsp; ORDER BY registration_date ASC LIMIT $start, $display";</tt><br>
<tt>$result = mysql_query ($query); // Run the query.</tt><br>
<tt>// Table header.</tt><br>
<tt>echo '</tt>&lt;<tt>table align="center" cellspacing="0" cellpadding="5"</tt>&gt;<br>
<tt></tt>&lt;<tt>tr</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Edit</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Delete</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Last Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>First Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Date Registered</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>';</tt><br>
<tt>// Fetch and print all the records.</tt><br>
<tt>$bg = '#eeeeee'; // Set the background color.</tt><br>
<tt>while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$bg = ($bg=='#eeeeee' ? '#ffffff' : '#eeeeee'); </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Switch the background color.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>tr bgcolor="' . $bg . '"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="edit_user.php?id=' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row['user_id'] .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'"</tt>&gt;<tt>Edit</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="delete_user.php?id=' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row['user_id'] .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'"</tt>&gt;<tt>Delete</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<tt></tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['last_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['first_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['dr'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;';</tt><br>
<tt>}</tt><br>
<tt>echo '</tt>&lt;<tt>/table</tt>&gt;<tt>';</tt><br>
<tt>mysql_free_result ($result); // Free up the resources.</tt><br>
<tt>mysql_close(); // Close the database connection.</tt><br>
<tt>// Make the links to other pages, if necessary.</tt><br>
<tt>if ($num_pages &gt; 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Determine what page the script is on.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$current_page = ($start/$display) + 1;</tt><br>
<tt>// If it's not the first page, make a Previous button.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($current_page != 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start - </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $display) .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; '&amp;np=' . $num_pages . '"</tt>&gt;<tt>Previous</tt>&lt;<tt>/a</tt>&gt;<tt> ';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Make all the numbered pages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;for ($i = 1; $i </tt>&lt;<tt>= $num_pages; $i++) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($i != $current_page) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>a href="view_users.php?s=' . (($display * ($i - 1))) .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&amp;np=' . $num_pages . '"</tt>&gt;<tt>' . $i . '</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo $i . ' ';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// If it's not the last page, make a Next button.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($current_page != $num_pages) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start + $display) .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; '&amp;np=' . $num_pages . '"</tt>&gt;<tt>Next</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>} // End of links section.</tt><br>
<tt>include ('./includes/footer.html'); // Include the HTML footer.</tt><br>
<tt>?</tt>&gt;</dpeccode></dpecw1><br><br>
<a name="phg003"></a>
<br><dpecw1>

<b>* Step 1</b><br>
Open or create <tt>view_users.php</tt> in your text editor or IDE.

</dpecw1><br><dpeccode>
<br>
<tt></tt>&lt;<tt>?php # view_users.php</tt><br>
<tt>// This script retrieves all the records from the users table.&nbsp;&nbsp; </tt><br>
<tt>// This new version paginates the query results.</tt><br>
<tt>$page_title = 'View the Current Users';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Page header.</tt><br>
<tt>echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Registered Users</tt>&lt;<tt>/h1</tt>&gt;<tt>';</tt><br>
<tt>require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>// Number of records to show per page:</tt><br>
<tt>$display = 10;</tt><br>
<tt>// Determine how many pages there are. </tt><br>
<tt>if (isset($_GET['np'])) { // Already been determined.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$num_pages = $_GET['np'];</tt><br>
<tt>} else { // Need to determine.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Count the number of records</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$query = "SELECT COUNT(*) FROM users ORDER BY registration_date ASC";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$result = mysql_query ($query);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$num_records = $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Calculate the number of pages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($num_records </tt>&gt;<tt> $display) { // More than 1 page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages = ceil ($num_records/$display);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages = 1;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>} // End of np IF.</tt><br>
<tt>// Determine where in the database to start returning results.</tt><br>
<tt>if (isset($_GET['s'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$start = $_GET['s'];</tt><br>
<tt>} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$start = 0;</tt><br>
<tt>}</tt><br>
<tt>// Make the query.</tt><br>
<tt>$query = "SELECT last_name, first_name, DATE_FORMAT(</tt><br>
<tt>&nbsp;&nbsp; DATE_FORMAT(registration_date, '%M %d, %Y') AS dr, user_id FROM users</tt><br>
<tt>&nbsp;&nbsp; ORDER BY registration_date ASC LIMIT $start, $display";</tt><br>
<tt>$result = mysql_query ($query); // Run the query.</tt><br>
<tt>// Table header.</tt><br>
<tt>echo '</tt>&lt;<tt>table align="center" cellspacing="0" cellpadding="5"</tt>&gt;<br>
<tt></tt>&lt;<tt>tr</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Edit</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Delete</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Last Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>First Name</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Date Registered</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt></tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>';</tt><br>
<tt>// Fetch and print all the records.</tt><br>
<tt>$bg = '#eeeeee'; // Set the background color.</tt><br>
<tt>while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$bg = ($bg=='#eeeeee' ? '#ffffff' : '#eeeeee'); // Switch the background color.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>tr bgcolor="' . $bg . '"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="edit_user.php?id=' . $row['user_id'] .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'"</tt>&gt;<tt>Edit</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="delete_user.php?id=' . $row['user_id'] .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'"</tt>&gt;<tt>Delete</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<tt></tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['last_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['first_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['dr'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;';</tt><br>
<tt>}</tt><br>
<tt>echo '</tt>&lt;<tt>/table</tt>&gt;<tt>';</tt><br>
<tt>mysql_free_result ($result); // Free up the resources.</tt><br>
<tt>mysql_close(); // Close the database connection.</tt><br>
<tt>// Make the links to other pages, if necessary.</tt><br>
<tt>if ($num_pages &gt; 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Determine what page the script is on.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$current_page = ($start/$display) + 1;</tt><br>
<tt>// If it's not the first page, make a Previous button.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($current_page != 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start - $display) .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; '&amp;np=' . $num_pages . '"</tt>&gt;<tt>Previous</tt>&lt;<tt>/a</tt>&gt;<tt> ';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Make all the numbered pages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;for ($i = 1; $i </tt>&lt;<tt>= $num_pages; $i++) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($i != $current_page) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>a href="view_users.php?s=' . (($display * ($i - 1))) .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&amp;np=' . $num_pages . '"</tt>&gt;<tt>' . $i . '</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo $i . ' ';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// If it's not the last page, make a Next button.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($current_page != $num_pages) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start + $display) .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; '&amp;np=' . $num_pages . '"</tt>&gt;<tt>Next</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>} // End of links section.</tt><br>
<tt>include ('./includes/footer.html'); // Include the HTML footer.</tt><br>
<tt>?</tt>&gt;</dpeccode><br>
<a name="phg004"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Before the main query, define the default links.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $link1 = "{$_SERVER['PHP_SELF']} ?sort=lna";</tt><br>
<tt>&nbsp;&nbsp; $link2 = "{$_SERVER['PHP_SELF']} ?sort=fna";</tt><br>
<tt>&nbsp;&nbsp; $link3 = "{$_SERVER['PHP_SELF']} ?sort=dra";&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

These variables define the default link values for the Last Name (<tt>$link1</tt>), First Name (<tt>$link2</tt>), and Date Registered<i> </i>(<tt>$link3</tt>) columns. Each link should be something like <tt>view_users.php?sort=<i>XXX</i></tt>, where <tt><i>XXX</i></tt> represents the new sorting order.<br>
We haven't hard-coded <tt>view_users.php</tt> as the link because if 
later we want to apply this same technique to another script, we'll need
 to find and change the link name multiple times. Instead use <tt>$_SERVER['PHP_SELF']</tt>, which is a way for a script to refer to itself.<br>
The abbreviations for the three links stand for last name ascending, first name ascending, and date registered ascending.

</dpecw2><br>
<a name="phg005"></a>
<br><dpecw1>

<b>* Step 3</b><br>
Check if a sorting order has already been determined.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (isset($_GET['sort'])) {&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

As with <tt>$_GET['np']</tt> and <tt>$_GET['s']</tt>, the sorting order will be passed in the URL, so it should be available in <tt>$_GET['sort']</tt>. This only applies when the user accesses multiple results pages, though.

</dpecw2><br>
<a name="phg006"></a>
<br><dpecw1>

<b>* Step 4</b><br>
Begin defining a <tt>switch</tt> conditional that determines how the results should be sorted.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; switch ($_GET['sort']) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; case 'lna':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $order_by = 'last_name ASC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $link1 = "{$_SERVER['PHP_SELF'] }?sort=lnd";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; break;</tt><br>
<tt>&nbsp;&nbsp; case 'lnd':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $order_by = 'last_name DESC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $link1 = "{$_SERVER['PHP_SELF'] }?sort=lna";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; break; </tt><br>
</dpeccode><br><dpecw2>

The switch checks <tt>$_GET['sort']</tt> against several expected values. If, for example, it is equal to <tt><tt>lna</tt></tt>, then the results should be ordered by the last name in ascending order. The assigned <tt>$order_by</tt> variable will be used in the SQL query. 
Because we want the links to be contextual, also change the appropriate link value based upon <tt>$_GET['sort']</tt>. If the results are going to be displayed in ascending order by last name (<tt><tt>lna</tt></tt>), then the Last Name column link should be to display the result in descending order by last name (<tt><tt>lnd</tt></tt>). So for each case in the <tt>switch</tt>, the appropriate link is given a new value.

</dpecw2><br>
<a name="phg007"></a>
<br><dpecw1>

<b>* Step 5</b><br>
Complete the <tt>switch</tt> conditional. There are six total conditions to check against, plus the default (just in case). For each the <tt>$order_by</tt>
 variable is defined as it will be used in the query and the appropriate
 link is redefined. Since each link has already been given a default 
value (Step 2), we only need to change a single link's value for each 
case.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; case 'fna':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $order_by = 'first_name ASC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $link2 = "{$_SERVER['PHP_SELF']} ?sort=fnd";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; break;</tt><br>
<tt>&nbsp;&nbsp; case 'fnd':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $order_by = 'first_name DESC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $link2 = "{$_SERVER['PHP_SELF']} ?sort=fna";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; break;</tt><br>
<tt>&nbsp;&nbsp; case 'dra':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $order_by = 'registration_date ASC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $link3 = "{$_SERVER['PHP_SELF']} ?sort=drd";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; break;</tt><br>
<tt>&nbsp;&nbsp; case 'drd':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $order_by = 'registration_date DESC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $link3 = "{$_SERVER['PHP_SELF']} ?sort=dra";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; break;</tt><br>
<tt>&nbsp;&nbsp; default:</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $order_by = 'registration_date DESC;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; break;</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br>
<a name="phg008"></a>
<br><dpecw1>

<b>* Step 6</b><br>
Complete the <tt>isset()</tt> conditional.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $sort = $_GET['sort'];</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; $order_by = 'registration_date ASC;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $sort = 'rdd';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br><dpecw2>

The <tt>$sort</tt> variable will need to be appended to the pagination links, like <tt>$s</tt> and <tt>$np</tt>. If <tt>$_GET['sort']</tt> is set, then <tt>$sort</tt> should have that value. Otherwise, the page's default <tt>$order_by</tt> and <tt>$sort</tt> values are used.

</dpecw2><br>
<a name="phg009"></a>
<br><dpecw1>

<b>* Step 7</b><br>
Modify the query to use the new <tt>$order_by</tt> variable.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $query = "SELECT last_name, first_name,</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DATE_FORMAT(registration_date, '%M %d, %Y')&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AS dr, user_id FROM users ORDER BY $order_by&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LIMIT $start, $display"; </tt><br>
</dpeccode><br><dpecw2>

By this point, the <tt>$order_by</tt> variable has a value indicating how the returned results should be ordered (for example, <tt><tt>registration_date DESC</tt></tt><i>)</i>, so it can be easily added to the query. Remember that the <tt>ORDER BY</tt> clause comes before the <tt>LIMIT</tt> clause. If the resulting query doesn't run properly for you, print it out and inspect the dynamically-generated syntax.

</dpecw2><br>
<a name="phg010"></a>
<br><dpecw1>

<b>* Step 8</b><br>
Modify the table header <tt>echo</tt> statement to create links out of the column headings. 

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>table align="center" cellspacing="0" cellpadding="5"</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>tr</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Edit</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Delete</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;&lt;<tt>a href="' . $link1 . '"</tt>&gt;<tt>Last Name</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;&lt;<tt>a href="' . $link2 . '"</tt>&gt;<tt>First Name</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt> &gt;&lt;<tt>b</tt>&gt;&lt;<tt>a href="' . $link3 . '"</tt>&gt;<tt>Date Registered</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>&nbsp;&nbsp; '; </tt>
</dpeccode><br><dpecw2>

To make the column headings clickable links, just surround them with the <tt>&lt;a&gt;</tt> tags. The value of the <tt>href</tt> attribute for each link has already been determined and assigned to <tt>$link1</tt>, <tt>$link2</tt>, and <tt>$link3</tt>.

</dpecw2><br>
<a name="phg011"></a>
<br><dpecw1>

<b>* Step 9</b><br>
Modify the <tt>echo</tt> statement that creates the Previous<i> </i>link so that the sort value is also passed.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start $display) .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; '&amp;np=' . $num_pages . '&amp;sort=' . $sort .'"</tt>&gt;<tt>Previous</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

We've added another <i><tt>name</tt></i><tt>=</tt><i><tt>value</tt> </i>pair to the Previous<i> </i>link so that the sort order is also sent to each page of results.

</dpecw2><br>
<a name="phg012"></a>
<br><dpecw1>

<b>* Step 10</b><br>
Repeat Step 9 for the numbered pages and the Next<i> </i>link.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . (($display * ($i - 1))) .&nbsp;&nbsp;&nbsp;&nbsp;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; '&amp;np=' . $num_pages . '&amp;sort=' . $sort .'"</tt>&gt;<tt>' . $i . '</tt>&lt;<tt>/a</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start + $display) . </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; '&amp;np=' . $num_pages . '&amp;sort=' . $sort .'"&gt;Next</tt>&lt;<tt>/a</tt>&gt;<tt>';</tt><br>
</dpeccode><br>
<a name="phg013"></a>
<br><dpecjs><b>* Step 11</b>
<br>
Save the file as <tt>view_users.php</tt>, upload it to your Web server, 
and run in your Web browser. Clicking the Last Name column displays the 
results in order by last name ascending.
<br>

<a name="phg014"></a>
<br><dpecjs>Clicking the Last Name column again displays the results in order by last name descending.
<br>

<a name="phg015"></a>
<br><dpecw1>

Here is the latest version of the <tt>view_users.php</tt> script which 
creates clickable links out of the table's column headings. Clicking one
 of these links redisplays the results in a different order.

</dpecw1><br><dpeccode>
<br>
<tt></tt>&lt;<tt>?php # view_users.php </tt><br>
<tt>// This script retrieves all the records from the users table.</tt><br>
<tt>// This new version allows the results to be sorted in different ways.</tt><br>
<tt>$page_title = 'View the Current Users';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Page header.</tt><br>
<tt>echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Registered Users</tt>&lt;<tt>/h1</tt>&gt;<tt>';</tt><br>
<tt>require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>// Number of records to show per page:</tt><br>
<tt>$display = 10;</tt><br>
<tt>// Determine how many pages there are. </tt><br>
<tt>if (isset($_GET['np'])) { // Already been determined.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$num_pages = $_GET['np'];</tt><br>
<tt>} else { // Need to determine.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Count the number of records</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$query = "SELECT COUNT(*) FROM users ORDER BY registration_date ASC";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$result = @mysql_query ($query);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$num_records = $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Calculate the number of pages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($num_records </tt>&gt;<tt> $display) { // More than 1 page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages = ceil ($num_records/$display);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages = 1;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>} // End of np IF.</tt><br>
<tt>// Determine where in the database to start returning results.</tt><br>
<tt>if (isset($_GET['s'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$start = $_GET['s'];</tt><br>
<tt>} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$start = 0;</tt><br>
<tt>}</tt><br>
<tt>// Default column links.</tt><br>
<tt>$link1 = "{$_SERVER['PHP_SELF']}?sort=lna";</tt><br>
<tt>$link2 = "{$_SERVER['PHP_SELF']}?sort=fna";</tt><br>
<tt>$link3 = "{$_SERVER['PHP_SELF']}?sort=dra";</tt><br>
<tt>// Determine the sorting order.</tt><br>
<tt>if (isset($_GET['sort'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Use existing sorting order.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;switch ($_GET['sort']) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'lna':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'last_name ASC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link1 = "{$_SERVER['PHP_SELF']}?sort=lnd";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'lnd':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'last_name DESC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link1 = "{$_SERVER['PHP_SELF']}?sort=lna";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'fna':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'first_name ASC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link2 = "{$_SERVER['PHP_SELF']}?sort=fnd";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'fnd':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'first_name DESC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link2 = "{$_SERVER['PHP_SELF']}?sort=fna";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'dra':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'registration_date ASC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link3 = "{$_SERVER['PHP_SELF']}?sort=drd";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'drd':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'registration_date DESC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link3 = "{$_SERVER['PHP_SELF']}?sort=dra";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; default:</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'registration_date DESC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// $sort will be appended to the pagination links.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$sort = $_GET['sort'];</tt><br>
<tt>} else { // Use the default sorting order.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'registration_date ASC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$sort = 'drd';</tt><br>
<tt>}</tt><br>
<tt>// Make the query.</tt><br>
<tt>$query = "SELECT last_name, first_name, </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;DATE_FORMAT(registration_date, '%M %d, %Y') AS dr, user_id FROM users ORDER BY</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$order_by LIMIT $start, $display";</tt><br>
<tt>$result = @mysql_query ($query); // Run the query.</tt><br>
<tt>// Table header.</tt><br>
<tt>echo '</tt>&lt;<tt>table align="center" cellspacing="0" cellpadding="5"</tt>&gt;<br>
<tt></tt>&lt;<tt>tr</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Edit</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Delete</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;&lt;<tt>a href="' . $link1 . '"</tt>&gt;<tt>Last Name</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;&lt;<tt>a href="' . $link2 . '"</tt>&gt;<tt>First Name</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;&lt;<tt>a href="' . $link3 . '"</tt>&gt;<tt>Date Registered</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<tt></tt><br>
<tt></tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>';</tt><br>
<tt>// Fetch and print all the records.</tt><br>
<tt>$bg = '#eeeeee'; // Set the background color.</tt><br>
<tt>while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$bg = ($bg=='#eeeeee' ? '#ffffff' : '#eeeeee'); // Switch the background color.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>tr bgcolor="' . $bg . '"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="edit_user.php?id=' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row['user_id'] . '"&gt;Edit</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="delete_user.php?id=' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row['user_id'] . '"</tt>&gt;<tt>Delete</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['last_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['first_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['dr'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;';</tt><br>
<tt>}</tt><br>
<tt>echo '</tt>&lt;<tt>/table</tt>&gt;<tt>';</tt><br>
<tt>mysql_free_result ($result); // Free up the resources.</tt><br>
<tt>mysql_close(); // Close the database connection.</tt><br>
<tt>// Make the links to other pages, if necessary.</tt><br>
<tt>if ($num_pages </tt>&gt;<tt> 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Determine what page the script is on.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$current_page = ($start/$display) + 1;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// If it's not the first page, make a Previous button.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($current_page != 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start - $display) . '&amp;np=' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages . '&amp;sort=' . $sort .'"</tt>&gt;<tt>Previous</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Make all the numbered pages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;for ($i = 1; $i </tt>&lt;<tt>= $num_pages; $i++) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($i != $current_page) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>a href="view_users.php?s=' . (($display * ($i - 1))) . </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&amp;np=' . $num_pages . '&amp;sort=' . $sort .'"</tt>&gt;<tt>' . $i . '</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo $i . ' ';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// If it's not the last page, make a Next button.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($current_page != $num_pages) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start + $display) . '&amp;np=' . </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages . '&amp;sort=' . $sort .'"</tt>&gt;<tt>Next</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>} // End of links section.</tt><br>
<tt>include ('./includes/footer.html'); // Include the HTML footer.</tt><br>
<tt>?</tt>&gt;</dpeccode><br>
<a name="phg016"></a>
<br><dpecw1>
	
A very important security concept was also demonstrated in this example. Instead of using the value of <tt>$_GET['sort']</tt> directly in the query, we check it against assumed values in a <tt>switch</tt>. If, for some reason, <tt>$_GET['sort']</tt>
 has a value other than we would expect, the query uses a default 
sorting order. The point is this: don't make assumptions about received 
data and don't use unvalidated data in a SQL query.
	
</dpecw1><br>
<br><a name="phg018a"></a>
<br><dpecw1>
	
<dpeccode>
<br>
<tt></tt>&lt;<tt>?php # view_users.php </tt><br>
<tt>// This script retrieves all the records from the users table.</tt><br>
<tt>// This new version allows the results to be sorted in different ways.</tt><br>
<tt>$page_title = 'View the Current Users';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Page header.</tt><br>
<tt>echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Registered Users</tt>&lt;<tt>/h1</tt>&gt;<tt>';</tt><br>
<tt>require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>// Number of records to show per page:</tt><br>
<tt>$display = 10;</tt><br>
<tt>// Determine how many pages there are. </tt><br>
<tt>if (isset($_GET['np'])) { // Already been determined.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$num_pages = $_GET['np'];</tt><br>
<tt>} else { // Need to determine.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Count the number of records</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$query = "SELECT COUNT(*) FROM users ORDER BY</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;registration_date ASC";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$result = @mysql_query ($query);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$num_records = $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Calculate the number of pages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($num_records </tt>&gt;<tt> $display) { // More than 1 page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages = ceil ($num_records/$display);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages = 1;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>} // End of np IF.</tt><br>
<tt>// Determine where in the database to start returning results.</tt><br>
<tt>if (isset($_GET['s'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$start = $_GET['s'];</tt><br>
<tt>} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$start = 0;</tt><br>
<tt>}</tt><br>
<tt>// Default column links.</tt><br>
<tt>$link1 = "{$_SERVER['PHP_SELF']}?sort=lna";</tt><br>
<tt>$link2 = "{$_SERVER['PHP_SELF']}?sort=fna";</tt><br>
<tt>$link3 = "{$_SERVER['PHP_SELF']}?sort=dra";</tt><br>
<tt>// Determine the sorting order.</tt><br>
<tt>if (isset($_GET['sort'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Use existing sorting order.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;switch ($_GET['sort']) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'lna':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'last_name ASC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link1 = "{$_SERVER['PHP_SELF']}?sort=lnd";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'lnd':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'last_name DESC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link1 = "{$_SERVER['PHP_SELF']}?sort=lna";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'fna':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'first_name ASC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link2 = "{$_SERVER['PHP_SELF']}?sort=fnd";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'fnd':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'first_name DESC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link2 = "{$_SERVER['PHP_SELF']}?sort=fna";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'dra':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'registration_date ASC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link3 = "{$_SERVER['PHP_SELF']}?sort=drd";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'drd':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'registration_date DESC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link3 = "{$_SERVER['PHP_SELF']}?sort=dra";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; default:</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'registration_date DESC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// $sort will be appended to the pagination links.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$sort = $_GET['sort'];</tt><br>
<tt>} else { // Use the default sorting order.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'registration_date ASC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$sort = 'drd';</tt><br>
<tt>}</tt><br>
<tt>// Make the query.</tt><br>
<tt>$query = "SELECT last_name, first_name, </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;DATE_FORMAT(registration_date, '%M %d, %Y') AS dr, user_id FROM users ORDER BY</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$order_by LIMIT $start, $display";</tt><br>
<tt>$result = @mysql_query ($query); // Run the query.</tt><br>
<tt>// Table header.</tt><br>
<tt>echo '</tt>&lt;<tt>table align="center" cellspacing="0" cellpadding="5"</tt>&gt;<br>
<tt></tt>&lt;<tt>tr</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Edit</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Delete</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;&lt;<tt>a href="' . $link1 . '"</tt>&gt;<tt>Last Name</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<tt></tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;&lt;<tt>a href="' . $link2 . '"</tt>&gt;<tt>First Name</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<tt></tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;&lt;<tt>a href="' . $link3 . '"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date Registered</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<tt></tt><br>
<tt></tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>';</tt><br>
<tt>// Fetch and print all the records.</tt><br>
<tt>$bg = '#eeeeee'; // Set the background color.</tt><br>
<tt>while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$bg = ($bg=='#eeeeee' ? '#ffffff' : '#eeeeee'); </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Switch the background color.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>tr bgcolor="' . $bg . '"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="edit_user.php?id=' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row['user_id'] . '"&gt;Edit</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="delete_user.php?id=' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row['user_id'] . '"</tt>&gt;<tt>Delete</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['last_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['first_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['dr'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;';</tt><br>
<tt>}</tt><br>
<tt>echo '</tt>&lt;<tt>/table</tt>&gt;<tt>';</tt><br>
<tt>mysql_free_result ($result); // Free up the resources.</tt><br>
<tt>mysql_close(); // Close the database connection.</tt><br>
<tt>// Make the links to other pages, if necessary.</tt><br>
<tt>if ($num_pages </tt>&gt;<tt> 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Determine what page the script is on.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$current_page = ($start/$display) + 1;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// If it's not the first page, make a Previous button.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($current_page != 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start - $display) . '&amp;np=' .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages . '&amp;sort=' . $sort .'"</tt>&gt;<tt>Previous</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Make all the numbered pages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;for ($i = 1; $i </tt>&lt;<tt>= $num_pages; $i++) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($i != $current_page) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>a href="view_users.php?s=' . (($display * ($i - 1))) . </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&amp;np=' . $num_pages . '&amp;sort=' . $sort .'"</tt>&gt;<tt>' . $i . '</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo $i . ' ';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// If it's not the last page, make a Next button.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($current_page != $num_pages) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start + $display) . '&amp;np=' . </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages . '&amp;sort=' . $sort .'"</tt>&gt;<tt>Next</tt>&lt;<tt>/a</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>/p</tt>&gt;<tt> ';</tt><br>
<tt>} // End of links section.</tt><br>
<tt>include ('./includes/footer.html'); // Include the HTML footer.</tt><br>
<tt>?</tt>&gt;</dpeccode></dpecw1><br><br>
<br><a name="phg019a"></a>
<br><dpecw1>
	
<dpeccode>
<br>
<tt></tt>&lt;<tt>?php # view_users.php </tt><br>
<tt>// This script retrieves all the records from the users table.</tt><br>
<tt>// This new version allows the results to be sorted in different ways.</tt><br>
<tt>$page_title = 'View the Current Users';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Page header.</tt><br>
<tt>echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Registered Users</tt>&lt;<tt>/h1</tt>&gt;<tt>';</tt><br>
<tt>require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>// Number of records to show per page:</tt><br>
<tt>$display = 10;</tt><br>
<tt>// Determine how many pages there are. </tt><br>
<tt>if (isset($_GET['np'])) { // Already been determined.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$num_pages = $_GET['np'];</tt><br>
<tt>} else { // Need to determine.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Count the number of records</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$query = "SELECT COUNT(*) FROM users ORDER BY</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;registration_date ASC";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$result = @mysql_query ($query);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$num_records = $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Calculate the number of pages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($num_records </tt>&gt;<tt> $display) { // More than 1 page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages = ceil ($num_records/$display);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages = 1;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>} // End of np IF.</tt><br>
<tt>// Determine where in the database to start returning results.</tt><br>
<tt>if (isset($_GET['s'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$start = $_GET['s'];</tt><br>
<tt>} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$start = 0;</tt><br>
<tt>}</tt><br>
<tt>// Default column links.</tt><br>
<tt>$link1 = "{$_SERVER['PHP_SELF']}?sort=lna";</tt><br>
<tt>$link2 = "{$_SERVER['PHP_SELF']}?sort=fna";</tt><br>
<tt>$link3 = "{$_SERVER['PHP_SELF']}?sort=dra";</tt><br>
<tt>// Determine the sorting order.</tt><br>
<tt>if (isset($_GET['sort'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Use existing sorting order.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;switch ($_GET['sort']) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'lna':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'last_name ASC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link1 = "{$_SERVER['PHP_SELF']}?sort=lnd";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'lnd':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'last_name DESC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link1 = "{$_SERVER['PHP_SELF']}?sort=lna";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'fna':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'first_name ASC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link2 = "{$_SERVER['PHP_SELF']}?sort=fnd";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'fnd':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'first_name DESC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link2 = "{$_SERVER['PHP_SELF']}?sort=fna";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'dra':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'registration_date ASC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link3 = "{$_SERVER['PHP_SELF']}?sort=drd";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 'drd':</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'registration_date DESC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$link3 = "{$_SERVER['PHP_SELF']}?sort=dra";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; default:</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'registration_date DESC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// $sort will be appended to the pagination links.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$sort = $_GET['sort'];</tt><br>
<tt>} else { // Use the default sorting order.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$order_by = 'registration_date ASC';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$sort = 'drd';</tt><br>
<tt>}</tt><br>
<tt>// Make the query.</tt><br>
<tt>$query = "SELECT last_name, first_name, </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;DATE_FORMAT(registration_date, '%M %d, %Y') AS dr, user_id FROM users ORDER BY</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$order_by LIMIT $start, $display";</tt><br>
<tt>$result = @mysql_query ($query); // Run the query.</tt><br>
<tt>// Table header.</tt><br>
<tt>echo '</tt>&lt;<tt>table align="center" cellspacing="0" cellpadding="5"</tt>&gt;<br>
<tt></tt>&lt;<tt>tr</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Edit</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Delete</tt>&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;&lt;<tt>a href="' . $link1 . '"</tt>&gt;<tt>Last Name</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<tt></tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;&lt;<tt>a href="' . $link2 . '"</tt>&gt;<tt>First Name</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<tt></tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>b</tt>&gt;&lt;<tt>a href="' . $link3 . '"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date Registered</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/b</tt>&gt;&lt;<tt>/td</tt>&gt;<tt></tt><br>
<tt></tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>';</tt><br>
<tt>// Fetch and print all the records.</tt><br>
<tt>$bg = '#eeeeee'; // Set the background color.</tt><br>
<tt>while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$bg = ($bg=='#eeeeee' ? '#ffffff' : '#eeeeee'); </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Switch the background color.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>tr bgcolor="' . $bg . '"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="edit_user.php?id=' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row['user_id'] . '"&gt;Edit</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;&lt;<tt>a href="delete_user.php?id=' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row['user_id'] . '"</tt>&gt;<tt>Delete</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['last_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['first_name'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>td align="left"</tt>&gt;<tt>' . $row['dr'] . '</tt>&lt;<tt>/td</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/tr</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;';</tt><br>
<tt>}</tt><br>
<tt>echo '</tt>&lt;<tt>/table</tt>&gt;<tt>';</tt><br>
<tt>mysql_free_result ($result); // Free up the resources.</tt><br>
<tt>mysql_close(); // Close the database connection.</tt><br>
<tt>// Make the links to other pages, if necessary.</tt><br>
<tt>if ($num_pages </tt>&gt;<tt> 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Determine what page the script is on.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;$current_page = ($start/$display) + 1;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// If it's not the first page, make a Previous button.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($current_page != 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start - $display) . '&amp;np=' .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages . '&amp;sort=' . $sort .'"</tt>&gt;<tt>Previous</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// Make all the numbered pages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;for ($i = 1; $i </tt>&lt;<tt>= $num_pages; $i++) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($i != $current_page) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>a href="view_users.php?s=' . (($display * ($i - 1))) . </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&amp;np=' . $num_pages . '&amp;sort=' . $sort .'"</tt>&gt;<tt>' . $i . '</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo $i . ' ';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;// If it's not the last page, make a Next button.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;if ($current_page != $num_pages) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>a href="view_users.php?s=' . ($start + $display) . '&amp;np=' . </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $num_pages . '&amp;sort=' . $sort .'"</tt>&gt;<tt>Next</tt>&lt;<tt>/a</tt>&gt;<tt> ';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>} // End of links section.</tt><br>
<tt>include ('./includes/footer.html'); // Include the HTML footer.</tt><br>
<tt>?</tt>&gt;</dpeccode></dpecw1><br><br>
<a name="phg020"></a>
<br><dpecw1>
	
In this lesson, you learned how to make sortable displays. Sortable 
displays are useful because they allow a user to redisplay results in a 
different order.<br>
You learned how to change the <tt>ORDER BY</tt> clause and add some 
functionality in PHP to allow a user to click a column heading to change
 the display order. You also learned how to make the sorting links 
contextual by toggling the link's parameters.
	
</dpecw1><br>
<a name="phh001"></a><br><a name="topic11"></a><h2>Lesson 8. Understanding HTTP Headers</h2><dpecw1>

When a Web browser requests a Web page, it receives a series of HTTP headers in return. PHP's <tt>header()</tt> function can be used to redirect the Web browser from the current page to another.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Use the <tt>header()</tt> function
	</li>
</ul>

</dpecw1><br>
<a name="phh002"></a>
<br><dpecw1>

HTTP (Hypertext Transfer Protocol) is the technology at the heart of the
 World Wide Web because it defines the way clients and servers 
communicate (in layman's terms).<br>
PHP's built-in <tt>header()</tt> function can be used to take advantage of this protocol. The most common example of this will be demonstrated here, when the <tt>header()</tt> function will be used to redirect the Web browser from the current page to another.<br>
To use <tt>header()</tt> to redirect the Web browser, type the following:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; header ('Location: http://www.mycompany.com/page.php');&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

Because this should be the last thing to occur on the current page 
(since the browser will soon be leaving it), this line would normally be
 followed by a call to the <tt>exit()</tt> function, which stops execution of the current script.

</dpecw2><br>
<a name="phh003"></a>
<br><dpecjs>The absolutely critical thing to remember about the <tt>header()</tt> function is that it must be called before anything<i> </i>is sent to the Web browser. This includes HTML or even blank spaces. If your code has any <tt>echo()</tt> or <tt>print()</tt> statements, has blank lines outside of PHP tags, or includes files that do any of these things before calling <tt>header()</tt>, you'll see an error message.
<br>

<a name="phh004"></a>
<br><dpecw1>

You can avoid this problem using the <tt>headers_sent()</tt> function, which checks whether or not data has been sent to the Web browser.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (!headers_sent()) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; header ('Location: http://www.mycompany.com/page.php');&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; exit();</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; echo 'Wanted to redirect you but I could not do it!';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } </tt><br>
</dpeccode><br>
<a name="phh005"></a>
<br><dpecw1>

Let's write a registration script so that the user is redirected to a 
thank-you page upon successful registration. To do so will require 
structuring the page to ensure that no text is sent to the browser 
before we call <tt>header()</tt>. Also, since <tt>header()</tt> calls should use an absolute URL (<tt>http://www.mycompany.com/page.php</tt>) instead of a relative one (<tt>page.php</tt>), the <tt>$_SERVER</tt> variable will be used to dynamically determine the full redirection URL.<br>
<b>* Step 1</b><br>
Create a new PHP page in your text editor or IDE.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # register.php&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phh006"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Check if the form has been submitted.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

Notice that we are not including the HTML header before this line. We 
need the script to be able to redirect the user once they've registered,
 so we cannot include the header file (sending its HTML to the Web 
browser) beforehand.

</dpecw2><br>
<a name="phh007"></a>
<br><dpecw1>

<b>* Step 3</b><br>
Include the MySQL connection script and initialize the <tt>$errors</tt> array. 

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; require_once ('./mysql_connect.php');&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $errors = array();</tt><br>
</dpeccode><br><dpecw2>

We don't need to define the <tt>escape_data()</tt> function in this script, as it is now defined within <tt>mysql_connect.php</tt>.

</dpecw2><br>
<a name="phh008"></a>
<br><dpecw1>

<b>* Step 4</b><br>
Validate the form inputs.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (empty($_POST['first_name'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your first name.';</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $fn = escape_data($_POST['first_name']);</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; if (empty($_POST['last_name'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your last name.';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $ln = escape_data($_POST['last_name']);</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; if (!empty($_POST['password1'])) {</tt><br>
<tt>&nbsp;&nbsp; if ($_POST['password1'] != $_POST ['password2']) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'Your password did not match the confirmed password.';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST ['password1']);</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp; } </tt><br>
</dpeccode><br>
<a name="phh009"></a>
<br><dpecw1>

<b>* Step 5</b><br>
If there were no registration errors, check if the email address has already been registered, and then run the <tt>INSERT</tt> query.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (empty($errors)) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT user_id FROM users WHERE email='$e'";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $result = mysql_query($query);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; if (mysql_num_rows($result) == 0) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "INSERT INTO users (first_name, last_name,</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;email, password, registration_date) VALUES</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ('$fn', '$ln', '$e', SHA('$p'), NOW() )";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($result) { </tt><br>
</dpeccode><br>
<a name="phh010"></a>
<br><dpecw1>

<b>* Step 6</b><br>
Dynamically determine the redirection URL and then call the <tt>header()</tt> function.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $url = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; if ((substr($url, -1) == '/') OR</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; (substr($url, -1) == '\\') ) {$url = substr ($url, 0, -1);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; $url .= '/thanks.php';</tt><br>
<tt>&nbsp;&nbsp; header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp; exit();</tt><br>
</dpeccode><br><dpecw2>

Before calling the <tt>header()</tt> function, we need to determine the absolute URL (you can just make <tt>$url</tt> equal to <tt><tt>thanks.php</tt></tt>, but it's better to be absolute). To start, assign <tt>$url</tt> the value of <tt><tt>http://</tt></tt><i> </i>plus the host name (which could be either <tt><tt>localhost</tt></tt><i> </i>or <tt><tt>www.mycompany.com</tt></tt>). To this add the name of the current directory using the <tt>dirname()</tt> function, in case the redirection is taking place within a subfolder.

</dpecw2><br>
<a name="phh011"></a>
<br><dpecw1>

Because the existence of a subfolder might add an extra slash (<tt>/</tt>) or backslash (<tt>\</tt>, for Windows), we have to check for and remove this. To do so, use the <tt>substr()</tt> function to see if the last character in <tt>$url</tt> is either <tt>/</tt> or <tt>\</tt>.<br>
But since the backslash is the escape character in PHP, we need to use <tt>\\</tt> to refer to a single backslash. If <tt>$url</tt> concludes with either of these characters, the <tt>substr()</tt> function is then called again to assign <tt>$url</tt> the value of <tt>$url</tt> minus this last character.<br>
Finally, the specific page name is appended to the <tt>$url</tt>. This 
may all seem to be quite complicated, but it's a very effective way to 
ensure that the redirection works no matter on what server, or from what
 directory, the script is being run. 
The <tt>header()</tt> function will then send the user to a thank-you 
page if everything went OK. Then the script is exited, which means that 
everything else in the script will not be executed.

</dpecw1><br>
<a name="phh012"></a>
<br><dpecw1>

<b>* Step 7</b><br>
Complete the <tt>INSERT</tt>, email, and <tt>$errors</tt> conditionals. The existing <tt>$errors</tt> array is used to handle all errors, even system ones.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You could not be registered due to a system error.&nbsp;&nbsp;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; We apologize for any inconvenience.';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[] = mysql_error() . '&lt;br /&gt;&lt;br /&gt;Query: ' . $query;</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; $errors[] = 'The email address has already been registered.';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br>
<a name="phh013"></a>
<br><dpecw1>

<b>* Step 8</b><br>
Close the database connection and complete the submission conditional.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; mysql_close();</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; $errors = NULL;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } </tt><br>
</dpeccode><br><dpecw2>

The <tt>else</tt> clause takes effect if the page has not yet been 
submitted. In that case, we need to indicate that there are no errors, 
which we do by initializing that variable with a <tt>NULL</tt> value.

</dpecw2><br>
<a name="phh014"></a>
<br><dpecw1>

<b>* Step 9</b><br>
Include the HTML header.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $page_title = 'Register';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

After the main conditional and once the <tt>header()</tt> function would have been called, it's now safe to use the included file.

</dpecw2><br>
<a name="phh015"></a>
<br><dpecw1>

<b>* Step 10</b><br>
Print out any error messages.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (!empty($errors)) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Error!</tt>&lt;<tt>/h1</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p class="error"</tt>&gt;<tt>The following error(s) occurred:</tt>&lt;<tt>br /</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; foreach ($errors as $msg) { </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo " $msg</tt>&lt;<tt>br /</tt>&gt;<tt>\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;<tt>Please try again.</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br><dpecw2>

Web users will be seeing this page under two circumstances: once when 
they first arrive and again if they fail to fill out the form 
completely. Under this second situation, the <tt>$errors</tt> variable will have a value (of what went wrong) and its values will be printed here, above the form.

</dpecw2><br>
<a name="phh016"></a>
<br><dpecw1>

<b>* Step 11</b><br>
Create the HTML form and complete the PHP page.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; ?</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>h2</tt>&gt;<tt>Register</tt>&lt;<tt>/h2</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>form action="register.php" method="post"</tt> &gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>First Name: </tt>&lt;<tt>input type="text" name="first_name" size="15"&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxlength="15" value="</tt>&lt;<tt>?php if (isset($_POST['first_name']))</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $_POST['first_name']; ?</tt>&gt;<tt>"/</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>Last Name: </tt>&lt;<tt>input type="text" name="last_name" size="15"&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxlength="30" value="</tt>&lt;<tt>?php if (isset($_POST['last_name']))&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $_POST['last_name']; ?</tt>&gt;<tt>"/</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>Email Address: </tt>&lt;<tt>input type="text" name="email" size="20"&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxlength="40" value="</tt>&lt;<tt>?php if (isset($_POST ['email']))</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $_POST ['email']; ?</tt>&gt;<tt>" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>Password: </tt>&lt;<tt>input type="password" name="password1" size="10"&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxlength="20" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>Confirm Password: </tt>&lt;<tt>input type="password" name="password2" size="10"&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxlength="20" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>input type="submit" name="submit" value="Register"/</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>input type="hidden" name="submitted" value="TRUE" /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/form</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;<br>
</dpeccode><br>
<a name="phh017"></a>
<br><dpecjs><b>* Step 12</b>
<br>
Save the file as <tt>register.php</tt> and upload it to your Web server. <ml_ins_href><ml_data_href>
<br>

<br><a name="phh017a"></a>
<br><dpecw1>
	
<dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # register.php</tt><br>
<tt>&nbsp;&nbsp; // Send NOTHING to the Web browser prior to the header() line!</tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a first name.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['first_name'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your first name.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $fn = escape_data($_POST['first_name']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a last name.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['last_name'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your last name.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ln = escape_data($_POST['last_name']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a password and match against the confirmed password.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!empty($_POST['password1'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($_POST['password1'] != $_POST['password2']) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[] =</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'Your
 password did not match the confirmed password.';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p = escape_data($_POST['password1']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Register the user in the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Check for previous registration.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT user_id FROM users WHERE email='$e'";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = mysql_query($query);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (mysql_num_rows($result) == 0) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Make the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query
 = "INSERT INTO users (first_name, last_name, email,</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;password, registration_date) VALUES</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;('$fn',
 '$ln', '$e', SHA('$p'), NOW() )";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($result) { // If it ran OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Send an email, if desired.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Redirect the user to the thanks.php page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = 'http://' . $_SERVER['HTTP_HOST'] . </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
 ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) 
{&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/thanks.php';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { // If it did not run OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 $errors[] = 'You could not be registered due to a system</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 error. We apologize for any inconvenience.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Public message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[] = mysql_error() . </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>Query: ' . $query; // Debugging message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // Email address is already taken.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[] = </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'The
 email address has already been registered.';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; } else { // Form has not been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = NULL;</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; // Begin the page now.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Register';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; if (!empty($errors)) { // Print any error messages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Error!</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>The following error(s) occurred:</tt>&lt;<tt>br /</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " - $msg</tt>&lt;<tt>br /</tt>&gt;<tt>\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;<tt>Please try again.</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>h2</tt>&gt;<tt>Register</tt>&lt;<tt>/h2</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>form action="register.php" method="post"</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>First Name: </tt>&lt;<tt>input type="text" name="first_name" size="15"&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxlength="15" value="</tt>&lt;<tt>?php if (isset($_POST['first_name']))</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $_POST['first_name']; ?</tt>&gt;<tt>"/</tt>&gt; &lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>Last Name: </tt>&lt;<tt>input type="text" name="last_name" size="15"&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxlength="30" value="</tt>&lt;<tt>?php if (isset($_POST['last_name']))&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $_POST['last_name']; ?</tt>&gt;<tt>"/</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>Email Address: </tt>&lt;<tt>input type="text" name="email" size="20"&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxlength="40" value="</tt>&lt;<tt>?php if (isset($_POST ['email']))</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $_POST ['email']; ?</tt>&gt;<tt>" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>Password: </tt>&lt;<tt>input type="password" name="password1" size="10"&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxlength="20" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>Confirm Password: </tt>&lt;<tt>input type="password" name="password2"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; size="10" maxlength="20" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>input type="submit" name="submit" value="Register"/</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>input type="hidden" name="submitted" value="TRUE" /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/form</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;
</dpeccode>
	
</dpecw1><br><br>
<a name="phh018"></a>
<br><dpecw1>

Now let's put together a quick thank-you page. 

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # thanks.php</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Thank You!';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>h1 id="mainhead"&gt;Thank you!</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;<tt>You are now registered.</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;&lt;<tt>br /</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;<br>
</dpeccode><br>
<a name="phh019"></a>
<br><dpecjs>Save the script as <tt>thanks.php</tt>, upload to your Web server along with the modified <tt>register.php</tt>, and test in your Web browser. Once the user has been registered in the database, they are redirected to <tt>thanks.php</tt>.
<br>

<a name="phh020"></a>
<br><dpecjs>If any registration errors occurred, those errors are displayed above the registration form.
<br>

<a name="phh021"></a>
<br><dpecw1>
	
You should ideally use an absolute URL with the <tt>header()</tt> function when using the Location<i> </i>directive (e.g., <tt>http://www.mycompany.com/admin/page.php</tt> rather than just <tt>page.php</tt>). To do so in your scripts, you have two choices. First, you could hard-code the absolute URL using<br>
<tt>header ('Location: http://www.mycompany.com/admin/page.php');</tt><br>
This method will work unless the server configuration changes, the URL changes, or you move the script.<br>
A more flexible method is to make use of the <tt>$_SERVER</tt> superglobal and the <tt>dirname()</tt>
 function (which returns the directory path of the current script). The 
PHP manual recommends the following code to redirect to a page located 
in the same directory as the current script:<br>
<tt>   header ('Location: http://' . $_SERVER['HTTP_HOST'] . <br>
&nbsp;    dirname($_SERVER['PHP_SELF']) . '/newpage.php'); </tt><br>
This will effectively redirect the user to the current domain (<tt>www.mycompany.com</tt>), the current directory (<tt>admin</tt>), and the new page.
	
</dpecw1><br>
<a name="phh022"></a>
<br><b>Potential errors  <br>  </b>  Nothing<i> </i>can be sent to the Web browser before using the <tt>header()</tt> function. Even if your <tt>mysql_connect.php</tt> file has a blank line after the closing PHP tag, this will make the <tt>header()</tt> function unusable.  <br><br>  <b>Uses for the function  <br>  </b>  The <tt>header()</tt> function is also frequently used when you have a PHP script that generates PDFs, images, and other nonHTML media.  <br><br>  <b>Stateless protocol  <br>  </b>  HTTP is a stateless protocol, which means it has no memory from one Web page to another.  <br><br>  <b>Passing values  <br>  </b>  You can add <tt><i><tt>name</tt></i><tt>=</tt><i><tt>value</tt></i></tt><i> </i>pairs to the URL in a <tt>header()</tt> call to pass values to the target page. In this example, if you added this line to the script, prior to redirection:  <tt>$url .= '?name=' . urlencode ("$fn $ln"); </tt> then the <tt>thanks.php</tt> page could greet the user by <tt>$_GET['name']</tt>.  <br><br>  
<a name="phh023"></a>

<script language="JavaScript">insertAccQuestion('11','phh023.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phh024"></a>

<script language="JavaScript">insertAccQuestion('12','phh024.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phh025"></a>

<script language="JavaScript">insertAccQuestion('13','phh025.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phh026"></a>

<script language="JavaScript">insertAccQuestion('14','phh026.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phh028"></a>
<br><dpecw1>
	
In this lesson, you learned how to use the <tt>header()</tt> function. This function is most often used to redirect the Web browser from the current page to another. The <tt>header()</tt> function must be called before anything is sent to the Web browser or else an error will occur.<br>
You also learned how to use the <tt>header_sent()</tt> function to check whether or not data has been sent to the Web browser.
	
</dpecw1><br>
<a name="phi001"></a>
<br><a name="topic12"></a><h2>Lesson 9. Course in Review</h2><dpecw1>

This lesson allows you an opportunity to review the principles and practices you have learned in this course.<br>
It reviews the material presented in this course through questions.

</dpecw1><br>
<a name="phi007"></a>

<script language="JavaScript">insertAccQuestion('15','phi007.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phi009"></a>

<script language="JavaScript">insertAccQuestion('16','phi009.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<script language="JavaScript">
<!--
writeCopyrightInfo();
var totalTopics =12;
//-->
</script><br><br><center>© 2006 MindLeaders, Inc. All Rights Reserved.
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

</center></dpecjs></dpecjs></ml_data_href></ml_ins_href></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></ml_data_href></ml_ins_href></dpecjs></dpecjs></body></html>