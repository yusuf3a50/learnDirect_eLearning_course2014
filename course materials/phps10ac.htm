<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
</head><body><mledit by="insert_name" date="insert_date" note="insert_note"></mledit>

<script language="JavaScript" src="phps10ac_files/mlclientpage.js"></script>
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

<script language="JavaScript" src="phps10ac_files/site.js"></script><script language="Javascript" src="phps10ac_files/resource_strings.js"></script><script language="Javascript" src="phps10ac_files/special_cases.js"></script>
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

<script language="JavaScript">var ThisPage=new MlPage();</script>
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

<title>PHP and MySQL: Cookies and Sessions</title>

<script language="JavaScript">var crsAcronym="phps10";</script>
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

<script language="JavaScript" src="phps10ac_files/access.js"></script><script language="Javascript" src="phps10ac_files/params.js"></script><script language="Javascript" src="phps10ac_files/courseware.js"></script><script language="Javascript" src="phps10ac_files/phps10.js"></script><script language="Javascript" src="phps10ac_files/printbut.js"></script><table width="97%"><tbody><tr><td align="right"><div id="printButton" class="printbut" onclick="javascript:printPage();" onmouseover="this.style.backgroundPosition='-48px -24px';" onmouseout="this.style.backgroundPosition='-48px 0px';" title="Print"></div></td></tr></tbody></table>
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>


<!--<DPECTPL>access</DPECTPL>-->

<h1>PHP and MySQL: Cookies and Sessions</h1>
<script language="JavaScript">
var numAccQuestions =49;
writeAccIntro();
</script>You can print this text-only version of this course for future reference.<br>&nbsp;<br> If you wish to use the accessible version of our courses, which includes questions in text-only format, click <b>Text Only</b> on the log on page, and then enter your user ID and password from the Accessibility Log On page.
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

<hr>
<a name="skipped">
</a><a name="pha001"></a>
<br><a name="topic1"></a><h2>Lesson 1. Course Introduction</h2><dpecw1>

The Hypertext Transfer Protocol (HTTP) is a stateless technology, 
meaning that each individual HTML page is an unrelated entity. HTTP has 
no method for tracking users or retaining variables as a person 
traverses a site. Using a Web scripting language like PHP, you can 
overcome the statelessness of the Web. You have a few options to choose 
from, the most popular two being cookies and sessions.<br>
Prior to the existence of cookies, surfing a Web site was a trip without
 a history. Although your browser tracked the pages you visited, 
allowing you to use the back button to return to previously visited 
pages, the server kept no record of who had seen what. Without the 
server being able to track a user, there can be no shopping carts or 
custom Web site personalization.<br>
Sessions improve upon cookies, allowing the Web application to store and
 retrieve far more information than cookies alone can. Both technologies
 are easy to use with PHP and are worth knowing.<br>
In this course, you'll learn how to set a cookie, retrieve information 
from a stored cookie, alter a cookie's settings, and then delete a 
cookie. You'll also learn how to set, access, and delete session 
variables, change session behavior and session cookie settings, and 
improve session security. Finally, you'll learn how to use cookies and 
sessions together.

</dpecw1><br>
<a name="phb001"></a><br><a name="topic2"></a><h2>Lesson 2. Setting Cookies</h2><dpecw1>

Cookies are a way for a server to store information on the user's 
machine. Cookies are used to track users and are used with Web shopping 
carts and site personalization.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Send a cookie
	</li>
</ul>

</dpecw1><br>
<a name="phb002"></a>
<br><dpecw1>

Cookies are one way that a site can remember or track a user over the 
course of a visit. Think of a cookie like a name tag: you tell the 
server your name and it gives you a sticker to wear. Then it can know 
who you are by referring back to that name tag.

</dpecw1><br><dpecw2>

Some people are suspicious of cookies because they believe that cookies 
allow a server to know too much about them. However, a cookie can only 
be used to store information that the server is given, so it's no less 
secure than most anything else online. Unfortunately, many people still 
have misconceptions about the technology, which is a problem as those 
misconceptions can undermine the functionality of your Web application.

</dpecw2><br>
<a name="phb003"></a>
<br><b>Internet Explorer  <br>  </b>  Using Internet Explorer on Windows
 XP, choose Tools | Internet Options. Then click the Privacy tab, 
followed by the Advanced button under Settings. Click "Override 
automatic cookie handling" and then choose "Prompt" for both First and 
Third-party Cookies.  <br><br>  <b>Firefox  <br>  </b>  Using Firefox on
 Windows, choose Tools | Options. Then click Privacy and expand the 
Cookies section. Finally, select "ask me every time" in the Keep Cookies
 drop-down menu. If you are using Firefox on Mac OS X, the steps are the
 same, but you must start by choosing Firefox | Preferences.  <br><br>  <b>Safari  <br>  </b>
  Unfortunately, Safari on Mac OS X does not have a cookie prompting 
option, but it will allow you to view existing cookies, which is still a
 useful debugging tool. This option can be found under the Security 
Preferences panel.  <br><br>  
<a name="phb004"></a>
<br><dpecw1>

The most important thing to understand about cookies is that they must 
be sent from the server to the client prior to any other information.

</dpecw1><br><dpecw2>

Should the server attempt to send a cookie after the Web browser has 
already received HTML — even an extraneous white space — an error 
message will result and the cookie will not be sent. This is by far the 
most common cookie related error.

</dpecw2><br>
<a name="phb005"></a>
<br><dpecw1>

Cookies are sent via the <tt>setcookie()</tt> function:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; setcookie (</tt><i><tt>name</tt></i><tt>, </tt><i><tt>value</tt></i><tt>);</tt><br>
<tt>&nbsp;&nbsp; setcookie ('first_name', 'Larry');&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

The second line of code will send a cookie to the browser with a name of <tt>first_name</tt><i> </i>and a value of <tt>Larry</tt>.

</dpecw2><br>
<a name="phb006"></a>
<br><dpecw1>

You can continue to send more cookies to the browser with subsequent uses of the <tt>setcookie()</tt> function:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; setcookie ('ID', 263);</tt><br>
<tt>&nbsp;&nbsp; setcookie ('email', 'phpmysql2@mycompany.com');&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

As when using any variable in PHP, when naming your cookies, do not use 
white spaces or punctuation, but do pay attention to the exact case 
used.<br>
Let's examine the process for sending a cookie.

</dpecw2><br>
<a name="phb007"></a>
<br><dpecw1>

<b>* Step 1</b><br>
Create a new PHP document in your text editor. For this example, we'll make a <tt>login.php</tt> script.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # Script login.php&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phb008"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Validate the form. The main conditional checks if the form has been 
submitted. Then the database connection is made by including the 
connection script (which also defines the <tt>escape_data()</tt> function). Finally, the email address and password inputs are checked for values. <ml_ins_href><ml_data_href>php script.

</ml_data_href></ml_ins_href></dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; require_once ('../mysql_connect.php');&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $errors = array();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; if (empty($_POST['password'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; } </tt><br>
</dpeccode><br>
<br><a name="phb008a"></a>
<br><dpecw1>
	
<dpeccode>
<br>
<tt></tt>&lt;<tt>?php # mysql_connect.php</tt><br>
<tt>// This file contains the database access information.</tt><br>
<tt>// This file also establishes a connection to MySQL and</tt><br>
<tt>&nbsp;&nbsp; selects the database.&nbsp;&nbsp; </tt><br>
<tt>// Set the database access information as constants.</tt><br>
<tt>DEFINE ('DB_USER', 'username');</tt><br>
<tt>DEFINE ('DB_PASSWORD', 'password');</tt><br>
<tt>DEFINE ('DB_HOST', 'localhost');</tt><br>
<tt>DEFINE ('DB_NAME', 'sitename');</tt><br>
<tt>// Make the connnection.</tt><br>
<tt>$dbc = @mysql_connect (DB_HOST, DB_USER, DB_PASSWORD) OR</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;die ('Could not connect to MySQL: ' . mysql_error() );</tt><br>
<tt>// Select the database.</tt><br>
<tt>@mysql_select_db (DB_NAME) OR</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;die ('Could not select the database: ' . mysql_error() );&nbsp;&nbsp; </tt><br>
<tt>// Create a function for escaping the data.</tt><br>
<tt>function escape_data ($data) {</tt><br>
<tt>// Address Magic Quotes.</tt><br>
<tt>if (ini_get('magic_quotes_gpc')) {</tt><br>
<tt>$data = stripslashes($data);</tt><br>
<tt>}</tt><br>
<tt>// Check for mysql_real_escape_string() support.</tt><br>
<tt>if (function_exists('mysql_real_escape_string'))</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;{global $dbc; // Need the connection.</tt><br>
<tt>$data = mysql_real_escape_string (trim($data), $dbc);</tt><br>
<tt>} else {</tt><br>
<tt>$data = mysql_escape_string (trim($data));</tt><br>
<tt>}</tt><br>
<tt>// Return the escaped value.</tt>&nbsp;&nbsp;&nbsp;&nbsp;<br>
<tt>return $data;</tt><br>
<tt>} // End of function.</tt><br>
<tt>?&gt;</tt></dpeccode></dpecw1><br><br>
<a name="phb009"></a>
<br><dpecw1>

<b>* Step 3</b><br>
Retrieve the <tt>user_id</tt> and <tt>first_name</tt> for this user from the database.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (empty($errors)) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT user_id, first_name FROM users WHERE&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; email='$e' AND password=SHA('$p')";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $row = mysql_fetch_array($result, MYSQL_NUM);&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

If both validation tests were passed, the database will be queried, retrieving the <tt>user_id</tt> and <tt>first_name</tt> values for the record where the <tt>email</tt> column matches the submitted email address and the password matches an encrypted version of the submitted password.

</dpecw2><br>
<a name="phb010"></a>
<br><dpecw1>

<b>* Step 4</b><br>
If the user entered the correct information, log the user in.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if ($row) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; setcookie ('user_id', $row[0]);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; setcookie ('first_name', $row[1]);&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

The <tt>$row</tt> variable will have a value only if the preceding query
 returned at least one record (indicating the submitted email address 
and password match those on file). In this case, two cookies will be 
created.

</dpecw2><br>
<a name="phb011"></a>
<br><dpecw1>

<b>* Step 5</b><br>
Redirect the user to another page called <tt>loggedin.php</tt> which you will create.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $url = 'http://' . $_SERVER['HTTP_HOST'] .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; dirname($_SERVER['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp; if ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') )&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; {$url = substr ($url, 0, -1);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; $url .= '/loggedin.php';</tt><br>
<tt>&nbsp;&nbsp; header("Location: $url"); </tt><br>
<tt>&nbsp;&nbsp; exit();</tt><br>
</dpeccode><br><dpecw2>

The redirection URL is first dynamically generated. To do so, various <tt>$_SERVER</tt> values are referenced, along with the <tt>dirname()</tt> function. Any trailing slashes are also chopped off should this script be within a subdirectory.<br>
Finally the <tt>header()</tt> function is called to redirect the user and the script's execution is terminated with <tt>exit()</tt>.

</dpecw2><br>
<a name="phb012"></a>
<br><dpecw1>

<b>* Step 6</b><br>
Complete the <tt>$row</tt> conditional (started in Step 4) and the <tt>$errors</tt> conditional, and then close the database connection.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'The email address and password entered do not match those on file.';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = mysql_error() . '&lt;br /&gt;&lt;br /&gt;Query: ' . $query;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; mysql_close(); </tt><br>
</dpeccode><br><dpecw2>

Because nothing can be sent to the Web browser before calling the <tt><tt>setcookie()</tt></tt> and <tt><tt>header()</tt></tt> lines, the errors have to be saved and printed later.<br>
The second error message here is for debugging purposes only and shouldn't be used on a live site.

</dpecw2><br>
<a name="phb013"></a>
<br><dpecw1>

<b>* Step 7</b><br>
Complete the main submit conditional, include the HTML header, and print any error messages.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $errors = NULL;</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Login';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; if (!empty($errors)) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; echo '&lt;h1 id="mainhead"&gt;Error!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; &lt;p class="error"&gt;The following error(s) occurred:&lt;br /&gt;';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; foreach ($errors as $msg) {echo " $msg&lt;br /&gt;\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; echo '&lt;/p&gt;&lt;p&gt;Please try again.&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; ?&gt; </tt><br>
</dpeccode><br><dpecw2>

The first else conditional sets the <tt>$errors</tt> variable to <tt>NULL</tt>,
 indicating that no errors need to be printed out when this page is 
first run. Then the page's title is set and the template's header file 
is included. Finally, any existing errors — from the form's submission —
 are printed.

</dpecw2><br>
<a name="phb014"></a>
<br><dpecw1>

<b>* Step 8</b><br>
Display the HTML form.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;h2&gt;Login&lt;/h2&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;form action="login.php" method="post"&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; &lt;p&gt;Email Address: &lt;input type="text" name="email" size="20"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxlength="40" /&gt; &lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; &lt;p&gt;Password: &lt;input type="password" name="password" size="20"&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxlength="20" /&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; &lt;p&gt;&lt;input type="submit" name="submit" value="Login" /&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; &lt;input type="hidden" name="submitted" value="TRUE" /&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;/form&gt; </tt><br>
</dpeccode><br><dpecw2>

The HTML form takes two inputs — an email address and a password — and 
submits the data back to this same page. You can make the email address 
input sticky by presetting a value attribute, if you'd like.

</dpecw2><br>
<a name="phb015"></a>
<br><dpecw1>

<b>* Step 9</b><br>
Include the PHP footer.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt><br>
</dpeccode><br>
<a name="phb016"></a>
<br><dpecjs><b>* Step 10</b>
<br>
Save the file as <tt>login.php</tt>, upload it to your Web server, and load the form in your Web browser.
<br>

<a name="phb017"></a>
<br><dpecjs>Here is the entire script. The <tt>login.php</tt> script creates cookies upon a successful login.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # login.php</tt><br>
<tt>&nbsp;&nbsp; // Send NOTHING to the Web browser prior to the setcookie() lines!&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['password'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Retrieve the 
user_id and first_name for that email/password combination. 
*/&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT user_id, first_name FROM users</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WHERE email='$e' AND password=SHA('$p')";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = 
mysql_fetch_array ($result, MYSQL_NUM); // Return a record, if 
applicable.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($row) { // A record was pulled from the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the cookies &amp; redirect.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcookie ('user_id', $row[0]);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcookie ('first_name', $row[1]);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Redirect the user to the loggedin.php page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url
 = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
 ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/loggedin.php';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // No record matched the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = 'The email address and password entered do not</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; match those on file.'; // Public message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[] = mysql_error() . '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>Query: ' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query; // Debugging message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; } else { // Form has not been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = NULL;</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; // Begin the page now.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Login';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; if (!empty($errors)) { // Print any error messages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Error!</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>The following error(s) occurred:</tt>&lt;<tt>br /</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " - $msg</tt>&lt;<tt>br /</tt>&gt;<tt>\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;<tt>Please try again.</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>h2</tt>&gt;<tt>Login</tt>&lt;<tt>/h2</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>form action="login.php" method="post"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p</tt>&gt;<tt>Email Address: </tt>&lt;<tt>input type="text" name="email" size="20" maxlength="40" /</tt>&gt;<tt> </tt>&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p</tt>&gt;<tt>Password: </tt>&lt;<tt>input type="password" name="password" size="20" maxlength="20" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p</tt>&gt;&lt;<tt>input type="submit" name="submit" value="Login" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>input type="hidden" name="submitted" value="TRUE" /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/form</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;
</dpeccode><br>
<a name="phb018"></a>
<br><b>Cookie size  <br>  </b>  Cookies are limited to about 4 KB of total data, and each Web browser can remember only 20 cookies from any one server.  <br><br>  <b><tt>header()</tt> function  <br>  </b>  Because cookies rely upon the HTTP header, you can set them in PHP using the <tt>header()</tt> function.  It's very important to remember that the <tt>setcookie()</tt> and <tt>header()</tt> functions must be called before any data is sent to the Web browser.  <br><br>  <b>Browser variations  <br>  </b>  The <tt>setcookie()</tt>
 function is one of the few functions in PHP that could generate 
different results in different browsers, since browsers will treat 
cookies differently.  Be sure to test your Web sites in multiple 
browsers on different platforms to ensure consistency.  <br><br>  
<a name="phb019"></a>

<script language="JavaScript">insertAccQuestion('1','phb019.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phb020"></a>

<script language="JavaScript">insertAccQuestion('2','phb020.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phb021"></a>

<script language="JavaScript">insertAccQuestion('3','phb021.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phb022"></a>
<br><dpecw1>
	
In this lesson, you learned that cookies are a way for a server to store
 information on the user's computer. You learned how to set a cookie 
using the <tt>setcookie()</tt> function. This function has a syntax of <tt>setcookie (<i>name</i>, <i>value</i>)</tt>.<br>
You also learned how to send a cookie from a server to the user's Web 
browser. The cookie must be sent to the user prior to any other 
information otherwise an error message will result and the cookie will 
not be sent. Finally, you learned that cookies are limited to 4 KB in 
total data and that each Web browser can remember only 20 cookies from 
any one server.
	
</dpecw1><br>
<a name="phc001"></a><br><a name="topic3"></a><h2>Lesson 3. Accessing Cookies</h2><dpecw1>

Being able to retrieve a value from a cookie allows you to customize and personalize your Web applications.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Access a cookie
	</li>
</ul>

</dpecw1><br>
<a name="phc002"></a>
<br><dpecw1>

To retrieve a value from a cookie, you only need to refer to the <tt>$_COOKIE</tt>
 superglobal, using the appropriate cookie name as the key (as you would
 with any array). For example, to retrieve the value of the cookie 
established with the line<br>
<tt>   setcookie ('username', 'Trout');   </tt><br>
you would use<br>
<tt>   $_COOKIE['username']</tt>. <br>
In the following example, the cookies set by the <tt>login.php</tt> 
script will be accessed in two ways. First a check will be made that the
 user is logged in (otherwise, they shouldn't be accessing this page). 
Next, the user will be greeted by their first name, which was stored in a
 cookie.

</dpecw1><br>
<br><a name="phc002a"></a>
<br><dpecw1>
	
<dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # login.php</tt><br>
<tt>&nbsp;&nbsp; // Send NOTHING to the Web browser prior to the setcookie() lines!&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['password'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Retrieve the user_id and first_name for that</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; email/password combination. */&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT user_id, first_name FROM users</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WHERE email='$e' AND password=SHA('$p')";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Return a record, if applicable.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($row) { // A record was pulled from the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the cookies &amp; redirect.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcookie ('user_id', $row[0]);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcookie ('first_name', $row[1]);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Redirect the user to the loggedin.php page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = 'http://' . $_SERVER['HTTP_HOST'] . </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dirname($_SERVER['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
 ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) 
{&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/loggedin.php';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // No record matched the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = 'The email address and password entered do not</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; match those on file.'; // Public message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[] = mysql_error() . '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>Query: ' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query; // Debugging message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; } else { // Form has not been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = NULL;</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; // Begin the page now.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Login';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; if (!empty($errors)) { // Print any error messages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Error!</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>The following error(s) occurred:</tt>&lt;<tt>br /</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " - $msg</tt>&lt;<tt>br /</tt>&gt;<tt>\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;<tt>Please try again.</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>h2</tt>&gt;<tt>Login</tt>&lt;<tt>/h2</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>form action="login.php" method="post"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p</tt>&gt;<tt>Email Address: </tt>&lt;<tt>input type="text" name="email"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size="20" maxlength="40" /</tt>&gt;<tt> </tt>&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p</tt>&gt;<tt>Password: </tt>&lt;<tt>input type="password" name="password"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size="20" maxlength="20" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p</tt>&gt;&lt;<tt>input type="submit" name="submit" value="Login" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>input type="hidden" name="submitted" value="TRUE" /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/form</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;<br>
</dpeccode>
	
</dpecw1><br>
<a name="phc003"></a>
<br><dpecw1>

<b>* Step 1</b><br>
Create a new PHP document in your text editor.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # Script loggedin.php&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

The user will be redirected to this page after successfully logging in. It will print a user-specific greeting.

</dpecw2><br>
<a name="phc004"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Check for the presence of a cookie.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (!isset($_COOKIE['user_id'])) {&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

Since we don't want a user to access this page unless that user is 
logged in, we first check for the cookie that should have been set (in <tt>login.php</tt>).

</dpecw2><br>
<a name="phc005"></a>
<br><dpecw1>

<b>* Step 3</b><br>
Complete the <tt>if</tt> conditional.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $url = 'http://' . $_SERVER ['HTTP_HOST'] . dirname($_SERVER ['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; if ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $url = substr ($url, 0, -1);</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; $url .= '/index.php';</tt><br>
<tt>&nbsp;&nbsp; header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp; exit();</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br><dpecw2>

If the user is not logged in, they will be automatically redirected to 
the main page. This is a simple way to limit access to logged-in users.

</dpecw2><br>
<a name="phc006"></a>
<br><dpecw1>

<b>* Step 4</b><br>
Include the page header.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $page_title = 'Logged In!';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phc007"></a>
<br><dpecw1>

<b>* Step 5</b><br>
Welcome the user, using the cookie.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; echo "&lt;h1&gt;Logged In!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;You are now logged in, {$_COOKIE ['first_name']}!&lt;/p&gt;&nbsp;&nbsp;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;"; </tt><br>
</dpeccode><br><dpecw2>

To greet the user by name, refer to the <tt>$_COOKIE['first_name']</tt> variable
(enclosed within curly braces to avoid parse errors).

</dpecw2><br>
<a name="phc008"></a>
<br><dpecw1>

<b>* Step 6</b><br>
Complete the HTML page.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phc009"></a>
<br><dpecjs><b>* Step 7</b>
<br>
Save the file as <tt>loggedin.php</tt>, upload to your Web server (in the same directory as <tt>login.php</tt>), and test in your Web browser by logging in through <tt>login.php</tt>.
<br>

<a name="phc010"></a>
<br><dpecjs>Here is the entire script. The <tt>loggedin.php</tt> script prints a greeting to a user based upon a stored cookie.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # loggedin.php</tt><br>
<tt>&nbsp;&nbsp; # User is redirected here from login.php.</tt><br>
<tt>&nbsp;&nbsp; // If no cookie is present, redirect the user.</tt><br>
<tt>&nbsp;&nbsp; if (!isset($_COOKIE['user_id'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/index.php'; // Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Set the page title and include the HTML header.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Logged In!';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; // Print a customized message.</tt><br>
<tt>&nbsp;&nbsp; echo "&lt;h1&gt;Logged In!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;You are now logged in, {$_COOKIE['first_name']}!&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;";</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phc011"></a>
<br><b>Debugging message  <br>  </b>  If the submitted email address and
 username do not match those on file, a public message is displayed, 
followed by the query.  Remember to delete the debugging message (the 
MySQL error plus the query) before using this code on a live site.  <br><br>  <b>Headers error  <br>  </b>  If your <tt>mysql_connect.php</tt> file sends anything to the Web browser or even has blank lines or spaces after the closing PHP tag, you'll see a <tt>headers already sent</tt><i> </i>error.  <br><br>  <b><tt>register_globals</tt>  <br>  </b>  With <tt>register_globals</tt><i> </i>enabled, PHP will load variables in a specific order (depending upon the setting in the <tt>php.ini</tt>
 file), normally: get, post, cookie, session.  If you do not use the 
superglobal arrays to refer to variables, then the value of a <tt>$username</tt> variable in a form could be overridden by the value of a <tt>$username</tt> variable stored in a cookie. This is one reason why you should program without relying upon <tt>register_globals</tt>.  <br><br>  <b>Setting and accessing a cookie  <br>  </b>  A cookie is not accessible until the setting page (e.g., <tt>login.php</tt>) has been reloaded or another page has been accessed (in other words, you cannot set and access a cookie in the same page).  <br><br>  <b>Declining a cookie  <br>  </b>
  If users decline a cookie or have their Web browser set not to accept 
cookies, they will automatically be redirected to the home page in this 
example, even if they successfully logged in.  For this reason you may 
want to let the user know when cookies are required.  <br><br>  
<a name="phc012"></a>

<script language="JavaScript">insertAccQuestion('4','phc012.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phc013"></a>

<script language="JavaScript">insertAccQuestion('5','phc013.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phc014"></a>

<script language="JavaScript">insertAccQuestion('6','phc014.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phc016"></a>
<br><dpecw1>
	
In this lesson, you learned how to access a value from a cookie using the <tt>$_COOKIE</tt>
 superglobal. Using this superglobal, you learned to use the appropriate
 cookie name as the key. This is just like you would with any array.<br>
You also learned that a cookie is not accessible until the setting page has been reloaded or another page has been accessed.
	
</dpecw1><br>
<a name="phd001"></a><br><a name="topic4"></a><h2>Lesson 4. Setting Cookie Parameters</h2><dpecw1>

In addition to the name and value arguments, the <tt><tt>setcookie()</tt></tt> function also uses the expiration, path, domain, and secure parameters to alter the definition of the cookie.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Identify the arguments of the <tt>setcookie()</tt> function
	</li>
	<li>
Set a cookie's parameters
	</li>
</ul>

</dpecw1><br>
<a name="phd002"></a>
<br><dpecw1>

Although passing just the name and value arguments to the <tt>setcookie()</tt>
 function will suffice, you ought to be aware of the other arguments 
available. The function can take up to four more parameters, each of 
which will alter the definition of the cookie:<br>
<ul>
	<li>
Expiration
	</li>
	<li>
Path
	</li>
	<li>
Domain
	</li>
	<li>
Secure
	</li>
</ul>

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; setcookie ('</tt><i><tt>name</tt></i><tt>', '</tt><i><tt>value</tt></i><tt>', </tt><i><tt>expiration</tt></i><tt>, '</tt><i><tt>path</tt></i><tt>', '</tt><i><tt>domain</tt></i><tt>', </tt><i><tt>secure</tt></i><tt>);&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phd003"></a>
<br><dpecw1>

The expiration argument is used to set a definitive length of time for a cookie to exist, specified in seconds since the <b>epoch</b><i> </i>(the
 epoch is midnight on January 1, 1970). If it is not set, the cookie 
will continue to be functional until the user closes his or her browser.<br>
Normally, the expiration time is determined by adding a particular 
number of minutes or hours to the current moment, retrieved using the <tt>time()</tt>
 function. The following line will set the expiration time of the cookie
 to be 1 hour (60 seconds times 60 minutes) from the current moment:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; setcookie ('</tt><i><tt>name</tt></i><tt>', '</tt><i><tt>value</tt></i><tt>', time()+3600);&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phd004"></a>
<br><dpecw1>

The path and domain arguments are used to limit a cookie to a specific 
folder within a Web site (the path) or to a specific host. For example, 
you could restrict a cookie to exist only while a user is within the <tt><tt>admin</tt></tt><i> </i>folder of a domain (and the <tt><tt>admin</tt></tt><i> </i>folder's subfolders):

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; setcookie ('</tt><i><tt>name</tt></i><tt>', '</tt><i><tt>value</tt></i><tt>', time()+3600, '/admin/');&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phd005"></a>
<br><dpecw1>

Finally, the secure value dictates that a cookie should only be sent 
over a secure HTTPS connection. A 1 indicates that a secure connection 
must be used, and a 0<i> </i>signifies that a standard connection is fine.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; setcookie ('</tt><i><tt>name</tt></i><tt>', '</tt><i><tt>value</tt></i><tt>', time()+3600, '/admin/', '', 1);&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

As with all functions that take arguments, you must pass the <tt>setcookie()</tt> values in order. To skip any parameter, use <tt>NULL</tt> or an empty string. The expiration and secure values are both integers and are therefore not quoted.<br>
To demonstrate this information, let's add an expiration setting to the login cookies so that they last for only one hour.

</dpecw2><br>
<a name="phd006"></a>
<br><dpecjs><b>* Step 1</b>
<br>
Open or create <tt>login.php</tt> in your text editor.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # login.php</tt><br>
<tt>&nbsp;&nbsp; // Send NOTHING to the Web browser prior to the setcookie() lines!&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['password'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Retrieve the 
user_id and first_name for that email/password combination. 
*/&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT user_id, first_name FROM users</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WHERE email='$e' AND password=SHA('$p')";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Return a record, if applicable.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($row) { // A record was pulled from the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the cookies &amp; redirect.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcookie ('user_id', $row[0]);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcookie ('first_name', $row[1]);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Redirect the user to the loggedin.php page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url
 = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
 ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/loggedin.php';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // No record matched the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = 'The email address and password entered do not</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; match those on file.'; // Public message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[] = mysql_error() . '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>Query: ' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query; // Debugging message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; } else { // Form has not been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = NULL;</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; // Begin the page now.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Login';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; if (!empty($errors)) { // Print any error messages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Error!</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>The following error(s) occurred:</tt>&lt;<tt>br /</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " - $msg</tt>&lt;<tt>br /</tt>&gt;<tt>\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;<tt>Please try again.</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>h2</tt>&gt;<tt>Login</tt>&lt;<tt>/h2</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>form action="login.php" method="post"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p</tt>&gt;<tt>Email Address: </tt>&lt;<tt>input type="text" name="email" size="20" maxlength="40" /</tt>&gt;<tt> </tt>&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p</tt>&gt;<tt>Password: </tt>&lt;<tt>input type="password" name="password" size="20" maxlength="20" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p</tt>&gt;&lt;<tt>input type="submit" name="submit" value="Login" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>input type="hidden" name="submitted" value="TRUE" /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/form</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;
</dpeccode><br>
<a name="phd007"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Change the two <tt>setcookie()</tt> lines to include an expiration date that's 60 minutes away:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; setcookie ('user_id', $row[0], time()+3600, '/', '', 0);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; setcookie ('first_name', $row[1], time()+3600, '/', '', 0);&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

With the expiration date set to <tt>time() + 3600</tt> (60 minutes times
 60 seconds), the cookie will continue to exist for an hour after it is 
set. Let's also explicitly state the other cookie parameters.

</dpecw2><br>
<a name="phd008"></a>
<br><dpecjs><b>* Step 3</b>
<br>
Save the script, upload to your Web server, and test in your Web browser.
<br>

<a name="phd009"></a>
<br><dpecjs>Here's the entire script. The <tt>login.php</tt> script now uses every argument the <tt>setcookie()</tt> function can take.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # login.php</tt><br>
<tt>&nbsp;&nbsp; // Send NOTHING to the Web browser prior to the setcookie() lines!&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['password'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Retrieve the 
user_id and first_name for that email/password combination. 
*/&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT user_id, first_name FROM users</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WHERE email='$e' AND password=SHA('$p')";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Return a record, if applicable.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($row) { // A record was pulled from the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the cookies &amp; redirect.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcookie
 ('user_id', $row[0], time()+3600, '/', '', 0);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcookie
 ('first_name', $row[1], time()+3600, '/', '', 0);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Redirect the user to the loggedin.php page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url
 = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
 ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/loggedin.php';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // No record matched the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = 'The email address and password entered do not</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; match those on file.'; // Public message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[] = mysql_error() . '</tt>&lt;<tt>br /</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>Query: ' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query; // Debugging message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; } else { // Form has not been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = NULL;</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; // Begin the page now.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Login';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; if (!empty($errors)) { // Print any error messages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h1 id="mainhead"</tt>&gt;<tt>Error!</tt>&lt;<tt>/h1</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p class="error"</tt>&gt;<tt>The following error(s) occurred:</tt>&lt;<tt>br /</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " - $msg</tt>&lt;<tt>br /</tt>&gt;<tt>\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>/p</tt>&gt;&lt;<tt>p</tt>&gt;<tt>Please try again.</tt>&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>h2</tt>&gt;<tt>Login</tt>&lt;<tt>/h2</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>form action="login.php" method="post"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p</tt>&gt;<tt>Email Address: </tt>&lt;<tt>input type="text" name="email" size="20" maxlength="40" /</tt>&gt;<tt> </tt>&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p</tt>&gt;<tt>Password: </tt>&lt;<tt>input type="password" name="password" size="20" maxlength="20" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>p</tt>&gt;&lt;<tt>input type="submit" name="submit" value="Login" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>input type="hidden" name="submitted" value="TRUE" /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/form</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;
</dpeccode><br>
<a name="phd010"></a>
<br><b>Stating each parameter  <br>  </b>  Some browsers have 
difficulties with cookies that do not list every argument. Explicitly 
stating every parameter — even as an empty string — will achieve more 
reliable results across all browsers.  <br><br>  <b>Expiration guidelines  <br>  </b>
  Here are some general guidelines for cookie expirations:  If the 
cookie should last as long as the session, do not set an expiration 
time.  If the cookie should continue to exist after the user has closed 
and reopened his or her browser, set an expiration time months ahead.  
If the cookie can constitute a security risk, set an expiration time of 
an hour or fraction thereof so that the cookie does not continue to 
exist too long after a user has left his or her browser.  <br><br>  <b>Security consideration  <br>  </b>
  For security purposes, you could set a five or ten-minute expiration 
time on a cookie and have the cookie resent with every new page the user
 visits (assuming that the cookie exists).  This way, the cookie will 
continue to persist as long as the user is active but will automatically
 die five or ten minutes after the user's last action.  <br><br>  <b>Setting the path  <br>  </b>  Setting the path to <tt>'/'</tt> will make the cookie visible within an entire domain (Web site).  <br><br>  <b>Setting the domain  <br>  </b>  Setting the domain to <tt>'.site.com'</tt> will make the cookie visible within an entire domain and every subdomain (<tt>www.site.com, admin.site.com, pages. site.com</tt>, etc.).  <br><br>  <b>Using an SSL  <br>  </b>
  E-commerce and other privacy-related Web applications should use an 
SSL (Secure Sockets Layer) connection for all transactions, including 
the cookie.  <br><br>  
<a name="phd011"></a>

<script language="JavaScript">insertAccQuestion('7','phd011.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phd012"></a>

<script language="JavaScript">insertAccQuestion('8','phd012.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phd013"></a>

<script language="JavaScript">insertAccQuestion('9','phd013.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phd014"></a>

<script language="JavaScript">insertAccQuestion('10','phd014.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phd015"></a>

<script language="JavaScript">insertAccQuestion('11','phd015.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phd017"></a>
<br><dpecw1>
	
In this lesson, you learned that in addition to the name and value arguments, the <tt>setcookie()</tt>
 function also has four more parameters to alter the definition of the 
cookie: expiration, path, domain, and secure. You learned how to use 
each of these parameters. Finally, you learned that you must pass these 
values in order. To skip any parameter, you use <tt>NULL</tt> or an empty string.
	
</dpecw1><br>
<a name="phe001"></a><br><a name="topic5"></a><h2>Lesson 5. Deleting Cookies</h2><dpecw1>

For security reasons, there may be times when you'll want to manually 
delete a cookie rather than wait until the user's browser is closed or 
the expiration is met. This most commonly occurs when a user logs out of
 a Web site.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Delete a cookie
	</li>
	<li>
Create a logout link
	</li>
</ul>

</dpecw1><br>
<a name="phe002"></a>
<br><dpecw1>

The final thing to understand about using cookies is how to delete one. 
While a cookie will automatically expire when the user's browser is 
closed or when the expiration date/time is met, sometimes you'll want to
 manually delete the cookie instead.<br>
For example, in Web sites that have registered users and login 
capabilities, you will probably want to delete any cookies when the user
 logs out. 

</dpecw1><br>
<a name="phe003"></a>
<br><dpecw1>

Although the <tt>setcookie()</tt> function can take up to six arguments,
 only one is actually required — the cookie name. If you send a cookie 
that consists of a name without a value, it will have the same effect as
 deleting the existing cookie of the same name. For example, to create 
the cookie <tt><tt>first_name</tt></tt>, you use this line:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; setcookie('first_name', 'Larry');&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phe004"></a>
<br><dpecw1>

To delete the <tt><tt>first_name</tt></tt><i> </i>cookie, you would code:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; setcookie('first_name');&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phe005"></a>
<br><dpecw1>

As an added precaution, you can also set an expiration date that's in the past.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; setcookie('first_name', '', time()-300);&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

To demonstrate all of this, let's add logout capability to a site, which
 will appear only to logged-in users. As an added bonus, the header file
 will be altered so that a Logout<i> </i>link appears when the user is logged-in and a Login<i> </i>link appears when the user is logged-out.

</dpecw2><br>
<a name="phe006"></a>
<br><dpecw1>
<b>* Step 1</b><br>
Create a new PHP document in your text editor.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # Script logout.php&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phe007"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Check for the existence of a <tt><tt>user_id</tt></tt><i> </i>cookie; if it is present, delete both cookies. As with the <tt>loggedin.php</tt> page, if the user is not already logged in, this page will redirect the user to the home page. <ml_ins_href><ml_data_href>php script. If the user is logged in, these two cookies will effectively delete the existing ones.

</ml_data_href></ml_ins_href></dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (!isset($_COOKIE['user_id'])) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $url = 'http://' . $_SERVER ['HTTP_HOST'] . dirname($_SERVER ['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; if ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') )&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {$url = substr ($url, 0, -1);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $url .= '/index.php';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; exit();</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; setcookie ('first_name', '', time()-300, '/', '', 0);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; setcookie ('user_id', '', time()-300, '/', '', 0);</tt><br>
<tt>&nbsp;&nbsp; } </tt>
</dpeccode><br>
<br><a name="phe007a"></a>
<br><dpecw1>
	
<dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # loggedin.php</tt><br>
<tt>&nbsp;&nbsp; # User is redirected here from login.php.</tt><br>
<tt>&nbsp;&nbsp; // If no cookie is present, redirect the user.</tt><br>
<tt>&nbsp;&nbsp; if (!isset($_COOKIE['user_id'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = 'http://' . $_SERVER['HTTP_HOST'] .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/index.php'; // Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Set the page title and include the HTML header.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Logged In!';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; // Print a customized message.</tt><br>
<tt>&nbsp;&nbsp; echo "&lt;h1&gt;Logged In!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;You are now logged in, {$_COOKIE['first_name']}!&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;";</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode>
	
</dpecw1><br><br>
<a name="phe008"></a>
<br><dpecw1>

<b>* Step 3</b><br>
Make the remainder of the PHP page.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $page_title = 'Logged Out!';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; echo "&lt;h1&gt;Logged Out!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;You are now logged out, {$_COOKIE ['first_name']}!&lt;/p&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;";</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt; </tt><br>
</dpeccode><br>
<a name="phe009"></a>
<br><dpecw1>

The page itself is also much like the <tt>loggedin.php</tt> page. Although it may seem odd that you can still refer to the <tt>first_name</tt><i> </i>cookie (that you just deleted in this script), it makes perfect sense considering the process:<br>
A) This page is requested by the client.<br>
B) The server reads the appropriate cookies from the client's browser.<br>
C) The page is run and does its thing (including sending new cookies).<br>
So, in short, the original <tt>first_name</tt><i> </i>cookie data is 
available to this script when it first runs. The set of cookies sent by 
this page (the delete cookies) aren't available to this page, so the 
original values are still usable.

</dpecw1><br>
<a name="phe010"></a>
<br><dpecjs><b>* Step 4</b>
<br>
Save the file as <tt>logout.php</tt>. This script deletes the previously established cookies. Here is the entire script.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # logout.php</tt><br>
<tt>&nbsp;&nbsp; // This page lets the user logout.</tt><br>
<tt>&nbsp;&nbsp; // If no cookie is present, redirect the user.</tt><br>
<tt>&nbsp;&nbsp; if (!isset($_COOKIE['user_id'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/index.php'; // Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp; } else { // Delete the cookies.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcookie ('first_name', '', time()-300, '/', '', 0);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcookie ('user_id', '', time()-300, '/', '', 0);</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Set the page title and include the HTML header.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Logged Out!';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; // Print a customized message.</tt><br>
<tt>&nbsp;&nbsp; echo "&lt;h1&gt;Logged Out!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;You are now logged out, {$_COOKIE['first_name']}!&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;";</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phe011"></a>
<br><dpecjs>Now let's create the logout link.<br>
<br>
<b>* Step 1</b>
<br>
Open <tt>header.html</tt> in your text editor.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; &lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;head&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta 
http-equiv="content-type" content="text/html; charset=iso-8859-1" 
/&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;&lt;?php echo $page_title; ?&gt;&lt;/title&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;style type="text/css" 
media="all"&gt;@import 
"./includes/layout.css";&lt;/style&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; &lt;/head&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;body&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;div id="wrapper"&gt;&lt;!-- Goes with the CSS layout. --&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id="content"&gt;&lt;!-- Goes with the CSS layout. --&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div id="nav"&gt;&lt;!-- Links section --&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;Menu&lt;/h3&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ul&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li
 class="navtop"&gt;&lt;a href="index.php" title="Go to the Home 
Page"&gt;Home&lt;/a&gt;&lt;/li&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;a
 href="register.php" 
title="Register"&gt;Register&lt;/a&gt;&lt;/li&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;a
 href="view_users.php" title="View the Existing Users"&gt;View 
Users&lt;/a&gt;&lt;/li&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;a
 href="password.php" title="Change Your Password"&gt;Change 
Password&lt;/a&gt;&lt;/li&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&nbsp;&nbsp;&nbsp;&nbsp;<tt>&lt;/ul&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- Script header.html --&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- Start of page-specific content. --&gt;</tt>
</dpeccode><br>
<a name="phe012"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Change the links as follows:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;li class="navtop"&gt;&lt;a href="index.php" 
title="Go to the Home Page"&gt;Home&lt;/a&gt;&lt;/li&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; &lt;li&gt;&lt;a href="register.php" title="Register"&gt;Register&lt;/a&gt;&lt;/li&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;li&gt;&lt;?php</tt><br>
<tt>&nbsp;&nbsp; if ( (isset($_COOKIE['user_id'])) &amp;&amp; (!strpos($_SERVER['PHP_SELF'], 'logout.php')) ) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; echo '&lt;a href="logout.php" title="Logout"&gt;Logout&lt;/a&gt;';</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; echo '&lt;a href="login.php" title="Login"&gt;Login&lt;/a&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; ?&gt;&lt;/li&gt;</tt><br>
</dpeccode><br>
<a name="phe013"></a>
<br><dpecw1>

Instead of having a permanent login link in the template, we'll have it display a Logout<i> </i>link if the user is logged in or a Login<i> </i>link if the user is not. The preceding conditional will accomplish just that based upon the presence of a cookie.<br>
Because the <tt>logout.php</tt> script would ordinarily display a logout
 link (because the cookie exists when the page is first being viewed), 
we have added a statement to the conditional, checking that the current 
page is not the <tt>logout.php</tt> script. The <tt>strpos()</tt> function, which checks if one string is found within another string, is an easy way to accomplish this.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;li class="navtop"&gt;&lt;a href="index.php" 
title="Go to the Home Page"&gt;Home&lt;/a&gt;&lt;/li&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; &lt;li&gt;&lt;a href="register.php" title="Register"&gt;Register&lt;/a&gt;&lt;/li&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;li&gt;&lt;?php</tt><br>
<tt>&nbsp;&nbsp; if ( (isset($_COOKIE['user_id'])) &amp;&amp; (!strpos($_SERVER['PHP_SELF'], 'logout.php')) ) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; echo '&lt;a href="logout.php" title="Logout"&gt;Logout&lt;/a&gt;';</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp; echo '&lt;a href="login.php" title="Login"&gt;Login&lt;/a&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; ?&gt;&lt;/li&gt;</tt><br>
</dpeccode><br>
<a name="phe014"></a>
<br><dpecjs><b>* Step 3</b>
<br>
Save the file, upload to the Web server (placed within the <tt>includes</tt><i> </i>directory), and test the login/logout process in your Web browser.
<br>

<a name="phe015"></a>
<br><dpecjs>After the user logs in, the page now has a Logout link.
<br>

<a name="phe016"></a>
<br><dpecjs>Here's the result after logging out.
<br>

<a name="phe017"></a>
<br><dpecw1>

Here's the <tt><tt>header.html</tt></tt> file in its entirety. The <tt><tt>header.html</tt></tt> file now displays either a login or a logout link depending upon the user's current status.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;head&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta http-equiv="content-type" content="text/html; charset=iso-8859-1" /&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;&lt;?php echo $page_title; ?&gt;&lt;/title&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;style type="text/css" 
media="all"&gt;@import 
"./includes/layout.css";&lt;/style&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; &lt;/head&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;body&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;div id="wrapper"&gt;&lt;!-- Goes with the CSS layout. --&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id="content"&gt;&lt;!-- Goes with the CSS layout. --&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div id="nav"&gt;&lt;!-- Links section --&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;Menu&lt;/h3&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ul&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li class="navtop"&gt;&lt;a href="index.php"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title="Go
 to the Home Page"&gt;Home&lt;/a&gt;&lt;/li&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;a
 href="register.php" 
title="Register"&gt;Register&lt;/a&gt;&lt;/li&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;?php</tt><br>
<tt>&nbsp;&nbsp; // Create a login/logout link.</tt><br>
<tt>&nbsp;&nbsp; if ( (isset($_COOKIE['user_id'])) &amp;&amp; (!strpos($_SERVER['PHP_SELF'], 'logout.php')) ) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;a href="logout.php" title="Logout"&gt;Logout&lt;/a&gt;';</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;a href="login.php" title="Login"&gt;Login&lt;/a&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; ?&gt;&lt;/li&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ul&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- Script header.html --&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- Start of page-specific content. --&gt;</tt><br>
</dpeccode><br>
<a name="phe018"></a>
<br><b>Viewing results  <br>  </b>  To see the result of the <tt>setcookie()</tt> calls in the <tt>logout.php</tt> script, turn on cookie prompting in your browser.  <br><br>  <b>Setting the domain  <br>  </b>  Due to a bug in how Internet Explorer on Windows handles cookies, you may need to set the domain<i> </i>parameter to <tt>false</tt> (without quotes) in order to get the logout process to work when developing on your own computer (i.e., through localhost).  <br><br>  <b>Using parameters  <br>  </b>
  When deleting a cookie, you should always use the same parameters that
 were used to set the cookie.  If you set the domain and path in the 
creation cookie, use them again in the deletion cookie.  <br><br>  <b>Cookie availability  <br>  </b>
  To hammer the point home, remember that the deletion of a cookie does 
not take effect until the page has been reloaded or another page has 
been accessed (in other words, the cookie will still be available to a 
page after that page has deleted it).  This is why we added the <tt>&amp;&amp; (!strpos($_SERVER['PHP_SELF'], 'logout.php'))</tt> clause to the <tt>header.html</tt> conditional (because the cookie itself would still be available on the <tt>logout.php</tt> page).  <br><br>  
<a name="phe019"></a>

<script language="JavaScript">insertAccQuestion('12','phe019.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phe020"></a>

<script language="JavaScript">insertAccQuestion('13','phe020.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phe021"></a>

<script language="JavaScript">insertAccQuestion('14','phe021.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phe022"></a>
<br><dpecw1>
	
In this lesson, you learned how to delete a cookie. This is important 
for security reasons. You can delete a cookie by sending a cookie with a
 name but no value. You also learned that you can set an expiration date
 that's in the past to delete a cookie.<br>
Finally, you learned how to create a logout link that is useful for Web sites with registered users and login capabilities.
	
</dpecw1><br>
<a name="phf001"></a><br><a name="topic6"></a><h2>Lesson 6. Setting Session Variables</h2><dpecw1>

Sessions improve upon cookies by allowing a Web application to store and
 retrieve more information than cookies. They also provide more security
 and can function even if a user rejects cookies or turns them off.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Set session variables
	</li>
	<li>
Begin a session
	</li>
</ul>

</dpecw1><br>
<a name="phf002"></a>
<br><dpecw1>

Another method of making data available to multiple pages of a Web site 
is to use sessions. The premise of a session is that data is stored on 
the server, not in the Web browser, and a session identifier is used to 
locate a particular user's record (session data). This session 
identifier is normally stored in the user's Web browser via a cookie, 
but the sensitive data itself — like the user's ID, name, and so on — 
always remains on the server.

</dpecw1><br><dpecw2>

The question may arise: why use sessions at all when cookies work just 
fine? First of all, sessions are more secure in that all of the recorded
 information is stored on the server and not continually sent back and 
forth between the server and the client. Second, some users reject 
cookies or turn them off completely. Sessions, while designed to work 
with a cookie, can function without one.

</dpecw2><br>
<a name="phf003"></a>
<br><dpecw1>
	
Sessions in PHP requires a temporary directory on the server where PHP 
can store the session data. For Unix and Mac OS X users, this isn't a 
problem, as the <tt>/tmp</tt> directory is available explicitly for 
purposes such as this. For Windows users, you also do not need to do 
anything special as of version 4.3.6 of PHP. But if you are running 
Windows and an earlier version of PHP, you must configure the server. 
Here's how:<br>
<ol>
<li>Create a new folder on your server, such as <tt>C:\temp</tt>.
</li><li>Make sure that Everyone<i> </i>(or just the Web server user, if you know that value) can read and write to this folder.
</li><li>Edit your <tt>php.ini</tt> file, setting the value of <tt>session.save_path</tt><i> </i>to this folder (<tt>C:\temp</tt>).
</li><li>Restart the Web server.</li></ol>
If you see errors about the <tt>session.save_path</tt><i> </i>when you 
first use sessions, pay attention to what the error messages say. Also 
double-check your path name and that you edited the correct <tt>php.ini</tt> file.
	
</dpecw1><br>
<a name="phf004"></a>
<br><dpecw1>

The most important rule with respect to sessions is that each page that will use them must begin by calling the <tt>session_start()</tt> function. This function tells PHP to either begin a new session or access an existing one.<br>
The first time this function is used, <tt>session_start()</tt> will attempt to send a cookie with a name of <tt><tt>PHPSESSID</tt></tt><i> </i>(the session name) and a value of something like <tt><tt>a61f8670baa8e90a30c878df89a2074b</tt></tt><i> </i>(32 hexadecimal letters, the session ID). Because of this attempt to send a cookie, <tt>session_start()</tt> must be called before any data is sent to the Web browser, as is the case when using the <tt>setcookie()</tt> and <tt>header()</tt> functions.<br>
Once the session has been started, values can be registered to the session using the following:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $_SESSION['</tt><i><tt>key</tt></i><tt>'] = '</tt><i><tt>value</tt></i><tt>';</tt><br>
<tt>&nbsp;&nbsp; $_SESSION['name'] = 'Jessica';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $_SESSION['id'] = 48; </tt><br>
</dpeccode><br>
<a name="phf005"></a>
<br><dpecjs>To demonstrate sessions — and to compare them with cookies — let's rewrite the the <tt>login.php</tt> script.<br>
<br>
<b>* Step 1</b>
<br>
Open <tt>login.php</tt> in your text editor.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # login.php</tt><br>
<tt>&nbsp;&nbsp; // Send NOTHING to the Web browser prior to the setcookie() lines!&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['password'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Retrieve the user_id and first_name for </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; that email/password combination. */</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT 
user_id, first_name FROM users WHERE email='$e' AND 
password=SHA('$p')";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Return a record, if applicable.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($row) { // A record was pulled from the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the cookies &amp; redirect.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcookie ('user_id', $row[0], time()+3600, '/', '', 0);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcookie
 ('first_name', $row[1], time()+3600, '/', '', 0);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Redirect the user to the loggedin.php page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url
 = 'http://' . $_SERVER['HTTP_HOST'] . 
dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
 ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) 
{&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/loggedin.php';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // No record matched the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = 'The email address and password entered do not match those on file.';
 // Public message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = mysql_error() . '&lt;br /&gt;&lt;br /&gt;Query: ' . $query; // 
Debugging message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; } else { // Form has not been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = NULL;</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; // Begin the page now.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Login';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; if (!empty($errors)) { // Print any error messages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;h1 id="mainhead"&gt;Error!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p class="error"&gt;The following error(s) occurred:&lt;br /&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " - $msg&lt;br /&gt;\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;/p&gt;&lt;p&gt;Please try again.&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;h2&gt;Login&lt;/h2&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;form action="login.php" method="post"&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Email Address: 
&lt;input type="text" name="email" size="20" maxlength="40" /&gt; 
&lt;/p&gt;&nbsp;&nbsp; </tt>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Password: &lt;input 
type="password" name="password" size="20" maxlength="20" 
/&gt;&lt;/p&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;&lt;input type="submit" name="submit" value="Login" /&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type="hidden" name="submitted" value="TRUE" /&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;/form&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phf006"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Replace the <tt>setcookie()</tt> lines with these lines:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; session_start();</tt><br>
<tt>&nbsp;&nbsp; $_SESSION['user_id'] = $row[0];&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $_SESSION['first_name'] = $row[1];&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

The first step is to begin the session. Since there are no <tt>echo()</tt> statements, include calls, or HTML prior to this point in the script, it will be safe to use <tt>session_start()</tt> now, although it could be placed at the top of the script as well. Then, add two key-value<i> </i>pairs to the <tt>$_SESSION</tt> superglobal array to register the user's first name and user ID to the session.

</dpecw2><br>
<a name="phf007"></a>
<br><dpecjs><b>* Step 3</b>
<br>
Save the page as <tt>login.php</tt>, upload to your server, and test in your Web browser. Although <tt>loggedin.php</tt> and the header and script will need to be rewritten, you can still test the login script and see the resulting cookie.
The <tt>loggedin.php</tt> page should redirect you back to the home page, though, as it's still checking for the presence of a <tt>$_COOKIE</tt> variable.
<br>

<a name="phf008"></a>
<br><dpecjs>Here is the completed script. The <tt>login.php</tt> script now uses sessions instead of cookies.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # Script login.php</tt><br>
<tt>&nbsp;&nbsp; // Send NOTHING to the Web browser prior to the session_start() line!</tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['password'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Retrieve the user_id and first_name for </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; that email/password combination. */</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT 
user_id, first_name FROM users WHERE email='$e' AND 
password=SHA('$p')";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Return a record, if applicable.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($row) { // A record was pulled from the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the session data &amp; redirect.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_start();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['user_id'] = $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['first_name'] = $row[1];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Redirect the user to the loggedin.php page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url
 = 'http://' . $_SERVER['HTTP_HOST'] . 
dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
 ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/loggedin.php';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // No record matched the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = 'The email address and password entered do not match those on file.';
 // Public message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = mysql_error() . '&lt;br /&gt;&lt;br /&gt;Query: ' . $query; // 
Debugging message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; } else { // Form has not been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = NULL;</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; // Begin the page now.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Login';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; if (!empty($errors)) { // Print any error messages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;h1 id="mainhead"&gt;Error!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p class="error"&gt;The following error(s) occurred:&lt;br /&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " - $msg&lt;br /&gt;\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;/p&gt;&lt;p&gt;Please try again.&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;h2&gt;Login&lt;/h2&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;form action="login.php" method="post"&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Email Address: 
&lt;input type="text" name="email" size="20" maxlength="40" /&gt; 
&lt;/p&gt;&nbsp;&nbsp; </tt>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Password: &lt;input 
type="password" name="password" size="20" maxlength="20" /&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;&lt;input type="submit" name="submit" value="Login" /&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type="hidden" name="submitted" value="TRUE" /&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;/form&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phf009"></a>
<br><dpecw1>
	
Prior to version 4.1 of PHP (when the <tt>$_SESSION</tt> superglobal became available), session variables were set using the special <tt>session_register()</tt> function. The syntax was<br>
<tt>   session_start();<br>
&nbsp;  $name = 'Jessica';<br>
&nbsp;  session_register('name'); </tt><br>
It's very important to notice that the <tt>session_register()</tt> function takes the name of a variable to register without the initial dollar sign (so <tt>name</tt><i> </i>rather than <tt>$name</tt>). <br>
Once a session variable is registered, you can refer to is using <tt>$HTTP_SESSION_VARS['var']</tt>.<br>
To delete a session variable, you use the <tt>session_unregister()</tt> function. <br>
To repeat, you only need to use these functions if you are using an old<i> </i>version of PHP (between 4.0 and 4.1). As always, see the PHP manual for more information on these functions.
	
</dpecw1><br>
<a name="phf010"></a>
<br><b>Sending cookies  <br>  </b>  Because sessions will normally send 
and read cookies, you should always try to begin them as early in the 
script as possible.  Doing so will help you avoid the problem of 
attempting to send a cookie after the headers (HTML or white space) have
 already been sent.  <br><br>  <b>Using <tt>session auto_start</tt>  <br>  </b>  If you want, you can set <tt>session.auto_start</tt><i> </i>in the <tt>php.ini</tt> file to 1, making it unnecessary to use <tt>session_start()</tt>
 on each page.  This does put a greater toll on the server and, for that
 reason, shouldn't be used without some consideration of the 
circumstances.  <br><br>  <b>Storing arrays  <br>  </b>  You can store arrays in sessions (making <tt>$_SESSION</tt> a multidimensional array), just as you can strings or numbers.  <br><br>  
<a name="phf011"></a>

<script language="JavaScript">insertAccQuestion('15','phf011.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phf012"></a>

<script language="JavaScript">insertAccQuestion('16','phf012.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phf013"></a>

<script language="JavaScript">insertAccQuestion('17','phf013.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phf014"></a>

<script language="JavaScript">insertAccQuestion('18','phf014.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phf016"></a>
<br><dpecw1>
	
In this lesson, you learned that sessions are another way to make data 
available to multiple pages of a Web site. You learned that sessions are
 more secure than cookies because all the recorded information is stored
 on the server. Sessions also function when users reject cookies or turn
 them off.<br>
You also learned how to call sessions using the <tt>session_start()</tt> function and how to register values using <tt>$_SESSION['<i>value</i>']</tt>.
	
</dpecw1><br>
<a name="phg001"></a><br><a name="topic7"></a><h2>Lesson 7. Accessing Session Variables</h2><dpecw1>

Once a session has been started and variables have been registered to 
it, you can create other scripts that will access those variables. To do
 so, each script must first enable sessions.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Access session variables
	</li>
</ul>

</dpecw1><br>
<a name="phg002"></a>
<br><dpecw1>

For other scripts to be able to access variables from a session that has
 been started, each script must first enable sessions, using <tt>session_start()</tt>.<br>
This function will give the current script access to the previously started session (if it can read the <tt>PHPSESSID</tt><i> </i>value
 stored in the cookie) or create a new session if it cannot (in which 
case, it won't be able to access stored values because a new session 
will have been created).<br>
To then refer to a session variable, use <tt>$_SESSION['var']</tt>, as you would refer to any other array. Let's try this with a script.

</dpecw1><br>
<a name="phg003"></a>
<br><dpecjs><b>* Step 1</b>
<br>
Open <tt>loggedin.php</tt> in your text editor.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # loggedin.php</tt><br>
<tt>&nbsp;&nbsp; # User is redirected here from login.php.</tt><br>
<tt>&nbsp;&nbsp; // If no cookie is present, redirect the user.</tt><br>
<tt>&nbsp;&nbsp; if (!isset($_COOKIE['user_id'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/index.php'; // Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Set the page title and include the HTML header.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Logged In!';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; // Print a customized message.</tt><br>
<tt>&nbsp;&nbsp; echo "&lt;h1&gt;Logged In!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;You are now logged in, {$_COOKIE['first_name']}!&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;";</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phg004"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Add a call to the <tt>session_start()</tt> function.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; session_start();&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

Every PHP script that either sets or accesses session variables must use the <tt>session_start()</tt> function. This line must be called before the <tt>header.html</tt> file is included and before anything is sent to the Web browser.

</dpecw2><br>
<a name="phg005"></a>
<br><dpecw1>

<b>* Step 3</b><br>
Replace the references to <tt>$_COOKIE</tt> with <tt>$_SESSION</tt>.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (!isset($_SESSION['user_id'])) {&nbsp;&nbsp;</tt><br>
<tt>...</tt><br>
<tt>&nbsp;&nbsp; echo "&lt;h1&gt;Logged In!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;You are now logged in, {$_SESSION['first_name']}!&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;";&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

Switching a script from cookies to sessions requires only that you change uses of <tt>$_COOKIE</tt> to <tt>$_SESSION</tt>.

</dpecw2><br>
<a name="phg006"></a>
<br><dpecjs><b>* Step 4</b>
<br>
Save the file as <tt>loggedin.php</tt>, upload to your Web server, and test in your browser.
<br>

<a name="phg007"></a>
<br><dpecw1>

<b>* Step 5</b><br>
Replace the reference to <tt>$_COOKIE</tt> with <tt>$_SESSION</tt> in <tt>header.html</tt>. <ml_ins_href><ml_data_href>html file.

</ml_data_href></ml_ins_href></dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if ( (isset($_SESSION['user_id']))</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; &amp;&amp; (!strpos($_SERVER['PHP_SELF'],&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; 'logout.php')) ) {&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

For the Login/Logout<i> </i>links to function properly, the reference to
 the cookie variable within the header file must be switched over to 
sessions. The header file does not need to call the <tt>session_start()</tt> function, as it'll be included by pages that do.

</dpecw2><br>
<br><a name="phg007a"></a>
<br><dpecw1>
	
<dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;head&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta http-equiv="content-type" content="text/html;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;charset=iso-8859-1" /&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;&lt;?php echo $page_title; ?&gt;&lt;/title&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;style type="text/css" media="all"&gt;@import</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"./includes/layout.css";&lt;/style&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; &lt;/head&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;body&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;div id="wrapper"&gt;&lt;!-- Goes with the CSS layout. --&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id="content"&gt;&lt;!-- Goes with the CSS layout. --&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div id="nav"&gt;&lt;!-- Links section --&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;Menu&lt;/h3&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ul&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li class="navtop"&gt;&lt;a href="index.php"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title="Go
 to the Home Page"&gt;Home&lt;/a&gt;&lt;/li&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;a
 href="register.php" 
title="Register"&gt;Register&lt;/a&gt;&lt;/li&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;?php</tt><br>
<tt>&nbsp;&nbsp; // Create a login/logout link.</tt><br>
<tt>&nbsp;&nbsp; if ( (isset($_COOKIE['user_id'])) &amp;&amp;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; (!strpos($_SERVER['PHP_SELF'], 'logout.php')) ) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;a href="logout.php" title="Logout"&gt;Logout&lt;/a&gt;';</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;a href="login.php" title="Login"&gt;Login&lt;/a&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; ?&gt;&lt;/li&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ul&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- Script header.html --&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- Start of page-specific content. --&gt;</tt>
</dpeccode>
	
</dpecw1><br><br>
<a name="phg008"></a>
<br><dpecjs><b>* Step 6</b>
<br>
Save the header file, upload to the Web server, and test in your browser.
<br>

<a name="phg009"></a>
<br><dpecjs>Here's the completed script. We've updated <tt>loggedin.php</tt> so that it refers to <tt>$_SESSION</tt> and not <tt>$_COOKIE</tt>.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # loggedin.php</tt><br>
<tt>&nbsp;&nbsp; # User is redirected here from login.php.</tt><br>
<tt>&nbsp;&nbsp; session_start(); // Start the session.</tt><br>
<tt>&nbsp;&nbsp; // If no session value is present, redirect the user.</tt><br>
<tt>&nbsp;&nbsp; if (!isset($_SESSION['user_id'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/index.php'; // Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Set the page title and include the HTML header.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Logged In!';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; // Print a customized message.</tt><br>
<tt>&nbsp;&nbsp; echo "&lt;h1&gt;Logged In!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;You are now logged in, {$_SESSION['first_name']}!&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;";</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phg010"></a>
<br><dpecjs>We've also updated the <tt><tt>header.html</tt></tt> file to reference <tt>$_SESSION</tt>.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;head&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta http-equiv="content-type" content="text/html; charset=iso-8859-1" /&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;&lt;?php echo $page_title; ?&gt;&lt;/title&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;style type="text/css" 
media="all"&gt;@import 
"./includes/layout.css";&lt;/style&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; &lt;/head&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;body&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;div id="wrapper"&gt;&lt;!-- Goes with the CSS layout. --&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id="content"&gt;&lt;!-- Goes with the CSS layout. --&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div id="nav"&gt;&lt;!-- Links section --&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;Menu&lt;/h3&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ul&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li class="navtop"&gt;&lt;a href="index.php"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title="Go
 to the Home Page"&gt;Home&lt;/a&gt;&lt;/li&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;a
 href="register.php" 
title="Register"&gt;Register&lt;/a&gt;&lt;/li&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;?php</tt><br>
<tt>&nbsp;&nbsp; // Create a login/logout link.</tt><br>
<tt>&nbsp;&nbsp; if ( (isset($_SESSION['user_id'])) &amp;&amp; (!strpos($_SERVER['PHP_SELF'],</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; 'logout.php')) ) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;a href="logout.php" title="Logout"&gt;Logout&lt;/a&gt;';</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;a href="login.php" title="Login"&gt;Login&lt;/a&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; ?&gt;&lt;/li&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ul&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- header.html --&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- Start of page-specific content. --&gt;</tt>
</dpeccode><br>
<a name="phg011"></a>
<br><b>Viewing the session ID  <br>  </b>  If you have an application 
where the session data does not seem to be accessible from one page to 
the next, it could be because a new session is being created on each 
page.  To check for this, compare the session ID (the last few 
characters of the value will suffice) to see if it is the same. You can 
see the session's ID by viewing the session cookie as it is sent or by 
using the <tt>session_id()</tt> function:  <tt>echo session_id();</tt>  <br><br>  <b>Establishing session variables  <br>  </b>  Session variables are available as soon as you've established them. So, unlike when using cookies, you can assign a value to <tt>$_SESSION['var']</tt> and then refer to <tt>$_SESSION['var']</tt> later in that same script.  <br><br>  
<a name="phg012"></a>

<script language="JavaScript">insertAccQuestion('19','phg012.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phg013"></a>

<script language="JavaScript">insertAccQuestion('20','phg013.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phg014"></a>

<script language="JavaScript">insertAccQuestion('21','phg014.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phg015"></a>
<br><dpecw1>
	
In this lesson, you learned how to access variables from a session from 
another script. Each script that accesses variables must first enable 
sessions using <tt>session_start()</tt>. You also learned that <tt>$_SESSION['var']</tt>
 is used to refer to a session variable. Finally, you learned that 
unlike cookies, you can assign a value to a session and refer to it 
later in that same script.
	
</dpecw1><br>
<a name="phh001"></a><br><a name="topic8"></a><h2>Lesson 8. Deleting Session Variables</h2><dpecw1>

When using sessions — particularly with a login/logout system — you need to create a method to delete the session variables.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Delete a session
	</li>
</ul>

</dpecw1><br>
<a name="phh002"></a>
<br><dpecw1>

Whereas a cookie system only requires that another cookie be sent to 
destroy the existing cookie, sessions are more demanding, since there 
are both the cookie on the client and the data on the server to 
consider. 
To delete an individual session variable, you can use the <tt>unset()</tt> function (which works with any variable in PHP):

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; unset($_SESSION['</tt><i><tt>var</tt></i><tt>']);&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phh003"></a>
<br><dpecw1>

To delete every session variable, reset the entire <tt>$_SESSION</tt> array:<br>
<tt>   $_SESSION = array(); </tt><br>
Finally, to remove all of the session data from the server, use <tt>session_destroy()</tt>:<br>
<tt>   session_destroy(); </tt><br>
Note that prior to using any of these methods, the page must begin with <tt>session_start()</tt> so that the existing session is accessed. Let's delete a session.

</dpecw1><br>
<a name="phh004"></a>
<br><dpecw1>

<b>* Step 1</b><br>
Create a new PHP script in your text editor.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # logout.php&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phh005"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Invoke the session.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; session_start();&nbsp;&nbsp; </tt>
</dpeccode><br><dpecw2>

Anytime you are using sessions, you must use the <tt>session_start()</tt> function, preferably at the very beginning of a page. This is true even if you are deleting a session.

</dpecw2><br>
<a name="phh006"></a>
<br><dpecw1>

<b>* Step 3</b><br>
Check for the presence of the <tt>$_SESSION['user_id']</tt> variable.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (!($_SESSION['user_id'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $url = 'http://' . $_SERVER ['HTTP_HOST'] . dirname($_SERVER ['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; if ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') )</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {$url = substr ($url, 0, -1);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $url .= '/index.php'; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; header("Location: $url"); </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; exit();</tt><br>
</dpeccode><br><dpecw2>

If the user is not currently logged in, he or she will be redirected.

</dpecw2><br>
<a name="phh007"></a>
<br><dpecw1>

<b>* Step 4</b><br>
Destroy all of the session material.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; $_SESSION = array();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; session_destroy();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; setcookie ('PHPSESSID', '', time()-300, '/', '', 0);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br><dpecw2>

The second line here will reset the entire <tt>$_SESSION</tt> variable 
as a new array, erasing its existing values. The third line removes the 
data from the server, and the fourth sends a cookie to replace the 
existing session cookie in the browser.

</dpecw2><br>
<a name="phh008"></a>
<br><dpecw1>

<b>* Step 5</b><br>
Create the HTML and print a message.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $page_title = 'Logged Out!';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; echo "&lt;h1&gt;Logged Out!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;You are now logged out!&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;";</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; ?&gt; </tt><br>
</dpeccode><br><dpecw2>

Unlike when using the cookie <tt><tt>logout.php</tt></tt> script, you cannot refer to the user by first name anymore, as all of that data has been deleted.

</dpecw2><br>
<a name="phh009"></a>
<br><dpecjs><b>* Step 6</b>
<br>
Save the file as <tt>logout.php</tt>, upload to your Web server, and test in your browser.
<br>

<a name="phh010"></a>
<br><dpecjs>Here's the script in it entirety. The logout script will log out the user and delete all the session information.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # logout.php</tt><br>
<tt>&nbsp;&nbsp; // This page lets the user logout.</tt><br>
<tt>&nbsp;&nbsp; session_start(); // Access the existing session.</tt><br>
<tt>&nbsp;&nbsp; // If no session variable exists, redirect the user.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; if (!($_SESSION['user_id'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/index.php'; // Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp; } else { // Cancel the session.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION = array(); // Destroy the variables.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_destroy(); // Destroy the session itself.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcookie ('PHPSESSID', '', time()-300, '/', '', 0); // Destroy the cookie.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Set the page title and include the HTML header.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Logged Out!';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; // Print a customized message.</tt><br>
<tt>&nbsp;&nbsp; echo "&lt;h1&gt;Logged Out!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;You are now logged out!&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;";</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phh011"></a>
<br><b>Using older versions of PHP  <br>  </b>  If you are using an older version of PHP (prior to version 4.1) and the <tt>$_SESSION</tt> array is not available, use <tt>session_unset()</tt> in lieu of <tt>$_SESSION = array()</tt>.  <br><br>  <b>Setting <tt>$_SESSION</tt> to <tt>NULL</tt>  <br>  </b>  Never set <tt>$_SESSION</tt> equal to <tt>NULL</tt>, because that could cause problems on some servers.  <br><br>  <b>Deleting one variable  <br>  </b>  To delete just one session variable, use <tt>unset($_SESSION['var'])</tt>.  <br><br>  
<a name="phh012"></a>

<script language="JavaScript">insertAccQuestion('22','phh012.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phh013"></a>

<script language="JavaScript">insertAccQuestion('23','phh013.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phh014"></a>

<script language="JavaScript">insertAccQuestion('24','phh014.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phh015"></a>
<br><dpecw1>
	
In this lesson, you learned how to delete session variables. When 
deleting sessions, you must remove both the cookie on the client and the
 data on the server. You learned how to delete individual session 
variables using the <tt>unset()</tt> function, every session variable by resetting the <tt>$_SESSION</tt> array, and session data from the server using <tt>session_destroy()</tt>.
	
</dpecw1><br>
<a name="phi001"></a><br><a name="topic9"></a><h2>Lesson 9. Changing Session Behavior</h2><dpecw1>

As part of PHP's support for sessions, there are about 20 different 
configuration options you can set for how PHP handles sessions. You can 
also set the name of the session to a more user-friendly name.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Identify session configuration settings
	</li>
	<li>
Use your own session names
	</li>
</ul>

</dpecw1><br>
<a name="phi002"></a>
<br><dpecw1>

The following table lists the most important PHP session configuration 
options, with the default setting listed as most of the examples.<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Setting</b>

</th><th class="heading" scope="col">
<b>Example</b>

</th><th class="heading" scope="col">
<b>Meaning</b>

	</th></tr>
	<tr valign="top">
<td>
<tt>session.auto_start</tt>
</td>
<td>
<tt>0</tt>
</td>
<td>
If sessions should be automatically used (0 means no).
</td>
	</tr>
	<tr valign="top">
<td>
<tt>session.cookie_domain</tt>
</td>
<td>
<tt>www.mycompany.com</tt>
</td>
<td>
The URL wherein the session cookie should be accessible.
</td>
	</tr>
	<tr valign="top">
<td>
<tt>session.cookie_lifetime</tt>
</td>
<td>
<tt>0</tt>
</td>
<td>
How long, in seconds, the session cookie should exist (0 means for the life of the browser).
</td>
	</tr>
	<tr valign="top">
<td>
<tt>session.cookie_path</tt>
</td>
<td>
<tt>/</tt>
</td>
<td>
The domain path wherein the cookie should be accessible.
</td>
	</tr>
	<tr valign="top">
<td>
<tt>session.cookie_secure</tt>
</td>
<td>
<tt>0</tt>
</td>
<td>
Whether or not the cookie must be sent over a secure connection (0 means no).
</td>
	</tr>
	<tr valign="top">
<td>
<tt>session.gc_probability</tt>
</td>
<td>
<tt>1</tt>
</td>
<td>
The odds of performing garbage collection from 1 to 100.
</td>
	</tr>
	<tr valign="top">
<td>
<tt>session.gc_maxlifetime</tt>
</td>
<td>
<tt>1440</tt>
</td>
<td>
The time period in seconds a session should last.
</td>
	</tr>
	<tr valign="top">
<td>
<tt>session.name</tt>
</td>
<td>
<tt>PHPSESSID</tt>
</td>
<td>
The name given to all sessions.
</td>
	</tr>
	<tr valign="top0">
<td>
<tt>session.save_handler</tt>
</td>
<td>
<tt>files</tt>
</td>
<td>
How the session data will be stored. 
</td>
	</tr>
	<tr valign="top1">
<td>
<tt>session.save_path</tt>
</td>
<td>
<tt>/tmp</tt>
</td>
<td>
Where session data will be stored.
</td>
	</tr>
	<tr valign="top2">
<td>
<tt>session.serialize_handler</tt>
</td>
<td>
<tt>php</tt>
</td>
<td>
What method should be used to serialize the session variables.
</td>
	</tr>
	<tr valign="top3">
<td>
<tt>session.use_cookies</tt>
</td>
<td>
<tt>1</tt>
</td>
<td>
Whether or not the session ID should be stored in a cookie (0 means no).
</td>
	</tr>
	<tr valign="top4">
<td>
<tt>session.use_only_cookies</tt>
</td>
<td>
<tt>0</tt>
</td>
<td>
Whether or not the session ID must be stored in a cookie (0 means no).
</td>
	</tr>
	<tr valign="top5">
<td>
<tt>session.use_trans_sid</tt>
</td>
<td>
<tt>0</tt>
</td>
<td>
Whether or not PHP should add the session ID to every link in an application (0 means no).
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw1><br>
<a name="phi003"></a>
<br><dpecw1>

Each of these settings, except for <tt>session.use_trans_sid</tt>, can be set within your PHP script using the <tt>ini_set()</tt> function:<br>
<tt>   ini_set (<i>parameter</i>, <i>new_setting</i>);   </tt><br>
For example, to change where PHP stores the session data, use<br>
<tt>   ini_set ('session.save_path', '/<i>path</i>/<i>to</i>/<i>folder</i>');</tt>

</dpecw1><br>
<a name="phi004"></a>
<br><dpecw1>

To set the name of the session (perhaps to make a more user-friendly one), you can use either <tt>ini_set()</tt> or the simpler <tt>session_name()</tt> function.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; session_name('YourSession');&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

The benefits of creating your own session name are twofold: it's 
marginally more secure and it may be better received by the end user 
(since the session name is the cookie name the end user will see).<br>
That being said, for <tt>session_name()</tt> to work, it must be called before every use of <tt>session_ start()</tt> in your entire Web application. Let's rewrite the example with this in mind.

</dpecw2><br>
<a name="phi005"></a>
<br><dpecjs><b>* Step 1</b>
<br>
Open or create <tt>login.php</tt> in your text editor.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # Script login.php</tt><br>
<tt>&nbsp;&nbsp; // Send NOTHING to the Web browser prior to the session_start() line!</tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['password'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Retrieve the user_id and first_name for </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; that email/password combination. */</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT 
user_id, first_name FROM users WHERE email='$e' AND 
password=SHA('$p')";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Return a record, if applicable.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($row) { // A record was pulled from the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the session data &amp; redirect.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_start();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['user_id'] = $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['first_name'] = $row[1];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Redirect the user to the loggedin.php page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url
 = 'http://' . $_SERVER['HTTP_HOST'] . 
dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
 ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/loggedin.php';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // No record matched the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = 'The email address and password entered do not match those on file.';
 // Public message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = mysql_error() . '&lt;br /&gt;&lt;br /&gt;Query: ' . $query; // 
Debugging message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; } else { // Form has not been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = NULL;</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; // Begin the page now.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Login';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; if (!empty($errors)) { // Print any error messages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;h1 id="mainhead"&gt;Error!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p class="error"&gt;The following error(s) occurred:&lt;br /&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " - $msg&lt;br /&gt;\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;/p&gt;&lt;p&gt;Please try again.&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;h2&gt;Login&lt;/h2&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;form action="login.php" method="post"&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Email Address: 
&lt;input type="text" name="email" size="20" maxlength="40" /&gt; 
&lt;/p&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Password: &lt;input 
type="password" name="password" size="20" maxlength="20" /&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;&lt;input type="submit" name="submit" value="Login" /&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type="hidden" name="submitted" value="TRUE" /&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;/form&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phi006"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Before the <tt>session_start()</tt> call, add the following:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; session_name ('YourVisitID');&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

Instead of having the session be named <tt><tt>PHPSESSID</tt></tt>, which may be imposing as a cookie name, let's use the friendlier <tt><tt>YourVisitID</tt></tt>.

</dpecw2><br>
<a name="phi007"></a>
<br><dpecw1>

<b>* Step 3</b><br>
Repeat the process for <tt>loggedin.php</tt>.
Because every page must use the same session name, this line of code has to be added to the <tt>loggedin.php</tt> and <tt>logout.php</tt> scripts for them to work properly.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # loggedin.php</tt><br>
<tt>&nbsp;&nbsp; # User is redirected here from login.php.</tt><br>
<tt>&nbsp;&nbsp; session_name ('YourVisitID');</tt><br>
<tt>&nbsp;&nbsp; session_start(); // Start the session.</tt><br>
<tt>&nbsp;&nbsp; // If no session value is present, redirect the user.</tt><br>
<tt>&nbsp;&nbsp; if (!isset($_SESSION['user_id'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/index.php'; // Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Set the page title and include the HTML header.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Logged In!';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; // Print a customized message.</tt><br>
<tt>&nbsp;&nbsp; echo "&lt;h1&gt;Logged In!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;You are now logged in, {$_SESSION['first_name']}!&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;";</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phi008"></a>
<br><dpecw1>

<b>* Step 4</b><br>
Add the following line to <tt>logout.php</tt>:<br>
<tt>   session_name ('YourVisitID');</tt>

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # logout.php</tt><br>
<tt>&nbsp;&nbsp; // This page lets the user logout.</tt><br>
<tt>&nbsp;&nbsp; session_name ('YourVisitID');</tt><br>
<tt>&nbsp;&nbsp; session_start(); // Access the existing session.</tt><br>
<tt>&nbsp;&nbsp; // If no session variable exists, redirect the user.</tt><br>
<tt>&nbsp;&nbsp; if (!($_SESSION['user_id'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/index.php'; // Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp; } else { // Cancel the session.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION = array(); // Destroy the variables.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_destroy(); // Destroy the session itself.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcookie (session_name(), '', time()-300, '/', '', 0); // Destroy the cookie.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Set the page title and include the HTML header.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Logged Out!';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; // Print a customized message.</tt><br>
<tt>&nbsp;&nbsp; echo "&lt;h1&gt;Logged Out!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;You are now logged out!&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;";</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phi009"></a>
<br><dpecw1>

<b>* Step 5</b><br>
Change the <tt>setcookie()</tt> line of <tt>logout.php</tt> so that it uses the <tt>session_name()</tt> function:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; setcookie (session_name(), '', time()-300, '/', '', 0);&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

The <tt>session_name()</tt> function will set the session name or return
 the current session name (if no argument is given). Since we want to 
send a cookie using the same cookie name as was used to create the 
cookie, the <tt>session_name()</tt> function will set that value appropriately.

</dpecw2><br>
<a name="phi010"></a>
<br><dpecjs><b>* Step 6</b>
<br>
Save all the files, upload to your Web server, and test in your Web 
browser. If desired, view the cookie that was set during the login 
process.
<br>

<a name="phi011"></a>
<br><dpecjs>Here's the script in its entirety. The <tt>login.php</tt> script now uses an original session name.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # login.php</tt><br>
<tt>&nbsp;&nbsp; // Send NOTHING to the Web browser prior to the session_start() line!&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['password'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Retrieve the 
user_id and first_name for that email/password combination. 
*/&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT user_id, first_name FROM users</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE email='$e' AND password=SHA('$p')";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = 
mysql_fetch_array ($result, MYSQL_NUM); // Return a record, if 
applicable.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($row) { // A record was pulled from the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the session data &amp; redirect.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_name ('YourVisitID');</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_start();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['user_id'] = $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['first_name'] = $row[1];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Redirect the user to the loggedin.php page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url
 = 'http://' . $_SERVER['HTTP_HOST'] . 
dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
 ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) 
{&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/loggedin.php';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // No record matched the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[] = 'The email address and password entered</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do
 not match those on file.'; // Public message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = mysql_error() . '&lt;br /&gt;&lt;br /&gt;Query: ' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query; // Debugging message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; } else { // Form has not been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = NULL;</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; // Begin the page now.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Login';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; if (!empty($errors)) { // Print any error messages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;h1 id="mainhead"&gt;Error!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p class="error"&gt;The following error(s) occurred:&lt;br /&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " - $msg&lt;br /&gt;\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;/p&gt;&lt;p&gt;Please try again.&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;h2&gt;Login&lt;/h2&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;form action="login.php" method="post"&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Email Address: 
&lt;input type="text" name="email" size="20" maxlength="40" /&gt; 
&lt;/p&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Password: &lt;input type="password" name="password"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size="20" maxlength="20" /&gt;&lt;/p&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;&lt;input type="submit" name="submit" value="Login" /&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type="hidden" name="submitted" value="TRUE" /&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;/form&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phi012"></a>

<script language="JavaScript">insertAccQuestion('25','phi012.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phi013"></a>

<script language="JavaScript">insertAccQuestion('26','phi013.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phi014"></a>

<script language="JavaScript">insertAccQuestion('27','phi014.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phi015"></a>

<script language="JavaScript">insertAccQuestion('28','phi015.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phi016"></a>
<br><dpecw1>
	
In this lesson, you learned that there are about 20 different 
configuration options you can set for how PHP handles sessions. You 
learned about the most important of these and were given examples. You 
learned that the <tt>ini_set()</tt> function is used to set these settings within your PHP script.<br>
You also learned that you can change the name of the session using either <tt>ini_set()</tt> or <tt>session_name()</tt>. Changing the name of the session makes it both more user friendly and marginally more secure. Finally, you learned that <tt>session_name()</tt> must be called before every use of <tt>session_start()</tt> to work properly.
	
</dpecw1><br>
<a name="phj001"></a><br><a name="topic10"></a><h2>Lesson 10. Changing the Session Cookie Settings</h2><dpecw1>

You can accomplish the same tasks using cookies and sessions. Obviously,
 both are easy to use in PHP, but the true question is when to use one 
or the other.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Identify advantages of sessions and cookies
	</li>
	<li>
Change the session cookie settings
	</li>
</ul>

</dpecw1><br>
<a name="phj002"></a>
<br><dpecw1>

Sessions have the following advantages over cookies:<br>
<ul>
	<li>
They are generally more secure (because the data is being retained on the server).
	</li>
	<li>
They allow for more data to be stored.
	</li>
	<li>
They can be used without cookies. 
	</li>
</ul>
Whereas cookies have the following advantages over sessions:<br>
<ul>
	<li>
They are easier to program.
	</li>
	<li>
They require less of the server. 
	</li>
</ul>

</dpecw1><br><dpecw2>

In general, to store and retrieve just a couple of small pieces of 
information, use cookies. For most of your Web applications, though, 
you'll use sessions. But since sessions do rely upon cookies by default,
 let's discuss how to better manage this relationship.

</dpecw2><br>
<a name="phj003"></a>
<br><dpecw1>

As it stands, the cookie sent by the <tt>session_start()</tt> function uses certain default parameters: an expiration of <tt>0</tt> (meaning the cookie will last as long as the browser remains open), a path of <tt>'/'</tt>
 (the cookie is available in the current folder and all of its 
subfolders), and no domain name. To change any of these settings, you 
can use the <tt>session_set_cookie_params()</tt> function:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; session_set_cookie_params(</tt><i><tt>expiration</tt></i><tt>, '</tt><i><tt>path</tt></i><tt>', '</tt><i><tt>domain</tt></i><tt>', </tt><i><tt>secure</tt></i><tt>);&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

The expiration setting is the only required value and is set in seconds with <tt>0</tt> as the default. This is not the number of seconds from the epoch (as is the case with the <tt>setcookie()</tt> function), and therefore you would use just <tt>300</tt><i> </i>(for five minutes) rather than <tt>time() + 300</tt><i> </i>(for five minutes from now).

</dpecw2><br>
<a name="phj004"></a>
<br><dpecjs>Let's try to change the session cookie settings.<br>
<br>
<b>* Step 1</b>
<br>
Open or create <tt>login.php</tt> in your text editor.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # login.php</tt><br>
<tt>&nbsp;&nbsp; // Send NOTHING to the Web browser prior to the session_start() line!</tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['password'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Retrieve the 
user_id and first_name for that email/password combination. 
*/&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT user_id, first_name FROM users</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE email='$e' AND password=SHA('$p')";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = 
mysql_fetch_array ($result, MYSQL_NUM); // Return a record, if 
applicable.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($row) { // A record was pulled from the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the session data &amp; redirect.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_name ('YourVisitID');</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_start();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['user_id'] = $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['first_name'] = $row[1];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Redirect the user to the loggedin.php page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url
 = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
 ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/loggedin.php';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // No record matched the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[] = 'The email address and password entered do</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;not
 match those on file.'; // Public message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = mysql_error() . '&lt;br /&gt;&lt;br /&gt;Query: ' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query; // Debugging message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; } else { // Form has not been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = NULL;</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; // Begin the page now.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Login';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; if (!empty($errors)) { // Print any error messages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;h1 id="mainhead"&gt;Error!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p class="error"&gt;The following error(s) occurred:&lt;br /&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " - $msg&lt;br /&gt;\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;/p&gt;&lt;p&gt;Please try again.&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;h2&gt;Login&lt;/h2&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;form action="login.php" method="post"&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Email Address: 
&lt;input type="text" name="email" size="20" maxlength="40" /&gt; 
&lt;/p&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Password: &lt;input type="password" name="password"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size="20" maxlength="20" /&gt;&lt;/p&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;&lt;input type="submit" name="submit" value="Login" /&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type="hidden" name="submitted" value="TRUE" /&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;/form&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phj005"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Prior to the <tt>session_start()</tt> call, add the following:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; session_set_cookie_params (900, '/ch09/', 'www.domain.com');&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

The <tt>session_set_cookie_params()</tt> function must be used before <tt>session_start()</tt>
 to be effective. Change the path and domain setting to those values 
that make sense for your application, or omit the values to use the 
defaults. In this example, I'll give the cookie an expiration time 
that's 15 minutes from now.

</dpecw2><br>
<a name="phj006"></a>
<br><dpecjs><b>* Step 3</b>
<br>
Save the file as <tt>login.php</tt>, upload to your Web server, and test
 in your browser. After 15 minutes, the cookie will expire and the PHP 
scripts should no longer be able to access the session values (<tt><tt>first_ name</tt><i> </i>and <tt>user_id</tt></tt>).
<br>

<a name="phj007"></a>
<br><dpecjs><b>* Step 4</b>
<br>
Alter <tt>loggedin.php</tt> and <tt>logout.php</tt> so that the <tt>setcookie()</tt> function uses the same parameters as <tt>login.php</tt> (except for the expiration time on the logout page, of course).
<br>

<a name="phj008"></a>
<br><dpecjs>Here's the script in its entirety. This version of the <tt>login.php</tt> script sets explicit cookie parameters.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # login.php</tt><br>
<tt>&nbsp;&nbsp; // Send NOTHING to the Web browser prior to the session_start() line!</tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['password'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Retrieve the 
user_id and first_name for that email/password combination. 
*/&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT user_id, first_name FROM users</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE email='$e' AND password=SHA('$p')";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Return a record, if applicable.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($row) { // A record was pulled from the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the session data &amp; redirect.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_name ('YourVisitID');</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_set_cookie_params
 (900, '/ch09/', 'www.domain.com');</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_start();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['user_id'] = $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['first_name'] = $row[1];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Redirect the user to the loggedin.php page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url
 = 'http://' . $_SERVER['HTTP_HOST'] . 
dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
 ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) 
{&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/loggedin.php';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // No record matched the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = 'The email address and password entered do not</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match
 those on file.'; // Public message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = mysql_error() . '&lt;br /&gt;&lt;br /&gt;Query: ' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query; // Debugging message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; } else { // Form has not been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = NULL;</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; // Begin the page now.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Login';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; if (!empty($errors)) { // Print any error messages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;h1 id="mainhead"&gt;Error!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p class="error"&gt;The following error(s) occurred:&lt;br /&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " - $msg&lt;br /&gt;\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;/p&gt;&lt;p&gt;Please try again.&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;h2&gt;Login&lt;/h2&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;form action="login.php" method="post"&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Email Address: 
&lt;input type="text" name="email" size="20" maxlength="40" /&gt; 
&lt;/p&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Password: &lt;input type="password" name="password"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size="20" maxlength="20" /&gt;&lt;/p&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;&lt;input type="submit" name="submit" value="Login" /&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type="hidden" name="submitted" value="TRUE" /&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;/form&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phj009"></a>
<br><b>Returning an array of settings  <br>  </b>  The <tt>session_get_cookie_params()</tt> function returns an array of the current session cookie settings.  <br><br>  <b>Using the <tt>ini_set()</tt> function  <br>  </b>  The session cookie parameters can also be altered using the <tt>ini_set()</tt> function.  <br><br>  <b>Longevity of the cookie  <br>  </b>
  The expiration time of the cookie refers only to the longevity of the 
cookie in the Web browser, not to how long the session data will be 
stored on the server.  <br><br>  
<a name="phj010"></a>
<br><dpecw1>
	
Garbage collection with respect to sessions is the process of deleting 
the session files (where the actual data is stored). Creating a logout 
system that destroys a session is ideal, but there's no guarantee all 
users will formally log out as they should. For this reason, PHP 
includes a cleanup process.<br>
Whenever the <tt>session_start()</tt> function is called, PHP's garbage 
collection kicks in, checking the last modification date of each session
 (a session is modified whenever variables are set or retrieved). The 
server overhead of all this can become costly for busy sites, so you can
 tweak PHP's behavior in this regard.<br>
Two settings dictate garbage collection: <tt>session_gc_maxlifetime</tt> and <tt>session.gc_probability</tt>.
 The first states after how many seconds of inactivity a session is 
considered idle and will therefore be deleted. The second setting 
determines the probability that garbage collection is performed, on a 
scale of 1 to 100. So, with the default settings, each call to <tt>session_start()</tt>
 has a 1 percent chance of invoking garbage collection. If PHP does 
start the cleanup, any sessions that have not been used in more than 
1,440 seconds will be deleted. <br>
With this in mind, you can alter PHP's garbage collection habits to 
better suit your application. Twenty-four minutes is a reasonable amount
 of idle time, but you'll want to increase the probability to somewhere 
closer to 30 percent so that there is a good balance between performance
 and clutter.
	
</dpecw1><br>
<a name="phj011"></a>

<script language="JavaScript">insertAccQuestion('29','phj011.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phj012"></a>

<script language="JavaScript">insertAccQuestion('30','phj012.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phj013"></a>

<script language="JavaScript">insertAccQuestion('31','phj013.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phj014"></a>
<br><dpecw1>
	
In this lesson, you learned that sessions and cookies can be used to 
accomplish the same tasks, but there are advantages to each. Sessions 
are generally more secure and allow for more data to be stored. Cookies 
are easier to program and require less of the server. You learned that, 
in general, to store and retrieve just a couple of small pieces of 
information, use cookies. For most of your Web applications, though, 
you'll use sessions.<br>
You also learned how to change the session cookie settings using the <tt>session_set_cookies_params()</tt> function. It has certain default parameters, but you can change these settings, including expiration, path, domain, and secure.
	
</dpecw1><br>
<a name="phk001"></a><br><a name="topic11"></a><h2>Lesson 11. Using Sessions without Cookies</h2><dpecw1>

One of the problems with sessions is that, by default, they rely on the use of a cookie to work properly.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Use sessions without cookies
	</li>
</ul>

</dpecw1><br>
<a name="phk002"></a>
<br><dpecw1>

When a session is started, it sends a cookie that resides in the user's Web browser. Every subsequent page that calls <tt>session_start()</tt>
 makes use of the cookie, which contains the session name and ID, to 
know to use an existing session and to not create a new one.

</dpecw1><br><dpecw2>

The problem is that users may have cookies turned off in their Web 
browser or may not accept the cookie because they do not understand its 
purpose. If this is the case, PHP will create a new session for each 
page and none of the registered variables will be accessible.

</dpecw2><br>
<a name="phk003"></a>
<br><dpecw1>

You can use sessions without cookies by passing along the session name 
and ID from page to page. This is simple enough to do, but if you forget
 to pass the session in only one instance, the entire process is shot.

</dpecw1><br><dpecw2>

To pass the session name from page to page, you can use the <tt>SID</tt> constant, which stands for session ID<i> </i>and has a value like <tt><tt>session_name=session_ID</tt></tt>.
 If this value is appended to every URL within the site, the sessions 
will still work even if the user did not accept the cookie. Note, 
though, that PHP only assigns a value to SID if no session cookie is 
present.

</dpecw2><br>
<a name="phk004"></a>
<br><dpecw1>

Let's try using sessions without cookies.<br>
<b>* Step 1</b><br>
Open or create <tt>login.php</tt> in your text editor.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # login.php</tt><br>
<tt>&nbsp;&nbsp; // Send NOTHING to the Web browser prior to the session_start() line!</tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['password'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Retrieve the 
user_id and first_name for that email/password combination. 
*/&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT user_id, first_name FROM users</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE email='$e' AND password=SHA('$p')";&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Return a record, if applicable.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($row) { // A record was pulled from the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the session data &amp; redirect.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_name ('YourVisitID');</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_set_cookie_params
 (900, '/ch09/', 'www.domain.com');</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_start();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['user_id'] = $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['first_name'] = $row[1];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Redirect the user to the loggedin.php page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url
 = 'http://' . $_SERVER['HTTP_HOST'] . 
dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
 ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) 
{&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/loggedin.php';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // No record matched the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = 'The email address and password entered do not</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match
 those on file.'; // Public message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = mysql_error() . '&lt;br /&gt;&lt;br /&gt;Query: ' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query; // Debugging message.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; } else { // Form has not been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = NULL;</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; // Begin the page now.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Login';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; if (!empty($errors)) { // Print any error messages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;h1 id="mainhead"&gt;Error!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p class="error"&gt;The following error(s) occurred:&lt;br /&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " - $msg&lt;br /&gt;\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;/p&gt;&lt;p&gt;Please try again.&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;h2&gt;Login&lt;/h2&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;form action="login.php" method="post"&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Email Address: 
&lt;input type="text" name="email" size="20" maxlength="40" /&gt; 
&lt;/p&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Password: &lt;input type="password" name="password"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size="20" maxlength="20" /&gt;&lt;/p&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;&lt;input type="submit" name="submit" value="Login" /&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type="hidden" name="submitted" value="TRUE" /&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;/form&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phk005"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Replace the <tt>session_set_cookie_params()</tt> line with this one:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; ini_set('session.use_cookies', 0);&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

This code will tell PHP to specifically not use any cookies.

</dpecw2><br>
<a name="phk006"></a>
<br><dpecw1>

<b>* Step 3</b><br>
Alter the final <tt>$url</tt> creation line to the following:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $url .= '/loggedin.php?' . SID;&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

The addition of <tt>?</tt> and <tt>SID</tt> to the redirect will add <tt><tt>?session_name=session_ID</tt></tt><i> </i>to the URL, effectively passing the session ID to the <tt>loggedin.php</tt> script.

</dpecw2><br>
<a name="phk007"></a>
<br><dpecjs><b>* Step 4</b>
<br>
Save the file, upload to your Web server, and test in your Web browser. When the browser is redirected to the <tt>loggedin.php</tt> page, the session name and ID will be appended to the URL.
<br>

<a name="phk008"></a>
<br><dpecjs><b>* Step 5</b>
<br>
Copy the URL from the browser and paste it into another browser. Called <b>session hijacking</b>,
 this is one of the reasons to rely upon cookies whenever possible. By 
using an existing session ID in a new browser, a malicious user can 
hijack another user's session and have access to all of that user's 
registered session data.
<br>

<a name="phk009"></a>
<br><dpecjs>Here's the <tt>login.php</tt> script in its entirety. This 
version does not use cookies at all, instead maintaining the state by 
passing the session ID in the URL.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # login.php</tt><br>
<tt>&nbsp;&nbsp; // Send NOTHING to the Web browser prior to the session_start() line!</tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['password'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Retrieve the 
user_id and first_name for that email/password combination. 
*/&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT user_id, first_name FROM users</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE email='$e' AND password=SHA('$p')";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Return a record, if applicable.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($row) { // A record was pulled from the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the session data &amp; redirect.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_name ('YourVisitID');</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ini_set('session.use_cookies', 0); // Don't use cookies.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_start();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['user_id'] = $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['first_name'] = $row[1];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Redirect the user to the loggedin.php page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url
 = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
 ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url
 .= '/loggedin.php?' . SID; // Add the session name &amp; ID.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // No record matched the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = 'The email address and password entered do not </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match those on file.'; // Public message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = mysql_error() . '&lt;br /&gt;&lt;br /&gt;Query: ' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query; // Debugging message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; } else { // Form has not been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = NULL;</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; // Begin the page now.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Login';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; if (!empty($errors)) { // Print any error messages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;h1 id="mainhead"&gt;Error!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p class="error"&gt;The following error(s) occurred:&lt;br /&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " - $msg&lt;br /&gt;\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;/p&gt;&lt;p&gt;Please try again.&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;h2&gt;Login&lt;/h2&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;form action="login.php" method="post"&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Email Address: &lt;input type="text" name="email" size="20"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxlength="40" /&gt; &lt;/p&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Password: &lt;input type="password" name="password" size="20"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxlength="20" /&gt;&lt;/p&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;&lt;input type="submit" name="submit" value="Login" /&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type="hidden" name="submitted" value="TRUE" /&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;/form&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phk010"></a>
<br><dpecw1>

You'll also have to make minor modifications to the other scripts as follows. Edit <tt>header.html</tt> so that every link includes <tt><tt>?session_name=session_ID</tt></tt>.<br>
The other problem with using sessions without cookies (besides the 
security issue) is that you must account for every link in your entire 
application. To modify the header file, you'll need to define the links 
like so:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;a href="index.php?&lt;?php echo SID; ?&gt;" title="Go to the Home Page"&gt;Home&lt;/a&gt;&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phk011"></a>
<br><dpecw1>

Edit <tt>loggedin.php</tt> and <tt><tt>logout.php</tt></tt> so that they also include the <tt>ini_set()</tt> line.<br>
This script would then begin like so:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; session_name ('YourVisitID');&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; ini_set('session.use_cookies', 0);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; session_start(); </tt><br>
</dpeccode><br><dpecw2>

You would also need to do this step for any other page that uses sessions.

</dpecw2><br>
<a name="phk012"></a>
<br><dpecw1>

Remove the <tt>setcookie()</tt> line from <tt>logout.php</tt>. Since a session cookie is no longer being used, there is no reason to set another cookie deleting it.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; setcookie (session_name(), '', time()-300, '/', '', 0);&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phk013"></a>
<br><b>Appending SID automatically  <br>  </b>  If you have access to your <tt>php.ini</tt> file, you can set <tt><tt>session.use_trans_sid</tt></tt><i> </i>to <tt><tt>1</tt></tt> or <tt>ON</tt>. Doing so will have PHP automatically append <tt>SID</tt>
 to every URL as you have done manually here.  It will slow down 
execution of the scripts, though, because PHP will need to check every 
page for URLs.  <br><br>  <b>Returning the session value  <br>  </b>  The <tt>session_id()</tt> function returns the current session value (or allows you to specify which session to use).  <br><br>  <b>Using a hidden input  <br>  </b>  You can also pass <tt>SID</tt> from one page to another by storing it as a hidden input type in a form.  <br><br>  <b>Browser or window-specific  <br>  </b>
  Depending on the Web browser being used by the client, a session may 
be either browser-specific or window-specific.  If the latter is the 
case, a pop-up window in your site will not be part of the same session 
unless it has received the session ID.  <br><br>  <b>Security concerns  <br>  </b>
  Remember that using this method of storing and passing the session ID 
is less secure than using cookies for that purpose.  If security isn't 
really a concern for your Web site (for example, if you're not dealing 
with personal information or e-commerce), then this is less of an issue.
  <br><br>  
<a name="phk014"></a>

<script language="JavaScript">insertAccQuestion('32','phk014.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phk015"></a>

<script language="JavaScript">insertAccQuestion('33','phk015.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phk016"></a>

<script language="JavaScript">insertAccQuestion('34','phk016.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phk017"></a>
<br><a name="topic12"></a><h2>Topic 11.1 Exercises</h2><br><b>* Exercise 1</b><dpecw1>

<br>
Try using sessions without cookies.<br>
<ml_ins_href><ml_data_href>

</ml_data_href></ml_ins_href></dpecw1><br><dpecw2>

<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Step</b>

</th><th class="heading" scope="col">
<b>Action</b>

	</th></tr>
	<tr valign="top">
<td>
1
</td>
<td>
Open a script that uses sessions in your text editor.
</td>
	</tr>
	<tr valign="top">
<td>
2
</td>
<td>
Add code that tells PHP to specifically not use any cookies.
</td>
	</tr>
	<tr valign="top">
<td>
3
</td>
<td>
Use the <tt>SID</tt> constant to pass the session name from page to page.
</td>
	</tr>
	<tr valign="top">
<td>
4
</td>
<td>
Save, upload and test the file.
</td>
	</tr>
	<tr valign="top">
<td>
5
</td>
<td>
Update any other files in your application that use the session.
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw2><br>
<a name="phk018"></a>
<br><dpecw1>
	
In this lesson, you learned that a problem with sessions is that, by 
default, they rely on the use of cookies. If a user has cookies shut off
 or doesn't accept a cookie, this can cause a session not to work and 
the registered variables not to be accessible. You learned that you can 
use sessions without cookies by passing along the session name and ID 
from page to page via the <tt>SID</tt> constant.<br>
You also learned how to specify the creation of a session that doesn't use cookies and how to apply the <tt>SID</tt> constant.
	
</dpecw1><br>
<a name="phl001"></a><br><a name="topic13"></a><h2>Lesson 12. Improving Session Security</h2><dpecw1>

Because important information is normally stored in a session, security 
becomes more of an issue. With sessions there are two considerations: 
the session ID, which is a reference point to the session data, and the 
session data itself, stored on the server.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Use sessions more securely
	</li>
</ul>

</dpecw1><br>
<a name="phl002"></a>
<br><dpecw1>

Storing the session ID in a cookie is considered the more secure method 
of using sessions, as opposed to passing the session ID along in URLs or
 storing it in hidden form inputs. Those alternatives are less secure 
because the session could easily be hijacked<i> </i>by another user.<br>
If a malicious user can learn another user's session ID, he can easily trick a server into thinking that it is his<i> </i>session
 ID. At that point he has effectively taken over the original user's 
entire session and may have access to her data. So storing the session 
ID in a cookie makes it somewhat harder to steal.

</dpecw1><br>
<a name="phl003"></a>
<br><dpecw1>

One method of preventing hijacking is to store some sort of user 
identifier in the session, and then to repeatedly double-check this 
value. <tt>HTTP_USER_AGENT</tt> — a combination of the browser and 
operating system being used — is a likely candidate for this purpose. 
This adds a layer of security in that a malicious user could only hijack
 another user's session if he is running the exact same browser and 
operating system.<br>
For example, a login page would have the following:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $_SESSION['agent'] = $_SERVER['HTTP_USER_AGENT'];&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phl004"></a>
<br><dpecw1>

Then subsequent pages would check the stored <tt>HTTP_USER_AGENT</tt><i> </i>against the user's <tt>HTTP_USER_AGENT</tt><i> </i>(which should be the same).

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if ($_SERVER['HTTP_USER_AGENT'] != $_SESSION['agent']) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; /* The session has probably been hijacked! */</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br><dpecw2>

As a demonstration of this, let's modify some example scripts. While focusing on security, we'll encrypt the <tt>$_SERVER['HTTP_ USER_AGENT']</tt> information using the <tt>md5()</tt> function to make it harder to fake.

</dpecw2><br>
<a name="phl005"></a>
<br><dpecw1>
	
Another specific kind of session attack is known as session fixation. 
This is where one user specifies the session ID that another user should
 use. This session ID could be randomly generated or legitimately 
created. In either case, the real user will go into the site using the 
fixed session ID and do whatever. Then the malicious user can access 
that session because they know what the session ID is.<br>
You can help protect against these types of attack by changing the session ID. The <tt>session_regenerate_id()</tt>
 function does just that, providing a new session ID to refer to the 
current session data. You can use this function should anything of 
consequence change during a user's session.
	
</dpecw1><br>
<a name="phl006"></a>
<br><dpecjs><b>* Step 1</b>
<br>
Open <tt>login.php</tt> in your text editor.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # login.php</tt><br>
<tt>&nbsp;&nbsp; // Send NOTHING to the Web browser prior to the session_start() line!</tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['password'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Retrieve the 
user_id and first_name for that email/password combination. 
*/&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT user_id, first_name FROM users</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE email='$e' AND password=SHA('$p')";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Return a record, if applicable.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($row) { // A record was pulled from the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the session data &amp; redirect.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_name ('YourVisitID');</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ini_set('session.use_cookies', 0); // Don't use cookies.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_start();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['user_id'] = $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['first_name'] = $row[1];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Redirect the user to the loggedin.php page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url
 = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
 ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url
 .= '/loggedin.php?' . SID; // Add the session name &amp; ID.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // No record matched the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = 'The email address and password entered do not </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match those on file.'; // Public message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = mysql_error() . '&lt;br /&gt;&lt;br /&gt;Query: ' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query; // Debugging message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; } else { // Form has not been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = NULL;</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; // Begin the page now.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Login';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; if (!empty($errors)) { // Print any error messages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;h1 id="mainhead"&gt;Error!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p class="error"&gt;The following error(s) occurred:&lt;br /&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " - $msg&lt;br /&gt;\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;/p&gt;&lt;p&gt;Please try again.&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;h2&gt;Login&lt;/h2&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;form action="login.php" method="post"&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Email Address: &lt;input type="text" name="email" size="20"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxlength="40" /&gt; &lt;/p&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Password: &lt;input type="password" name="password" size="20"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxlength="20" /&gt;&lt;/p&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;&lt;input type="submit" name="submit" value="Login" /&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type="hidden" name="submitted" value="TRUE" /&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;/form&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phl007"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Delete the <tt>ini_set()</tt> line and remove the reference to <tt>SID</tt>.
For security purposes, we'll revert to using cookies to store the session ID. We also no longer need to append <tt>SID</tt> to the <tt>header()</tt> redirection URL.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; ini_set('session.use_cookies', 0); // Don't use cookies.&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phl008"></a>
<br><dpecw1>

<b>* Step 3</b><br>
After assigning the other session variables, store <tt>HTTP_USER_AGENT</tt>.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $_SESSION['agent'] = md5($_SERVER['HTTP_USER_AGENT']);&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

<tt>HTTP_USER_AGENT</tt><i> </i>is part of the <tt>$_SERVER</tt> array. It will have a value like <tt>Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; .NET CLR 1.1.4322)</tt>. This variable is run through the <tt>md5()</tt> function, which will turn it into a 32-character hexadecimal hash<i> </i>(although it's just easier to say that the data is encrypted).

</dpecw2><br>
<a name="phl009"></a>
<br><dpecjs><b>* Step 4</b>
<br>
Save the file and upload to your Web server.
<br>

<a name="phl010"></a>
<br><dpecjs><b>* Step 5</b>
<br>
Open <tt>loggedin.php</tt> in your text editor.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # loggedin.php</tt><br>
<tt>&nbsp;&nbsp; # User is redirected here from login.php.</tt><br>
<tt>&nbsp;&nbsp; session_name ('YourVisitID');</tt><br>
<tt>&nbsp;&nbsp; session_start(); // Start the session.</tt><br>
<tt>&nbsp;&nbsp; // If no session value is present, redirect the user.</tt><br>
<tt>&nbsp;&nbsp; if (!isset($_SESSION['user_id'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/index.php'; // Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Set the page title and include the HTML header.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Logged In!';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; // Print a customized message.</tt><br>
<tt>&nbsp;&nbsp; echo "&lt;h1&gt;Logged In!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;You are now logged in, {$_SESSION['first_name']}!&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;";</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phl011"></a>
<br><dpecw1>

<b>* Step 6</b><br>
Change the <tt>!isset($_SESSION['user_id'])</tt> conditional to the following:

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (!isset($_SESSION['agent']) OR ($_SESSION ['agent'] != md5&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; ($_SERVER['HTTP_USER_AGENT'])) ) { </tt><br>
</dpeccode><br><dpecw2>

This conditional checks for two things. First, it sees if the <tt>$_SESSION['agent']</tt> variable is not set (this part is just as it was before, although <tt><tt>agent</tt></tt><i> </i>is being used instead of <tt><tt>user_id</tt></tt>).<br>
The second part of the conditional checks if the <tt>md5()</tt> version of <tt>$_SERVER['HTTP_USER_AGENT']</tt> does not equal the value stored in <tt>$_SESSION['agent']</tt>. If either of these conditions are true, the user will be redirected.

</dpecw2><br>
<a name="phl012"></a>
<br><dpecjs>Save this file, upload to your Web server, and test in your 
Web browser by logging in. You cannot tell any difference by running the
 application, but this final version of the login system is more secure.
 Specifically, it helps to prevent session hijacking.
<br>

<a name="phl013"></a>
<br><dpecjs>Here's the completed version of the <tt>login.php</tt> script. It also stores an encrypted form of the user's <tt><tt>HTTP_USER_AGENT</tt></tt> (the browser and operating system of the client) in a session.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # login.php</tt><br>
<tt>&nbsp;&nbsp; // Send NOTHING to the Web browser prior to the session_start() line!</tt><br>
<tt>&nbsp;&nbsp; // Check if the form has been submitted.</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('./mysql_connect.php'); // Connect to the db.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = array(); // Initialize error array.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for an email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your email address.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $e = escape_data($_POST['email']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($_POST['password'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $errors[] = 'You forgot to enter your password.';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($errors)) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Retrieve the 
user_id and first_name for that email/password combination. 
*/&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $query = "SELECT user_id, first_name FROM users</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE email='$e' AND password=SHA('$p')";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result = @mysql_query ($query); // Run the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Return a record, if applicable.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($row) { // A record was pulled from the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the session data &amp; redirect.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_name ('YourVisitID');</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_start();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['user_id'] = $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['first_name'] = $row[1];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['agent'] = md5($_SERVER['HTTP_USER_AGENT']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Redirect the user to the loggedin.php page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url
 = 'http://' . $_SERVER['HTTP_HOST'] . 
dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
 ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/loggedin.php';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // No record matched the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = 'The email address and password entered do not</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match those on file.'; // Public message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors[]
 = mysql_error() . '&lt;br /&gt;&lt;br /&gt;Query: ' .</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query; // Debugging message.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} // End of if (empty($errors)) IF.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp; } else { // Form has not been submitted.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$errors = NULL;</tt><br>
<tt>&nbsp;&nbsp; } // End of the main Submit conditional.</tt><br>
<tt>&nbsp;&nbsp; // Begin the page now.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Login';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; if (!empty($errors)) { // Print any error messages.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;h1 id="mainhead"&gt;Error!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p class="error"&gt;The following error(s) occurred:&lt;br /&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($errors as $msg) { // Print each error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " - $msg&lt;br /&gt;\n";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;/p&gt;&lt;p&gt;Please try again.&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Create the form.</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;h2&gt;Login&lt;/h2&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;form action="login.php" method="post"&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Email Address: &lt;input type="text" name="email" size="20"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxlength="40" /&gt; &lt;/p&gt;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Password: &lt;input type="password" name="password" size="20"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxlength="20" /&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;&lt;input type="submit" name="submit" value="Login" /&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type="hidden" name="submitted" value="TRUE" /&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;/form&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;?php</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phl014"></a>
<br><dpecjs>Here's the completed version of the <tt>loggedin.php</tt> script. It now confirms that the user accessing this page has the same <tt><tt>HTTP_USER_AGENT</tt></tt> as they did when they logged in.
<br>
</dpecjs><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; &lt;?php # loggedin.php</tt><br>
<tt>&nbsp;&nbsp; # User is redirected here from login.php.</tt><br>
<tt>&nbsp;&nbsp; session_name ('YourVisitID');</tt><br>
<tt>&nbsp;&nbsp; session_start(); // Start the session.</tt><br>
<tt>&nbsp;&nbsp; // If no session value is present, redirect the user.</tt><br>
<tt>&nbsp;&nbsp; if (!isset($_SESSION['agent']) OR ($_SESSION['agent'] !=</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp; md5($_SERVER['HTTP_USER_AGENT'])) ) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .= '/index.php'; // Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Set the page title and include the HTML header.</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'Logged In!';</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/header.html');</tt><br>
<tt>&nbsp;&nbsp; // Print a customized message.</tt><br>
<tt>&nbsp;&nbsp; echo "&lt;h1&gt;Logged In!&lt;/h1&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;You are now logged in, {$_SESSION['first_name']}!&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;";</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; ?&gt;</tt>
</dpeccode><br>
<a name="phl015"></a>
<br><b>Requiring cookies  <br>  </b>  For critical uses of sessions, 
require the use of cookies and transmit them over a secure connection, 
if at all possible.  You can even set PHP to only use cookies by setting
 <tt><tt>session.use_only_cookies</tt></tt><i> </i>to <tt>1</tt><i> </i>(as of PHP 4.3).  <br><br>  <b>Using a shared server  <br>  </b>  If you are using a server shared with other domains, changing <tt><tt>session.save_path</tt></tt><i> </i>from its default setting — which is accessible by all users — to something more local will be more secure.  <br><br>  <b>Storing session data  <br>  </b>
  On the server side of security, the session data itself can be stored 
in a database rather than a text file.  This is a more secure, but more 
programming-intensive, option.  <br><br>  <b>Using an IP address  <br>  </b>  The user's IP address (the network address from which the user is connecting) is not<i> </i>a
 good unique identifier, for two reasons.  First, a user's IP address 
can, and normally does, change frequently (ISP's dynamically assign them
 for short periods of time).  Second, many users accessing a site from 
the same network (like a home network or an office) could all have the 
same IP address.  <br><br>  
<a name="phl016"></a>

<script language="JavaScript">insertAccQuestion('35','phl016.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phl017"></a>

<script language="JavaScript">insertAccQuestion('36','phl017.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phl018"></a>

<script language="JavaScript">insertAccQuestion('37','phl018.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phl019"></a>

<script language="JavaScript">insertAccQuestion('38','phl019.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phl020"></a>
<br><dpecw1>
	
In this lesson, you learned that security is more of an issue with 
sessions than cookies since the information being stored is more 
important. Typically, a malicious user will attempt to hack into a 
session via the session ID than the data on the server, but both should 
be guarded.<br>
You learned that one method to prevent session hijacking is by using a 
user identifier in the session and then to repeatedly double-check this 
value. You put this method to use by modifying a script to use <tt>HTTP_USER_AGENT</tt> to check the user.<br>
Finally, you learned that it is more secure to store session data in a database rather than a text file on the server.
	
</dpecw1><br>
<a name="phm001"></a>
<br><a name="topic14"></a><h2>Lesson 13. Course in Review</h2><dpecw1>

This lesson allows you an opportunity to review the principles and practices you have learned in this course.<br>
It reviews the material presented in this course through questions and exercises.

</dpecw1><br>
<a name="phm002"></a>

<script language="JavaScript">insertAccQuestion('39','phm002.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phm003"></a>

<script language="JavaScript">insertAccQuestion('40','phm003.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phm004"></a>

<script language="JavaScript">insertAccQuestion('41','phm004.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phm005"></a>

<script language="JavaScript">insertAccQuestion('42','phm005.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phm006"></a>

<script language="JavaScript">insertAccQuestion('43','phm006.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phm007"></a>

<script language="JavaScript">insertAccQuestion('44','phm007.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phm008"></a>

<script language="JavaScript">insertAccQuestion('45','phm008.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phm009"></a>

<script language="JavaScript">insertAccQuestion('46','phm009.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phm010"></a>

<script language="JavaScript">insertAccQuestion('47','phm010.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phm011"></a>

<script language="JavaScript">insertAccQuestion('48','phm011.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phm012"></a>

<script language="JavaScript">insertAccQuestion('49','phm012.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phm013"></a>
<br><a name="topic15"></a><h2>Topic 13.1 Exercises</h2><br><b>* Exercise 1</b><dpecw1>

<br>
Try using a cookie in a Web application.

</dpecw1><br><dpecw2>

<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Step</b>

</th><th class="heading" scope="col">
<b>Action</b>

	</th></tr>
	<tr valign="top">
<td>
1
</td>
<td>
Create a cookie for your Web application.
</td>
	</tr>
	<tr valign="top">
<td>
2
</td>
<td>
Set the parameters for the cookie giving it a specific expiration time and indicate that a secure connection should be used.
</td>
	</tr>
	<tr valign="top">
<td>
3
</td>
<td>
Access the cookie from your Web application and use it in a simple <tt>echo()</tt> statement.
</td>
	</tr>
	<tr valign="top">
<td>
4
</td>
<td>
Manually delete the cookie.
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw2><br>
<a name="phm014"></a>
<br><br><b>* Exercise 2</b><dpecw1>

<br>
Try using sessions in a Web application.

</dpecw1><br><dpecw2>

<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Step</b>

</th><th class="heading" scope="col">
<b>Action</b>

	</th></tr>
	<tr valign="top">
<td>
1
</td>
<td>
Create a session for your Web application.
</td>
	</tr>
	<tr valign="top">
<td>
2
</td>
<td>
Set the session variables.
</td>
	</tr>
	<tr valign="top">
<td>
3
</td>
<td>
Change the name of the session to a more user-friendly one.
</td>
	</tr>
	<tr valign="top">
<td>
4
</td>
<td>
Set the session cookie settings.
</td>
	</tr>
	<tr valign="top">
<td>
5
</td>
<td>
As necessary, set the configuration options for how PHP handles sessions.
</td>
	</tr>
	<tr valign="top">
<td>
6
</td>
<td>
From another script in your application, access the session variable.
</td>
	</tr>
	<tr valign="top">
<td>
7
</td>
<td>
Delete an individual session variable.
</td>
	</tr>
	<tr valign="top">
<td>
8
</td>
<td>
Remove all session data from the server.
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw2><br>
<script language="JavaScript">
<!--
writeCopyrightInfo();
var totalTopics =15;
//-->
</script><br><br><center>© 2006 MindLeaders, Inc. All Rights Reserved.
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

</center></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></body></html>