<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
</head><body><mledit by="insert_name" date="insert_date" note="insert_note"></mledit>

<script language="JavaScript" src="phps14ac_files/mlclientpage.js"></script>
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

<script language="JavaScript" src="phps14ac_files/site.js"></script><script language="Javascript" src="phps14ac_files/resource_strings.js"></script><script language="Javascript" src="phps14ac_files/special_cases.js"></script>
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

<script language="JavaScript">var ThisPage=new MlPage();</script>
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

<title>PHP and MySQL: User Registration Example</title>

<script language="JavaScript">var crsAcronym="phps14";</script>
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

<script language="JavaScript" src="phps14ac_files/access.js"></script><script language="Javascript" src="phps14ac_files/params.js"></script><script language="Javascript" src="phps14ac_files/courseware.js"></script><script language="Javascript" src="phps14ac_files/phps14.js"></script><script language="Javascript" src="phps14ac_files/printbut.js"></script><table width="97%"><tbody><tr><td align="right"><div id="printButton" class="printbut" onclick="javascript:printPage();" onmouseover="this.style.backgroundPosition='-48px -24px';" onmouseout="this.style.backgroundPosition='-48px 0px';" title="Print"></div></td></tr></tbody></table>
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>


<!--<DPECTPL>access</DPECTPL>-->

<h1>PHP and MySQL: User Registration Example</h1>
<script language="JavaScript">
var numAccQuestions =15;
writeAccIntro();
</script>You can print this text-only version of this course for future reference.<br>&nbsp;<br> If you wish to use the accessible version of our courses, which includes questions in text-only format, click <b>Text Only</b> on the log on page, and then enter your user ID and password from the Accessibility Log On page.
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

<hr>
<a name="skipped">
</a><a name="pha001"></a>
<br><a name="topic1"></a><h2>Lesson 1. Course Introduction</h2><dpecw1>

The focus of this course will be on the user registration system, which 
is one of the more common uses of PHP and MySQL, and the public side of 
this Web application. Most of the scripts developed in this course will 
use a consistent programming theory.<br>
Users will be able to register, log in, log out, change their passwords,
 and reset their passwords (should the passwords be forgotten). Another 
feature that  will be discussed is the requirement that users activate 
their accounts — by clicking a link in an email — before they can log 
in. Once the user has logged in, sessions will be used to limit access 
to pages and track the user.<br>
Along the way, you'll also see recommendations as to how this application could easily be expanded or modified.

</dpecw1><br>
<a name="phb001"></a><br><a name="topic2"></a><h2>Lesson 2. Creating the Templates</h2><dpecw1>

The template makes extensive use of Cascading Style Sheets (CSS), creating a clean look without the need for images.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Create template files
	</li>
</ul>

</dpecw1><br>
<a name="phb002"></a>
<br><dpecjs> The intended layout for this site is derived from one freely provided by BlueRobot (<tt>http://www.bluerobot.com</tt>), a good, albeit outdated, source for basic Cascading Style Sheets (CSS) templates.

<b>Note</b>: All Web sites are current at the time of writing but are subject to change.&nbsp; 
<br>

<a name="phb003"></a>
<br><dpecw1>

To begin, I'll write two template files: <tt>header.html</tt> and <tt>footer.html</tt>.
 The footer file will display certain links depending upon whether or 
not the user is logged in, determined by checking for the existence of a
 session variable.<br>
Further, the header file will begin sessions and output buffering, while the footer file will end output buffering.

</dpecw1><br>
<a name="phb004"></a>
<br><dpecw1>

Let's examine the steps required to make a <tt>header.html</tt> file.<br>
<b>* Step 1</b><br>
Create a new document in your text editor.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php # header.html&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phb005"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Begin output buffering and start a session. I'll be using output 
buffering for this application, so that I need not worry about error 
messages when I use HTTP headers, redirect the user, or send cookies. 
Every page will make use of sessions as well (it's safe to place the <tt>session_start()</tt> call after <tt>ob_start()</tt>, since nothing has been sent to the Web browser yet).

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; ob_start();&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; session_start();&nbsp;&nbsp; </tt><br>
</dpeccode><br><dpecw2>

Since every public page will use both of these techniques, placing these lines in the <tt>header.html</tt> file saves me the hassle of placing them in every single page (and makes it easier to edit later, if necessary).

</dpecw2><br>
<a name="phb006"></a>
<br><dpecw1>

<b>* Step 3</b><br>
Check for a <tt>$page_title</tt> variable and close the PHP section. As 
in the other times I've used a template system, the page's title — which
 appears at the top of the browser window — will be set on a 
page-by-page basis. This conditional checks if the <tt>$page_title</tt> 
variable has a value and, if it doesn't, sets it to a default string. 
This is a nice, but optional, check to include in the header.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if (!isset($page_title)) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $page_title = 'User Registration&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; }&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phb007"></a>
<br><dpecjs><b>* Step 4</b>
<br>
Create the HTML head. The PHP <tt>$page_title</tt> variable is printed out between the title tags. Then, the CSS document is included. It will be called <tt>layout.css</tt> and stored in a directory called <tt>includes</tt>.
<br>
</dpecjs><br><dpeccode>
&lt;<tt>!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</tt>&gt;<br>
&lt;<tt>html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"</tt>&gt;<br>
&lt;<tt>head</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>meta http-equiv=</tt>"<tt>content-type</tt>"<tt>content=</tt>"<tt>text/html; charset=iso-8859-1</tt>"<tt> /</tt>&gt;<br>
<tt>&nbsp;&nbsp; &lt;title&gt;&lt;?php echo $page_title;?&gt;&lt;/title&gt;</tt><br>
<tt>&lt;style type="text/css" media="screen"&gt;@import "./includes/layout.css";&lt;/style&gt;</tt><br>
&lt;<tt>/head</tt>&gt;<br>
</dpeccode><br>
<a name="phb008"></a>
<br><dpecw1>

<b>* Step 5</b><br>
Begin the HTML body. The body creates the banner across the top of the page and then starts the content part of the Web page.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>body</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>div id="Header"</tt>&gt;<tt>User Registration&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/div</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>div id="Content"</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phb009"></a>
<br><dpecjs><b>*  Step 6</b>
<br>
Save the file as <tt>header.html</tt>. The header file begins the HTML, starts the session, and turns on output buffering.&nbsp; 
<br>
</dpecjs><br><dpeccode>
&lt;<tt>?php # header.html</tt><br>
<tt>// This page begins the HTML header for the site.</tt><br>
<tt>// Start output buffering.</tt><br>
<tt>ob_start();</tt><br>
<tt>// Initialize a session.</tt><br>
<tt>session_start();</tt><br>
<tt>// Check for a $page_title value.</tt><br>
<tt>if (!isset($page_title)) {</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'User Registration System';</tt><br>
<tt>}</tt><br>
<tt>?</tt>&gt;<br>
&lt;<tt>!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"</tt><br>
<tt>&nbsp;&nbsp; "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</tt><br>
&lt;<tt>html xmlns=http://www.w3.org/1999/xhtmlxml:lang="en" lang="en"</tt>&gt;<br>
&lt;<tt>head</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>meta http-equiv=</tt>"<tt>content-type</tt>"<tt> content=</tt>"<tt>text/html; charset=iso-8859-1</tt>"<tt> /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>title</tt>&gt;&lt;<tt>?php echo $page_title; ?</tt>&gt;&lt;<tt>/title</tt>&gt;<br>
&lt;<tt>style type="text/css" media="screen"</tt>&gt;<br>
<tt>@import "./includes/layout.css";</tt>&lt;<tt>/style</tt>&gt;<br>
&lt;<tt>/head</tt>&gt;<br>
&lt;<tt>body</tt>&gt;<br>
&lt;<tt>div id="Header"</tt>&gt;<tt>User Registration</tt>&lt;<tt>/div</tt>&gt;<br>
&lt;<tt>div id="Content"</tt>&gt;<br>
&lt;<tt>!-End of Header --</tt>&gt;<br>
</dpeccode><br>
<a name="phb010"></a>
<br><dpecw1>

Let's examine the steps required to make a <tt>footer.html</tt> file.<br>
<b>* Step 1</b><br>
Create a new document in your text editor.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/div</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>div id="Menu"</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>a </tt>href ="<tt>index.php</tt>"&gt;<tt>Home</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>&nbsp;&nbsp; </tt></dpeccode><br>
<a name="phb011"></a>
<br><dpecjs><b>*  Step 2</b>
<br>
Use PHP to dynamically display the appropriate links. If the user is logged in (which means that <tt>$_SESSION['user_id']</tt>
 is set and this isn't the logout page), the user will see links to log 
out and to change his password. Otherwise, the user will see links to 
log in and reset a forgotten password.&nbsp; 
<br>
</dpecjs><br><dpeccode>
&lt;<tt>/div</tt>&gt;<br>
&lt;<tt>div id="Menu"</tt>&gt;<br>
&lt;<tt>a </tt>href ="<tt>index.php</tt>"&gt;<tt>Home</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>?php # footer.html</tt><br>
<tt>// This page completes the HTML template.</tt><br>
<tt>// Display links based upon he login status.</tt><br>
<tt>// Show LOGIN links if this is the LOGOUT page.</tt><br>
<tt>if (isset($_SESSION['user_id']) AND</tt><br>
<tt>(substr($_SERVER['PHP_SELF'], -10)</tt><br>
<tt>!= 'logout.php')) {</tt><br>
<tt>&nbsp;&nbsp; echo '&lt;a </tt>href ="<tt>logout.php</tt>"<tt>&gt;Logout&lt;/a&gt;&lt;br /&gt;</tt><br>
<tt>&lt;a </tt>href ="<tt>change_password.php</tt>"<tt>&gt;Change</tt><br>
<tt>Password&lt;/a&gt;&lt;br /&gt;</tt><br>
<tt>';</tt><br>
<tt>} else {</tt><br>
<tt>&nbsp;&nbsp; echo '&lt;a </tt>href ="<tt>register.php</tt>"<tt>&gt;</tt><br>
<tt>&nbsp;&nbsp; Register&lt;/a&gt;&lt;br /&gt;</tt><br>
<tt>&lt;a </tt>href ="<tt>login.php</tt>"<tt>&gt;Login&lt;/a&gt;&lt;br /&gt;</tt><br>
<tt>&lt;a </tt>href ="<tt>forgot_password.php</tt>"<tt>&gt;Forgot Password&lt;/a&gt;&lt;br /&gt;</tt><br>
<tt>';</tt><br>
<tt>}</tt><br>
<tt>?&gt;</tt><br>
</dpeccode><br>
<a name="phb012"></a>
<br><dpecw1>

<b>* Step 3</b><br>
Complete the HTML. I've included two dummy links for other pages to be added.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>a href="#"</tt>&gt;<tt>Some Page</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>a href="#"</tt>&gt;<tt>Another Page</tt>&lt;<tt>/a&gt;</tt>&lt;<tt>br /</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/div</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/body</tt>&gt;<tt>&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/html</tt>&gt;<tt>&nbsp;&nbsp; <br>
</tt>
</dpeccode><br>
<a name="phb013"></a>
<br><dpecw1>

<b>* Step 4</b><br>
Flush the buffer to the Web browser. The footer file will send the 
accumulated buffer to the Web browser, completing the output buffering 
begun in the header script.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>?php</tt><br>
<tt>&nbsp;&nbsp; ob_end_flush();&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; ?</tt>&gt;<tt>&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phb014"></a>
<br><dpecjs><b>*  Step 5</b>
<br>
Save the file as <tt>footer.html</tt> and upload, along with <tt>header.html</tt> and <tt>layout.css</tt>, to your Web server, placing all three in the <tt>includes</tt><i> </i>directory. The css file is provided as a Zip file.&nbsp; 
<br>

<a name="phb015"></a>
<br><dpecjs>The footer file concludes the HTML, displaying links based 
upon the user status (logged in or not), and flushes the output to the 
Web browser.
<br>
</dpecjs><br><dpeccode>
&lt;<tt>!-End of Content --</tt>&gt;<br>
&lt;<tt>/div</tt>&gt;<br>
&lt;<tt>div id="Menu"</tt>&gt;<br>
&lt;<tt>a href="index.php"</tt>&gt;<tt>Home</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;?<tt>php # footer.html</tt>&gt;<br>
<tt>// This page completes the HTML template.</tt><br>
<tt>// Display links based upon the login status.</tt><br>
<tt>// Show LOGIN links if this is the LOGOUT page.</tt><br>
<tt>if (isset($_SESSION[</tt>'<tt>user_id</tt>'<tt>]) AND</tt><br>
<tt>(substr($_SERVER[</tt>'<tt>PHP_SELF</tt>'<tt>], -10)</tt><br>
<tt>!</tt><tt>=</tt><tt> </tt>'<tt>logout.php</tt>'<tt>)) {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>a href</tt><tt>="</tt><tt>logout.php</tt><tt>"</tt>&gt;<tt>Logout</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;
&lt;<tt>a href</tt><tt>="</tt><tt>change_password.php</tt><tt>"</tt>&gt;<tt>Change</tt><tt> </tt><tt>Password</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
<tt>';</tt><br>
<tt>} else { // Not logged in.</tt><br>
<tt>&nbsp;&nbsp; echo ' </tt>&lt;<tt>a href</tt><tt>="</tt><tt>register.php</tt><tt>"</tt>&gt;<br>
<tt>&nbsp;&nbsp; Register</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>a href</tt><tt>="</tt><tt>login.php</tt><tt>"</tt>&gt;<tt>Login</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>a href</tt><tt>="</tt><tt>forgot_password.php</tt><tt>"</tt>&gt;<tt>Forgot Password</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
<tt>';</tt><br>
<tt>}</tt><br>
?&gt;<br>
&lt;<tt>a href="#</tt><tt> </tt><tt>"</tt>&gt;<tt>Some Page</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>a href="#</tt><tt> </tt><tt>"</tt>&gt;<tt>Another Page</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>/div</tt>&gt;<br>
&lt;<tt>/body</tt>&gt;&lt;<tt>/html</tt>&gt;&lt;?<tt>php // Flush the buffered output.<br>
</tt><tt>ob_end_flush();<br>
</tt>?&gt;<tt>
</tt>
</dpeccode><br>
<a name="phb018"></a>

<script language="JavaScript">insertAccQuestion('1','phb018.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phb019"></a>
<br><a name="topic3"></a><h2>Topic 2.1 Exercises</h2><br><b>* Exercise 1</b><dpecw1>

<br>
Try creating a header file in a text editor.<br>
<ml_ins_href><ml_data_href>

</ml_data_href></ml_ins_href></dpecw1><br><dpecw2>

<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Step</b>

</th><th class="heading" scope="col">
<b>Action</b>

	</th></tr>
	<tr valign="top">
<td>
1
</td>
<td>
Open a text editor and begin a new document.
</td>
	</tr>
	<tr valign="top">
<td>
2
</td>
<td>
Begin output buffering and start a session.
</td>
	</tr>
	<tr valign="top">
<td>
3
</td>
<td>
Check for a <tt>$page_title</tt> variable and close the PHP section.
</td>
	</tr>
	<tr valign="top">
<td>
4
</td>
<td>
Create the HTML head.
</td>
	</tr>
	<tr valign="top">
<td>
5
</td>
<td>
Begin the HTML body.
</td>
	</tr>
	<tr valign="top">
<td>
6
</td>
<td>
Save the file as <tt>header.html</tt>.
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw2><br>
<a name="phb020"></a>
<br><br><b>* Exercise 2</b><dpecw1>

<br>
Try creating a footer file in a text editor.

</dpecw1><br><dpecw2>

<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Step</b>

</th><th class="heading" scope="col">
<b>Action</b>

	</th></tr>
	<tr valign="top">
<td>
1
</td>
<td>
Open a text editor and begin a new document.
</td>
	</tr>
	<tr valign="top">
<td>
2
</td>
<td>
Use PHP to dynamically display the appropriate links.
</td>
	</tr>
	<tr valign="top">
<td>
3
</td>
<td>
Complete the HTML.
</td>
	</tr>
	<tr valign="top">
<td>
4
</td>
<td>
Flush the buffer to the Web browser.
</td>
	</tr>
	<tr valign="top">
<td>
5
</td>
<td>
Save the file as <tt>footer.html</tt> and upload it to your Web server.
</td>
	</tr>
	<tr valign="top">
<td>
6
</td>
<td>
Finally, test the file in your Web browser along with the <tt>header.html</tt> file you created.
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw2><br>
<a name="phb021"></a>
<br><dpecw1>
	
In this lesson, you learned how to create two template files: <tt>header.html</tt> and <tt>footer.html</tt>.
 You now know that a header file begins sessions and output buffering, 
while a footer file displays certain links for logging and ends output 
buffering.<br>
You also learned that PHP can be used to dynamically display links to 
log out and to change a user password, and log in and reset a forgotten 
password.
	
</dpecw1><br>
<a name="phc001"></a><br><a name="topic4"></a><h2>Lesson 3. Writing the Configuration Scripts</h2><dpecw1>

The sole purpose of the configuration file will be to establish the 
error-management policy for the site. The database script is used 
primarily to connect to MySQL and select a database.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Create a configuration file and database script
	</li>
</ul>

</dpecw1><br>
<a name="phc002"></a>
<br><dpecw1>

In this lesson, the Web site will make use of two configuration-type scripts. One, <tt>config.inc.php</tt>, will manage errors and could be used for other purposes, such as defining functions and establishing constants. The other, <tt>mysql_connect.php</tt>, will store all of the database-related information.

</dpecw1><br>
<a name="phc003"></a>
<br><dpecjs><b>*  Making a Configuration File</b>
<br>
During the development stages, I'll want every error reported in the 
most detailed way. Along with the specific error message, all of the 
existing variables will be given, as will the current date and time. 
This will be formatted so that it fits within the site's template (in 
other words, there will be a dedicated error formatting style defined in
 the CSS file).&nbsp; 
<br>

<a name="phc004"></a>
<br><dpecjs> During the production, or live, stage of the site, I'll 
want to handle errors more gracefully. At that time, the detailed error 
messages will not be printed in the Web browser, but instead sent to an 
email address. Because certain errors (called notices) may or may not be
 indicative of a problem, such errors will be reported in an email but 
ignored in the Web browser.&nbsp; 
<br>

<a name="phc005"></a>
<br><dpecw1>

Let's examine the steps required for writing the <tt>config.inc</tt> script.<br>
<b>* Step 1</b><br>
Create a new document in your text editor.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;?<tt>php # config.inc.php&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phc006"></a>
<br><dpecw1>

<b>* Step 2</b><br>
Define the required variables. The <tt>$live</tt> variable is the most important one. If it is <tt>FALSE</tt>, detailed error messages are sent to the Web browser. Once the site goes live, this variable should be set to <tt>TRUE</tt> so that detailed error messages are never revealed to the Web user. The <tt>$email</tt> variable is where the error messages will be sent when the site is live. You would use your own email address for this value.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; $live = FALSE;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; $email = '</tt><i><tt>InsertRealAddressHere</tt></i><tt>';&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phc007"></a>
<br><dpecjs><b>* Step 3</b>
<br>
Begin defining the error-handling function. It expects to receive five 
arguments: the error number, the error message, the script in which the 
error occurred, the line number on which PHP thinks the error occurred, 
and an array of variables that exist. Next, I make the two variables 
defined earlier accessible by invoking the <tt>global</tt> statement. Then I begin defining my <tt>$message</tt> variable.
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # config.inc.php</tt><br>
<tt>// This script determines how errors are handled.</tt><br>
<tt>// Flag variable for site status:</tt><br>
<tt>$live = FALSE;</tt><br>
<tt>// Error log email address:</tt><br>
<tt>$email = </tt>'<i><tt>InsertRealAddressHere</tt></i>'<tt>;</tt><br>
<tt>// Create the error handler.</tt><br>
<tt>function my_error_handler </tt><tt>($e_number, $e_message, $e_file,$e_line, $e_vars</tt><tt>) {</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>global</tt><tt> $live, $email;</tt><br>
<tt>&nbsp;&nbsp; // Build the error message.</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>$message</tt><tt> = "An error occurred in script '$e_file' on line $e_line: \n&lt;br /&gt;</tt><br>
<tt>&nbsp;&nbsp; $e_message\n&lt;br /&gt;";</tt><br>
</dpeccode><br>
<a name="phc008"></a>
<br><dpecjs><b>*  Step 4</b>
<br>
Add the current date and time. To make the error reporting more useful, 
I'll include the current date and time in the message. A newline 
character and an HTML &lt;<tt>br /</tt>&gt; tag are included to make the resulting display more legible.&nbsp; 
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # config.inc.php</tt><br>
<tt>// This script determines how errors are handled.</tt><br>
<tt>// Flag variable for site status:</tt><br>
<tt>$live = FALSE;</tt><br>
<tt>// Error log email address:</tt><br>
<tt>$email = '</tt><i><tt>InsertRealAddressHere</tt></i><tt>';</tt><br>
<tt>// Create the error handler.</tt><br>
<tt>function my_error_handler ($e_number,$e_message, $e_file, $e_line, $e_vars) {</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>global $live, $email;</tt><br>
<tt>&nbsp;&nbsp; // Build the error message.</tt><br>
<tt>&nbsp;&nbsp; $message = "An error occurred in script '$e_file' on line $e_line: \n</tt>&lt;<tt>br /</tt>&gt;<br>
<tt>&nbsp;&nbsp; $e_message\n</tt>&lt;<tt>br /</tt>&gt;<tt>";</tt><br>
<tt>&nbsp;&nbsp; // Add the date and time.</tt><br>
<tt>&nbsp;&nbsp; $message .= "Date/Time: " . date('n-j-Y H:i:s') . "\n&lt;br /&gt;";</tt>
</dpeccode><br>
<a name="phc009"></a>
<br><dpecjs><b>*  Step 5</b>
<br>
Append all of the existing variables. The <tt>$e_vars</tt> variable is an array of all variables that exist at the time of the error, along with their values. I can use the <tt>print_r()</tt> function to append the contents of <tt>$e_vars</tt> onto <tt>$message</tt>. To make it easier to read this section of the message in the Web browser, I use the HTML &lt;<tt>pre</tt>&gt; tags.&nbsp; 
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # config.inc.php</tt><br>
<tt>// This script determines how errors are handled.</tt><br>
<tt>// Flag variable for site status:</tt><br>
<tt>$live = FALSE;</tt><br>
<tt>// Error log email address:</tt><br>
<tt>$email = '</tt><i><tt>InsertRealAddressHere</tt></i><tt>';</tt><br>
<tt>// Create the error handler.</tt><br>
<tt>function my_error_handler ($e_number,$e_message, $e_file, $e_line, $e_vars) {</tt><br>
<tt>&nbsp;&nbsp; global $live, $email;</tt><br>
<tt>&nbsp;&nbsp; // Build the error message.</tt><br>
<tt>&nbsp;&nbsp; $message = "An error occurred in script '$e_file' on line $e_line: \n&lt;br /&gt;</tt><br>
<tt>&nbsp;&nbsp; $e_message\n&lt;br /&gt;";</tt><br>
<tt>&nbsp;&nbsp; // Add the date and time.</tt><br>
<tt>&nbsp;&nbsp; $message .= "Date/Time: " . date('n-j-Y H:i:s') . "\n&lt;br /&gt;";</tt><br>
<tt>&nbsp;&nbsp; // Append $e_vars to the $message.</tt><br>
<tt>&nbsp;&nbsp; $message .= "&lt;pre&gt;" . print_r ($e_vars,1) . "&lt;/pre&gt;\n&lt;br /&gt;";</tt>
</dpeccode><br>
<a name="phc010"></a>
<br><dpecjs><b>*  Step 6</b>
<br>
Handle the error according to the value of <tt>$live</tt>. As I 
mentioned earlier, if the site is live, the detailed message should be 
sent in an email and the Web user should only see a generic message. To 
take this one step further, the generic message will not be printed if 
the error is of a specific type: <tt>E_NOTICE</tt>. Such errors occur for things like referring to a variable that does not exist, which may or may not be a problem.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>// Create the error handler.</tt><br>
<tt>function my_error_handler ($e_number,$e_message, $e_file, $e_line, $e_vars) {</tt><br>
<tt>&nbsp;&nbsp; global $live, $email;</tt><br>
<tt>&nbsp;&nbsp; // Build the error message.</tt><br>
<tt>&nbsp;&nbsp; $message = "An error occurred in script '$e_file' on line $e_line: \n&lt;br /&gt;</tt><br>
<tt>&nbsp;&nbsp; $e_message\n&lt;br /&gt;";</tt><br>
<tt>&nbsp;&nbsp; // Add the date and time.</tt><br>
<tt>&nbsp;&nbsp; $message .= "Date/Time: " . date('n-j-Y H:i:s') . "\n&lt;br /&gt;";</tt><br>
<tt>&nbsp;&nbsp; // Append $e_vars to the $message.</tt><br>
<tt>&nbsp;&nbsp; $message .= "&lt;pre&gt;" . print_r ($e_vars,1) . "&lt;/pre&gt;\n&lt;br /&gt;";</tt><br>
<tt>&nbsp;&nbsp; if </tt><tt>($live)</tt><tt> { // Don't show the specific error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error_log ($message, 1, $email);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Send email.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Only print an error message if the error isn't a notice.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if </tt><tt>($e_number != E_NOTICE)</tt><tt> {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>div id="Error"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 A system error occurred. We apologize for the inconvenience.</tt>&lt;<tt>/div</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp; } else { // Development (print the error).</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>div id="Error"</tt>&gt;<tt>' . $message .'</tt>&lt;<tt>/div</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>';</tt>
</dpeccode><br>
<a name="phc011"></a>
<br><dpecw1>

To avoid potentially inundating the user with error messages, I check if <tt>$e_number</tt> is not equal to <tt>E_NOTICE</tt>,
 which is a constant defined in PHP. If the site isn't live, the entire 
error message is printed, for any type of error message. In both cases, I
 surround the message with &lt;<tt>div id</tt>="<tt>Error</tt>"&gt;, which will format the message per the rules defined in my CSS file.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; if ($live) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; error_log ($message, 1, $email);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; if ($e_number != E_NOTICE) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; echo '&lt;div id="Error"&gt;A system error occurred. We apologize&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for the inconvenience.&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;&lt;br /&gt;';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; }&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } else {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; echo '&lt;div id="Error"&gt;' .&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$message . '</tt>&lt;<tt>/div</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phc012"></a>
<br><dpecjs><b>*  Step 7</b>
<br>
Complete the function definition and tell PHP to use your error handler. You have to use the <tt>set_error_handler()</tt> function to tell PHP to use your own function for errors.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>// Create the error handler.</tt><br>
<tt>function my_error_handler ($e_number,$e_message, $e_file, $e_line, $e_vars) {</tt><br>
<tt>&nbsp;&nbsp; global $live, $email;</tt><br>
<tt>&nbsp;&nbsp; // Build the error message.</tt><br>
<tt>&nbsp;&nbsp; $message = "An error occurred in script '$e_file' on line $e_line: \n&lt;br /&gt;</tt><br>
<tt>&nbsp;&nbsp; $e_message\n&lt;br /&gt;";</tt><br>
<tt>&nbsp;&nbsp; // Add the date and time.</tt><br>
<tt>&nbsp;&nbsp; $message .= "Date/Time: " . date('n-j-Y H:i:s') . "\n&lt;br /&gt;";</tt><br>
<tt>&nbsp;&nbsp; // Append $e_vars to the $message.</tt><br>
<tt>&nbsp;&nbsp; $message .= "&lt;pre&gt;" . print_r ($e_vars,1) . "&lt;/pre&gt;\n&lt;br /&gt;";</tt><br>
<tt>&nbsp;&nbsp; if ($live) { // Don't show the specific error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error_log ($message, 1, $email);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Send email.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Only print an error message if the error isn't a notice.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($e_number != E_NOTICE) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>div id="Error"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A
 system error occurred. We apologize for the inconvenience.</tt>&lt;<tt>/div</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp; } else { // Development (print the error).</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>div id="Error"</tt>&gt;<tt>' . $message .'</tt>&lt;<tt>/div</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>} // End of my_error_handler() definition.</tt><br>
<tt>// Use my error handler.</tt><br>
<tt>set_error_handler ('my_error_handler');</tt><br>
?<tt>&gt;</tt><br>
</dpeccode><br>
<a name="phc013"></a>
<br><dpecjs><b>*  Step 8</b>
<br>
Save the file as <tt>config.inc.php</tt>, and upload to the Web server, placing it in the <tt>includes</tt><i> </i>directory. <dpec2c>Click Save.</dpec2c>&nbsp; 
<br>

<a name="phc014"></a>
<br><dpecw1>

<b>* Making the Database Script</b><br>
The second configuration-type script will be <tt>mysql_connect.php</tt>.<br>
Its primary purpose is to connect to MySQL and select the database.<br>
The script will also define the <tt>escape_data()</tt> function, which is used to process all form data before using it in a SQL query.

</dpecw1><br>
<a name="phc015"></a>
<br><dpecw1>

If a problem occurs, this page will make use of the error-handling tools established in <tt>config.inc.php</tt>. To do so, I'll use the <tt>trigger_error()</tt> function.<br>
This function lets you tell PHP that an error occurred.<br>
Of course PHP will handle that error using the <tt>my_error_handler()</tt> function, as established in the configuration script.

</dpecw1><br>
<a name="phc016"></a>
<br><dpecw1>

<b>* Database Permissions</b><br>
As a security matter, this Web application should use its own specific 
MySQL user and password. Instead of accessing the database as a generic 
Web user or as the root user, establish a new username and password with
 access only to the database <tt>sitename</tt>.

</dpecw1><br><dpecw2>

The MySQL user should have permission to insert, update, and select 
records but nothing more. By creating a new user with very particular 
permissions, the potential security risk is minimized should that access
 information be compromised.

</dpecw2><br>
<a name="phc017"></a>
<br><dpecw1>

Let's examine the steps required for writing the <tt>mysql_connect.php</tt> script. <br>
<b>* Step 1</b><br>
Create a new document in your text editor.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;?<tt>php # mysql_connect.php&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phc018"></a>
<br><dpecjs><b>*  Step 2</b>
<br>
Set the database access information.&nbsp; 
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # mysql_connect.php</tt><br>
<tt>// This file contains the database access information.</tt><br>
<tt>// This file also establishes a connection to MySQL and selects the database.</tt><br>
<tt>// Set the database access information as constants.</tt><br>
<tt>DEFINE ('DB_USER', 'username');</tt><br>
<tt>DEFINE ('DB_PASSWORD', 'password');</tt><br>
<tt>DEFINE ('DB_HOST', 'localhost');</tt><br>
<tt>DEFINE ('DB_NAME', 'sitename');</tt><br>
<br>
</dpeccode><br>
<a name="phc019"></a>
<br><dpecjs><b>*  Step 3</b>
<br>
Attempt to connect to MySQL and select the database. Usually, these two 
steps each take place in a single line. If the function doesn't return a
 proper result, the <tt>die()</tt> function is called. Since I will be 
using my own error-handling function and not simply killing the script, 
I'll rewrite these steps as conditionals.&nbsp; 
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # mysql_connect.php</tt><br>
<tt>// This file contains the database access information.</tt><br>
<tt>// This file also establishes a connection to MySQL and selects the database.</tt><br>
<tt>// Set the database access information as constants.</tt><br>
<tt>DEFINE ('DB_USER', 'username');</tt><br>
<tt>DEFINE ('DB_PASSWORD', 'password');</tt><br>
<tt>DEFINE ('DB_HOST', 'localhost');</tt><br>
<tt>DEFINE ('DB_NAME', 'sitename');</tt><br>
<tt>if ($dbc = mysql_connect (DB_HOST, DB_USER, DB_PASSWORD)) { // Make the connnection.</tt><br>
<tt>&nbsp;&nbsp; if (!mysql_select_db (DB_NAME)) { // If it can't select the database.</tt><br>
</dpeccode><br>
<a name="phc020"></a>
<br><dpecjs><b>*  Step 4</b>
<br>
Handle any errors if the database could not be selected. If the script 
could not select the database, I want to send the error message to the <tt>my_error_handler()</tt>
 function. By doing so, I can ensure that the error is handled according
 to the currently set management technique (live stage versus 
development). Instead of calling <tt>my_error_handler()</tt> directly, I use <tt>trigger_error()</tt>, whose first argument is the error message.&nbsp; 
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # mysql_connect.php</tt><br>
<tt>// This file contains the database access information.</tt><br>
<tt>// This file also establishes a connection to MySQL and selects the database.</tt><br>
<tt>// Set the database access information as constants.</tt><br>
<tt>DEFINE ('DB_USER', 'username');</tt><br>
<tt>DEFINE ('DB_PASSWORD', 'password');</tt><br>
<tt>DEFINE ('DB_HOST', 'localhost');</tt><br>
<tt>DEFINE ('DB_NAME', 'sitename');</tt><br>
<tt>if ($dbc = mysql_connect (DB_HOST, DB_USER, DB_PASSWORD)) { // Make the connnection.</tt><br>
<tt>&nbsp;&nbsp; if (!mysql_select_db (DB_NAME)) { // If it can't select the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Handle the error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;trigger_error("Could not select the database!\n<br>MySQL Error:" . mysql_error());</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Print a message to the user, include the footer, and kill the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit();</tt>
</dpeccode><br>
<a name="phc021"></a>
<br><dpecjs> Because an inability to select the database will most 
likely undermine the functionality of the script, I'll also include the 
footer file to complete the HTML page and terminate the script. A 
database selection error will occur if there is a problem during the 
development stage.&nbsp; 
<br>

<a name="phc022"></a>
<br><dpecjs><b>* Step 5</b>
<br>
Repeat the process if a connection could not be established. These lines
 are permutations of the ones in the previous step and will be executed 
if the script could not connect to MySQL. As in that example, the <tt>mysql_error()</tt> function is used as part of the error message.
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # mysql_connect.php</tt><br>
<tt>// This file contains the database access information.</tt><br>
<tt>// This file also establishes a connection to MySQL and selects the database.</tt><br>
<tt>// Set the database access information as constants.</tt><br>
<tt>DEFINE ('DB_USER', 'username');</tt><br>
<tt>DEFINE ('DB_PASSWORD', 'password');</tt><br>
<tt>DEFINE ('DB_HOST', 'localhost');</tt><br>
<tt>DEFINE ('DB_NAME', 'sitename');</tt><br>
<tt>if ($dbc = mysql_connect (DB_HOST, DB_USER, DB_PASSWORD)) { // Make the connnection.</tt><br>
<tt>&nbsp;&nbsp; if (!mysql_select_db (DB_NAME)) { // If it can't select the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Handle the error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;trigger_error("Could not select the database!\n</tt>&lt;<tt>br /</tt>&gt;<tt>MySQL Error:" . mysql_error());</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Print a message to the user, include the footer, and kill the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit();</tt>
<br>
<tt>&nbsp;&nbsp; } // End of mysql_select_db IF.</tt><br>
<tt>} else { // If it couldn't connect to MySQL.</tt><br>
<tt>&nbsp;&nbsp; // Print a message to the user, include the footer, and kill the script.</tt><br>
<tt>&nbsp;&nbsp; trigger_error("Could not connect to MySQL!\n</tt>&lt;<tt>br /</tt>&gt;<tt>MySQL Error: " . mysql_error());</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; exit();</tt><br>
</dpeccode><br>
<a name="phc023"></a>
<br><dpecjs><b>*  Step 6</b>
<br>
Create the <tt>escape_data()</tt> function.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Handle the error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;trigger_error("Could
 not select the database!\n&lt;br /&gt;MySQL Error:" . mysql_error());</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Print a message to the user, include the footer, and kill the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit();</tt>
<br>
<tt>&nbsp;&nbsp; } // End of mysql_select_db IF.</tt><br>
<tt>} else { // If it couldn't connect to MySQL.</tt><br>
<tt>&nbsp;&nbsp; // Print a message to the user, include the footer, and kill the script.</tt><br>
<tt>&nbsp;&nbsp; trigger_error("Could not connect to MySQL!\n&lt;br /&gt;MySQL Error: " . mysql_error());</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; exit();</tt><br>
<tt>} // End of $dbc IF.</tt><br>
<tt>// Create a function for escaping the data.</tt><br>
<tt>function escape_data ($data) {</tt><br>
<tt>&nbsp;&nbsp; // Address Magic Quotes.</tt><br>
<tt>&nbsp;&nbsp; if (ini_get('magic_quotes_gpc')) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data = stripslashes($data);</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Check for mysql_real_escape_string()support.</tt><br>
<tt>&nbsp;&nbsp; if (function_exists('mysql_real_escape_string')) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;global $dbc; // Need the connection.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data = mysql_real_escape_string(trim($data), $dbc);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data = mysql_escape_string(trim($data));</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Return the escaped value.</tt><br>
<tt>&nbsp;&nbsp; return $data;</tt><br>
<tt>}</tt><br>
</dpeccode><br>
<a name="phc024"></a>
<br><dpecjs><b>*  Step 7</b>
<br>
Complete the PHP code.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>// Create a function for escaping the data.</tt><br>
<tt>function escape_data ($data) {</tt><br>
<tt>&nbsp;&nbsp; // Address Magic Quotes.</tt><br>
<tt>&nbsp;&nbsp; if (ini_get('magic_quotes_gpc')) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data = stripslashes($data);</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Check for mysql_real_escape_string()support.</tt><br>
<tt>&nbsp;&nbsp; if (function_exists('mysql_real_escape_string')) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;global $dbc; // Need the connection.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data = mysql_real_escape_string(trim($data), $dbc);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data = mysql_escape_string(trim($data));</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Return the escaped value.</tt><br>
<tt>&nbsp;&nbsp; return $data;</tt><br>
<tt>} // End of function.</tt><br>
?&gt;<br>
</dpeccode><br>
<a name="phc025"></a>
<br><dpecjs><b>*  Step 8</b>
<br>
Save the file as <tt>mysql_connect.php</tt>, and upload to the Web server, outside of the Web document directory. <dpec2c>Click Save.</dpec2c>&nbsp; 
<br>

<a name="phc026"></a>
<br><b>Unnecessary overhead  <br>  </b>  On the one hand, it might make 
sense to place the contents of both configuration files in one script 
for ease of reference.  Unfortunately, doing so would add unnecessary 
overhead (namely, connecting to and selecting the database) to scripts 
that don't require a database connection (e.g., <tt><tt></tt>index.php</tt>).  <br><br>  <b>Error management file  <br>  </b>  For the error management file, I used <tt><tt></tt>.inc.php<tt></tt></tt>
 as the extension, indicating that the script is both an included file 
but also a PHP script.  For the MySQL connection page, I just used <tt><tt></tt>.php<tt></tt></tt>,
 as it's clear from the file's name what the script does. These are 
minor, irrelevant distinctions, but I would strongly advocate that both 
files end with <tt><tt></tt>.php<tt></tt></tt>, for security purposes.  <br><br>  
<a name="phc028"></a>

<script language="JavaScript">insertAccQuestion('2','phc028.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phc029"></a>

<script language="JavaScript">insertAccQuestion('3','phc029.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phc030"></a>
<br><a name="topic5"></a><h2>Topic 3.1 Exercises</h2><br><b>* Exercise 1</b><dpecw1>

<br>
Try creating a configuration file in a text editor.

</dpecw1><br><dpecw2>

<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Step</b>

</th><th class="heading" scope="col">
<b>Action</b>

	</th></tr>
	<tr valign="top">
<td>
1
</td>
<td>
Open a text editor and begin a new document.
</td>
	</tr>
	<tr valign="top">
<td>
2
</td>
<td>
Define all of the required variables.
</td>
	</tr>
	<tr valign="top">
<td>
3
</td>
<td>
Define the error-handling function.
</td>
	</tr>
	<tr valign="top">
<td>
4
</td>
<td>
Add the current date and time.
</td>
	</tr>
	<tr valign="top">
<td>
5
</td>
<td>
Append all of your existing variables.
</td>
	</tr>
	<tr valign="top">
<td>
6
</td>
<td>
Handle any error according to the value of the required variable.
</td>
	</tr>
	<tr valign="top">
<td>
7
</td>
<td>
Complete the function definition and tell PHP to use your error handler.
</td>
	</tr>
	<tr valign="top">
<td>
8
</td>
<td>
Save the file as <tt><tt>config.inc.php</tt></tt>, and upload to the Web server.
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw2><br>
<a name="phc031"></a>
<br><br><b>* Exercise 2</b><dpecw1>

<br>
Try creating a database script in a text editor.

</dpecw1><br><dpecw2>

<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Step</b>

</th><th class="heading" scope="col">
<b>Action</b>

	</th></tr>
	<tr valign="top">
<td>
1
</td>
<td>
Open a text editor and begin a new document.
</td>
	</tr>
	<tr valign="top">
<td>
2
</td>
<td>
Set your databases access information.
</td>
	</tr>
	<tr valign="top">
<td>
3
</td>
<td>
Connect to MySQL and select a database.
</td>
	</tr>
	<tr valign="top">
<td>
4
</td>
<td>
Perform error-handling if the database was not selected.
</td>
	</tr>
	<tr valign="top">
<td>
5
</td>
<td>
Once the database is selected, create the <tt>escape_data()</tt> function.
</td>
	</tr>
	<tr valign="top">
<td>
6
</td>
<td>
Complete the PHP code.
</td>
	</tr>
	<tr valign="top">
<td>
7
</td>
<td>
Save the file as <tt>mysql_connect.php</tt>, and upload it to a Web server. View in a Web browser to test.
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw2><br>
<a name="phc032"></a>
<br><dpecw1>
	
In this lesson, you learned that a configuration file is used to manage 
errors and can also be used to define functions and establish constants.
 You now know that certain errors may or may not be indicative of a 
problem, and such errors can be reported in an email but ignored in a 
Web browser.<br>
You also learned that a database script defines the <tt>escape_data()</tt>
 function, which is used to process all form data before using it in a 
SQL query. You now know that a MySQL user should only have permission to
 insert, update, and select records in a database.
	
</dpecw1><br>
<a name="phd001"></a><br><a name="topic6"></a><h2>Lesson 4. Creating the Home Page</h2><dpecw1>

The home page can be used to welcome a user by name, assuming the user is logged in.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Create a home page
	</li>
</ul>

</dpecw1><br>
<a name="phd002"></a>
<br><dpecw1>

The home page for the site, called <tt>index.php</tt>, will be a model for the other pages on the public side.<br>
It will require the configuration file (for error management) and the header and footer files to create the HTML design.

</dpecw1><br>
<a name="phd003"></a>
<br><dpecw1>

<b>* Writing <tt></tt></b><tt>index.php</tt><br>
Let's examine the steps required for writing <tt>index.php</tt>.<br>
<b>* Step 1</b><br>
Create a new document in your text editor.

</dpecw1><br><dpeccode>
<br>
<tt>&nbsp;&nbsp; </tt>&lt;?<tt>php # index.php&nbsp;&nbsp; </tt><br>
</dpeccode><br>
<a name="phd004"></a>
<br><dpecjs><b>*  Step 2</b>
<br>
Include the configuration file, set the page title, and include the HTML
 header. The script includes the configuration file first so that 
everything that happens afterward will be handled using the 
error-management processes established therein. Then the <tt>header.html</tt> file is included, which will start output buffering, begin the session, and create the initial part of the HTML layout. <ml_ins_href><ml_data_href>&nbsp; 
<br>
</ml_data_href></ml_ins_href></dpecjs><br><dpeccode>
&lt;?<tt>php # index.php</tt><br>
<tt>// This is the main page for the site.</tt><br>
<tt>// Include the configuration file for error management and such.</tt><br>
<tt>require_once ('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title </tt>=<tt> 'PHP and MySQL for Dynamic Web Sites:</tt><br>
<tt>Visual QuickStart Guide (2nd Edition)';</tt><br>
<tt>include ('./includes/header.html');</tt>
</dpeccode><br>
<br><a name="phd004a"></a>
<br><dpecw1>
	
<dpeccode>
&lt;<tt>?php # header.html</tt><br>
<tt>// This page begins the HTML header for the site.</tt><br>
<tt>// Start output buffering.</tt><br>
<tt>ob_start();</tt><br>
<tt>// Initialize a session.</tt><br>
<tt>session_start();</tt><br>
<tt>// Check for a $page_title value.</tt><br>
<tt>if (!isset($page_title)) {</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'User Registration System';</tt><br>
<tt>}</tt><br>
<tt>?</tt>&gt;<br>
&lt;<tt>!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"</tt><br>
<tt>&nbsp;&nbsp; "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</tt><br>
&lt;<tt>html xmlns=http://www.w3.org/1999/xhtmlxml:lang="en" lang="en"</tt>&gt;<br>
&lt;<tt>head</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>meta http-equiv=</tt>"<tt>content-type</tt>"<tt> content=</tt>"<tt>text/html; charset=iso-8859-1</tt>"<tt> /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>title</tt>&gt;&lt;<tt>?php echo $page_title; ?</tt>&gt;&lt;<tt>/title</tt>&gt;<br>
&lt;<tt>style type="text/css" media="screen"</tt>&gt;<br>
<tt>@import "./includes/layout.css";</tt>&lt;<tt>/style</tt>&gt;<br>
&lt;<tt>/head</tt>&gt;<br>
&lt;<tt>body</tt>&gt;<br>
&lt;<tt>div id="Header"</tt>&gt;<tt>User Registration</tt>&lt;<tt>/div</tt>&gt;<br>
&lt;<tt>div id="Content"</tt>&gt;<br>
&lt;<tt>!-End of Header --</tt>&gt;
</dpeccode>
	
</dpecw1><br><br>
<a name="phd005"></a>
<br><dpecjs><b>*  Step 3</b>
<br>
Greet the user and complete the PHP code.&nbsp; 
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # index.php</tt><br>
<tt>// This is the main page for the site.</tt><br>
<tt>// Include the configuration file for error management and such.</tt><br>
<tt>require_once ('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title </tt>=<tt> 'PHP and MySQL for Dynamic Web Sites:</tt><br>
<tt>Visual QuickStart Guide (2nd Edition)';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Welcome the user (by name if they are logged in).</tt><br>
<tt>echo '</tt>&lt;<tt>h1</tt>&gt;<tt>Welcome';</tt><br>
<tt>if (isset($_SESSION['first_name'])) {</tt><br>
<tt>&nbsp;&nbsp; echo ", {$_SESSION['first_name']}!";</tt><br>
<tt>}</tt><br>
<tt>echo '</tt>&lt;<tt>/h1</tt>&gt;<tt>';</tt><br>
?&gt;<tt> </tt>
</dpeccode><br>
<a name="phd006"></a>
<br><dpecjs> The <i>Welcome </i>message will be printed to all users. If a <tt>$_SESSION['first_name']</tt> variable is set, the user's first name will also be printed. So the end result will be either just <i>Welcome</i> or <i>Welcome, Name!</i>.&nbsp; 
<br>

<a name="phd007"></a>
<br><dpecjs><b>*  Step 4</b>
<br>
Create the content for the page.&nbsp; 
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # index.php</tt><br>
<tt>// This is the main page for the site.</tt><br>
<tt>// Include the configuration file for error management and such.</tt><br>
<tt>require_once ('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title </tt>=<tt> 'PHP and MySQL for Dynamic Web Sites:</tt><br>
<tt>Visual QuickStart Guide (2nd Edition)';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Welcome the user (by name if they are logged in).</tt><br>
<tt>echo '</tt>&lt;<tt>h1</tt>&gt;<tt>Welcome';</tt><br>
<tt>if (isset($_SESSION['first_name'])) {</tt><br>
<tt>&nbsp;&nbsp; echo ", {$_SESSION['first_name']}!";</tt><br>
<tt>}</tt><br>
<tt>echo '</tt>&lt;<tt>/h1</tt>&gt;<tt>';</tt><br>
?&gt;<br>
&lt;<tt>p</tt>&gt;<tt>Spam spam spam spam spam spam spam spam spam spam</tt><br>
<tt>spam spam spam spam spam spam spam spam spam spam spam</tt><br>
<tt>spam spam spam.</tt>&lt;<tt>/p</tt>&gt;<br>
&lt;<tt>p</tt>&gt;<tt>Spam spam spam spam spam spam spam spam spam spam</tt><br>
<tt>spam spam spam spam spam spam spam spam spam spam</tt><br>
<tt>spam spam spam spam.</tt>&lt;<tt>/p</tt>&gt;
</dpeccode><br>
<a name="phd008"></a>
<br><dpecjs><b>*  Step 5</b>
<br>
Include the HTML footer. The footer file will complete the HTML layout 
(primarily the menu bar on the right side of the page) and conclude the 
output buffering. <ml_ins_href><ml_data_href>&nbsp; 
<br>
</ml_data_href></ml_ins_href></dpecjs><br><dpeccode>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title </tt>=<tt> 'PHP and MySQL for Dynamic Web Sites:</tt><br>
<tt>Visual QuickStart Guide (2nd Edition)';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Welcome the user (by name if they are logged in).</tt><br>
<tt>echo '</tt>&lt;<tt>h1</tt>&gt;<tt>Welcome';</tt><br>
<tt>if (isset($_SESSION['first_name'])) {</tt><br>
<tt>&nbsp;&nbsp; echo ", {$_SESSION['first_name']}!";</tt><br>
<tt>}</tt><br>
<tt>echo '</tt>&lt;<tt>/h1</tt>&gt;<tt>';</tt><br>
?&gt;<br>
&lt;<tt>p</tt>&gt;<tt>Spam spam spam spam spam spam spam spam spam spam</tt><br>
<tt>spam spam spam spam spam spam spam spam spam spam spam</tt><br>
<tt>spam spam spam.</tt>&lt;<tt>/p</tt>&gt;<br>
&lt;<tt>p</tt>&gt;<tt>Spam spam spam spam spam spam spam spam spam spam</tt><br>
<tt>spam spam spam spam spam spam spam spam spam spam</tt><br>
<tt>spam spam spam spam.</tt>&lt;<tt>/p</tt>&gt;<br>
&lt;?<tt>php // Include the HTML footer file.</tt><br>
<tt>include ('./includes/footer.html');</tt><br>
?&gt;
</dpeccode><br>
<br><a name="phd008a"></a>
<br><dpecw1>
	
<dpeccode>
&lt;<tt>!-End of Content --</tt>&gt;<br>
&lt;<tt>/div</tt>&gt;<br>
&lt;<tt>div id="Menu"</tt>&gt;<br>
&lt;<tt>a href="index.php"</tt>&gt;<tt>Home</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;?<tt>php # footer.html</tt>&gt;<br>
<tt>// This page completes the HTML template.</tt><br>
<tt>// Display links based upon the login status.</tt><br>
<tt>// Show LOGIN links if this is the LOGOUT page.</tt><br>
<tt>if (isset($_SESSION[</tt>'<tt>user_id</tt>'<tt>]) AND</tt><br>
<tt>(substr($_SERVER[</tt>'<tt>PHP_SELF</tt>'<tt>], -10)</tt><br>
<tt>!</tt><tt>=</tt><tt> </tt>'<tt>logout.php</tt>'<tt>)) {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>a href</tt><tt>="</tt><tt>logout.php</tt><tt>"</tt>&gt;<tt>Logout</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;
&lt;<tt>a href</tt><tt>="</tt><tt>change_password.php</tt><tt>"</tt>&gt;<tt>Change</tt><br>
<tt>Password</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
<tt>';</tt><br>
<tt>} else { // Not logged in.</tt><br>
<tt>&nbsp;&nbsp; echo ' </tt>&lt;<tt>a href</tt><tt>="</tt><tt>register.php</tt><tt>"</tt>&gt;<br>
<tt>&nbsp;&nbsp; Register</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>a href</tt><tt>="</tt><tt>login.php</tt><tt>"</tt>&gt;<tt>Login</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>a href</tt><tt>="</tt><tt>forgot_password.php</tt><tt>"</tt>&gt;<tt>Forgot Password</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
<tt>';</tt><br>
<tt>}</tt><br>
?&gt;<br>
&lt;<tt>a href="#</tt><tt> </tt><tt>"</tt>&gt;<tt>Some Page</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>a href="#</tt><tt> </tt><tt>"</tt>&gt;<tt>Another Page</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>/div</tt>&gt;<br>
&lt;<tt>/body</tt>&gt;<br>
&lt;<tt>/html</tt>&gt;<br>
&lt;?<tt>php // Flush the buffered output.<br>
</tt><tt>ob_end_flush();<br>
</tt>?&gt;<tt>
</tt>
</dpeccode>
	
</dpecw1><br><br>
<a name="phd009"></a>
<br><dpecjs><b>*  Step 6</b>
<br>
Save the file as <tt>index.php</tt>, upload to the Web server, and test in a Web browser.<dpec2c> Click Home.</dpec2c>&nbsp; 
<br>

<a name="phd010"></a>
<br><dpecjs><b>*  The Database Scheme</b>
<br>
The database being used by this application currently consists of only one table, <tt>users</tt>. To create the table as it should be defined for this lesson, use this SQL command:&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>CREATE TABLE users (</tt><br>
<tt>user_id INT unsigned NOT NULL auto_increment,</tt><br>
<tt>email varchar(40) NOT NULL,</tt><br>
<tt>pass CHAR(40) NOT NULL,</tt><br>
<tt>first_name varchar(15) NOT NULL,</tt><br>
<tt>last_name varchar(30) NOT NULL,</tt><br>
<tt>active CHAR(32),</tt><br>
<tt>registration_date datetime NOT NULL,</tt><br>
<tt>PRIMARY KEY (user_id),</tt><br>
<tt>UNIQUE KEY (email),</tt><br>
<tt>KEY (email, pass)</tt><br>
<tt>)</tt>
</dpeccode><br>
<a name="phd011"></a>
<br><dpecjs> The active<i> </i>column will be used to indicate whether a
 user has activated her account (by clicking a link in the registration 
email) or not. It will either store the 32-character-long activation 
code or have a <tt>NULL</tt> value.
A unique index is placed on the email<i> </i>field, and another index is placed on the combination of the email and pass<i> </i>fields. These two fields will be used together during the login query, so indexing them as one makes sense.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>CREATE TABLE users (</tt><br>
<tt>user_id INT unsigned NOT NULL auto_increment,</tt><br>
<tt>email varchar(40) NOT NULL,</tt><br>
<tt>pass CHAR(40) NOT NULL,</tt><br>
<tt>first_name varchar(15) NOT NULL,</tt><br>
<tt>last_name varchar(30) NOT NULL,</tt><br>
<tt>active CHAR(32),</tt><br>
<tt>registration_date datetime NOT NULL,</tt><br>
<tt>PRIMARY KEY (user_id),</tt><br>
<tt>UNIQUE KEY (email),</tt><br>
<tt>KEY (email, pass)</tt><br>
<tt>)</tt>
</dpeccode><br>
<a name="phd012"></a>

<script language="JavaScript">insertAccQuestion('4','phd012.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phd014"></a>
<br><a name="topic7"></a><h2>Topic 4.1 Exercises</h2><br><b>* Exercise 1</b><dpecw1>

<br>
Try creating your own home page.

</dpecw1><br><dpecw2>

<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Step</b>

</th><th class="heading" scope="col">
<b>Action</b>

	</th></tr>
	<tr valign="top">
<td>
1
</td>
<td>
Open a text editor and begin a new document.
</td>
	</tr>
	<tr valign="top">
<td>
2
</td>
<td>
Include a configuration file.<br>
[<b>Note</b>: Make sure that <tt>config.inc.php</tt> is available in the appropriate directory on your Web server. <ml_ins_href><ml_data_href>]
</ml_data_href></ml_ins_href></td>
	</tr>
	<tr valign="top">
<td>
3
</td>
<td>
Set a page title.
</td>
	</tr>
	<tr valign="top">
<td>
4
</td>
<td>
Include a HTML header file. <ml_ins_href><ml_data_href>
</ml_data_href></ml_ins_href></td>
	</tr>
	<tr valign="top">
<td>
5
</td>
<td>
Greet your user and complete the PHP code.
</td>
	</tr>
	<tr valign="top">
<td>
6
</td>
<td>
Create page content.
</td>
	</tr>
	<tr valign="top">
<td>
7
</td>
<td>
Include a HTML footer file. <ml_ins_href><ml_data_href>
</ml_data_href></ml_ins_href></td>
	</tr>
	<tr valign="top">
<td>
8
</td>
<td>
Save the file as <tt>index.php</tt>, upload the file to a Web server, and test it in a Web browser.
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw2><br>
<br><a name="phd014a"></a>
<br><dpecw1>
	
<dpeccode>
&lt;?<tt>php # config.inc.php</tt><br>
<tt>// This script determines how errors are handled.</tt><br>
<tt>// Flag variable for site status:</tt><br>
<tt>$live = FALSE;</tt><br>
<tt>// Error log email address:</tt><br>
<tt>$email = '</tt><i><tt>InsertRealAddressHere</tt></i><tt>';</tt><br>
<tt>// Create the error handler.</tt><br>
<tt>function my_error_handler ($e_number,$e_message, $e_file, $e_line, $e_vars) {</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>global $live, $email;</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>// Build the error message.</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>$message = "An error occurred in script '$e_file' on line $e_line: \n&lt;br /&gt;</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>$e_message\n&lt;br /&gt;";</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>// Add the date and time.</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>$message .= "Date/Time: " . date('n-j-Y H:i:s') . "\n&lt;br /&gt;";</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>// Append $e_vars to the $message.</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>$message .= "&lt;pre&gt;" . print_r ($e_vars,1) . "&lt;/pre&gt;\n&lt;br /&gt;";</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>if ($live) { // Don't show the specific error.</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<tt>error_log ($message, 1, $email);</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<tt>// Send email.</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<tt>// Only print an error message if the error isn't a notice.</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<tt>if ($e_number != E_NOTICE) {</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<tt>echo '</tt>&lt;<tt>div id="Error"</tt>&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<tt>A system error occurred. We apologize for the inconvenience.</tt>&lt;<tt>/div</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>';</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<tt>}</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>} else { // Development (print the error).</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<tt>echo '</tt>&lt;<tt>div id="Error"</tt>&gt;<tt>' . $message .'</tt>&lt;<tt>/div</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>';</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>}</tt><br>
<tt>} // End of my_error_handler() definition.</tt><br>
<tt>// Use my error handler.</tt><br>
<tt>set_error_handler ('my_error_handler');</tt><br>
?<tt>&gt;</tt>
</dpeccode>
	
</dpecw1><br><br>
<br><a name="phd014b"></a>
<br><dpecw1>
	
<dpeccode>
&lt;<tt>?php # header.html</tt><br>
<tt>// This page begins the HTML header for the site.</tt><br>
<tt>// Start output buffering.</tt><br>
<tt>ob_start();</tt><br>
<tt>// Initialize a session.</tt><br>
<tt>session_start();</tt><br>
<tt>// Check for a $page_title value.</tt><br>
<tt>if (!isset($page_title)) {</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'User Registration System';</tt><br>
<tt>}</tt><br>
<tt>?</tt>&gt;<br>
&lt;<tt>!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"</tt><br>
<tt>&nbsp;&nbsp; "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</tt><br>
&lt;<tt>html xmlns=http://www.w3.org/1999/xhtmlxml:lang="en" lang="en"</tt>&gt;<br>
&lt;<tt>head</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>meta http-equiv=</tt>"<tt>content-type</tt>"<tt> content=</tt>"<tt>text/html; charset=iso-8859-1</tt>"<tt> /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>title</tt>&gt;&lt;<tt>?php echo $page_title; ?</tt>&gt;&lt;<tt>/title</tt>&gt;<br>
&lt;<tt>style type="text/css" media="screen"</tt>&gt;<br>
<tt>@import "./includes/layout.css";</tt>&lt;<tt>/style</tt>&gt;<br>
&lt;<tt>/head</tt>&gt;<br>
&lt;<tt>body</tt>&gt;<br>
&lt;<tt>div id="Header"</tt>&gt;<tt>User Registration</tt>&lt;<tt>/div</tt>&gt;<br>
&lt;<tt>div id="Content"</tt>&gt;<br>
&lt;<tt>!-End of Header --</tt>&gt;
</dpeccode>
	
</dpecw1><br><br>
<br><a name="phd014c"></a>
<br><dpecw1>
	
<dpeccode>
&lt;<tt>!-End of Content --</tt>&gt;<br>
&lt;<tt>/div</tt>&gt;<br>
&lt;<tt>div id="Menu"</tt>&gt;<br>
&lt;<tt>a href="index.php"</tt>&gt;<tt>Home</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;?<tt>php # footer.html</tt>&gt;<br>
<tt>// This page completes the HTML template.</tt><br>
<tt>// Display links based upon the login status.</tt><br>
<tt>// Show LOGIN links if this is the LOGOUT page.</tt><br>
<tt>if (isset($_SESSION[</tt>'<tt>user_id</tt>'<tt>]) AND</tt><br>
<tt>(substr($_SERVER[</tt>'<tt>PHP_SELF</tt>'<tt>], -10)</tt><br>
<tt>!</tt><tt>=</tt><tt> </tt>'<tt>logout.php</tt>'<tt>)) {</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>echo '</tt>&lt;<tt>a href</tt><tt>="</tt><tt>logout.php</tt><tt>"</tt>&gt;<tt>Logout</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;
&lt;<tt>a href</tt><tt>="</tt><tt>change_password.php</tt><tt>"</tt>&gt;<tt>Change</tt><tt> </tt><tt>Password</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
<tt>';</tt><br>
<tt>} else { // Not logged in.</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>echo ' </tt>&lt;<tt>a href</tt><tt>="</tt><tt>register.php</tt><tt>"</tt>&gt;<tt>Register</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>a href</tt><tt>="</tt><tt>login.php</tt><tt>"</tt>&gt;<tt>Login</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>a href</tt><tt>="</tt><tt>forgot_password.php</tt><tt>"</tt>&gt;<tt>Forgot Password</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
<tt>';</tt><br>
<tt>}</tt><br>
?&gt;<br>
&lt;<tt>a href="#</tt><tt> </tt><tt>"</tt>&gt;<tt>Some Page</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>a href="#</tt><tt> </tt><tt>"</tt>&gt;<tt>Another Page</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>/div</tt>&gt;<br>
&lt;<tt>/body</tt>&gt;<br>
&lt;<tt>/html</tt>&gt;<br>
&lt;?<tt>php // Flush the buffered output.<br>
</tt><tt>ob_end_flush();<br>
</tt>?&gt;<tt>
</tt>
</dpeccode>
	
</dpecw1><br><br>
<a name="phd015"></a>
<br><dpecw1>
	
In this lesson, you learned that the home page is created when an <tt>index.php</tt> file is created in a text editor and uploaded to a Web server. You now know how to write an <tt>index.php</tt> file to create a home page.<br>
You also learned that the home page acts as a model for the other pages 
on the public side and it requires the configuration file for error 
management, as well as the header and footer files.
	
</dpecw1><br>
<a name="phe001"></a><br><a name="topic8"></a><h2>Lesson 5. Registration</h2><dpecw1>

The registration script sends an email to a user who has completed a successful registration.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Create a registration script
	</li>
</ul>

</dpecw1><br>
<a name="phe002"></a>
<br><dpecw1>

The following version of <tt>register.php</tt> will do the following:<br>
<ul>
	<li>
Both display and handle the form
	</li>
	<li>
Validate the submitted data using regular expressions
	</li>
	<li>
Redisplay the form with the values remembered if a problem occurs (the form will be sticky)
	</li>
	<li>
Process the submitted data using the <tt>escape_data()</tt> function from the <tt>mysql_connect.php</tt> script
	</li>
	<li>
Ensure a unique email address
	</li>
	<li>
Send an email containing an activation link
	</li>
</ul>

</dpecw1><br>
<a name="phe003"></a>
<br><dpecjs><b>*  Writing <tt></tt></b><tt>
<br>register.php</tt>
Let's examine the steps required to write <tt>register.php</tt>.<br>
<b>* Step 1</b><br>
Create a new document in your text editor.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>&lt;?php # register.php</tt><br>
<tt>// This is the registration page for the site.</tt>
</dpeccode><br>
<a name="phe004"></a>
<br><dpecjs><b>*  Step 2</b>
<br>
Include the configuration file and the HTML header.&nbsp; 
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # register.php</tt><br>
<tt>// This is the registration page for the site.</tt><br>
<tt>// Include the configuration file for error management and such.</tt><br>
<tt>require_once ('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title </tt>=<tt> 'Register';</tt><br>
<tt>include ('./includes/header.html');</tt>
</dpeccode><br>
<a name="phe005"></a>
<br><dpecjs><b>*  Step 3</b>
<br>
Create the conditional that checks for the form submission and then include the database connection script. Make sure that your <tt>mysql_connect.php</tt> page defines the <tt>escape_data()</tt> function and selects the right database (<tt>sitename</tt>). <ml_ins_href><ml_data_href>&nbsp; 
<br>
</ml_data_href></ml_ins_href></dpecjs><br><dpeccode>
&lt;?<tt>php # register.php</tt><br>
<tt>// This is the registration page for the site.</tt><br>
<tt>// Include the configuration file for error management and such.</tt><br>
<tt>require_once ('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title </tt>=<tt> 'Register';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>if (isset($_POST['submitted'])) {// Handle the form.</tt><br>
<tt>&nbsp;&nbsp; require_once ('./mysql_connect.php');</tt><br>
<tt>&nbsp;&nbsp; // Connect to the database.</tt>
</dpeccode><br>
<br><a name="phe005a"></a>
<br><dpecw1>
	
<dpeccode>
&lt;?<tt>php # mysql_connect.php</tt><br>
<tt>// This file contains the database access information.</tt><br>
<tt>// This file also establishes a connection to MySQL and selects the database.</tt><br>
<tt>// Set the database access information as constants.</tt><br>
<tt>DEFINE ('DB_USER', 'username');</tt><br>
<tt>DEFINE ('DB_PASSWORD', 'password');</tt><br>
<tt>DEFINE ('DB_HOST', 'localhost');</tt><br>
<tt>DEFINE ('DB_NAME', 'sitename');</tt><br>
<tt>if ($dbc = mysql_connect (DB_HOST, DB_USER, DB_PASSWORD)) { // Make the connnection.</tt><br>
<tt>&nbsp;&nbsp; if (!mysql_select_db (DB_NAME)) { // If it can't select the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Handle the error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;trigger_error("Could not select the database!\n<br>MySQL Error:" . mysql_error());</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Print a message to the user, include the footer, and kill the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit();</tt><br>
<tt>&nbsp;&nbsp; } // End of mysql_select_db IF.</tt><br>
<tt>} else { // If it couldn't connect to MySQL.</tt><br>
<tt>&nbsp;&nbsp; // Print a message to the user, include the footer, and kill the script.</tt><br>
<tt>&nbsp;&nbsp; trigger_error("Could not connect to MySQL!\n<br>MySQL Error: " . mysql_error());</tt><br>
<tt>&nbsp;&nbsp; include ('./includes/footer.html');</tt><br>
<tt>&nbsp;&nbsp; exit();</tt><br>
<tt>} // End of $dbc IF.</tt><br>
<tt>// Create a function for escaping the data.</tt><br>
<tt>function escape_data ($data) {</tt><br>
<tt>&nbsp;&nbsp; // Address Magic Quotes.</tt><br>
<tt>&nbsp;&nbsp; if (ini_get('magic_quotes_gpc')) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data = stripslashes($data);</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Check for mysql_real_escape_string()support.</tt><br>
<tt>&nbsp;&nbsp; if (function_exists('mysql_real_escape_string')) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;global $dbc; // Need the connection.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data = mysql_real_escape_string(trim($data), $dbc);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data = mysql_escape_string(trim($data));</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Return the escaped value.</tt><br>
<tt>&nbsp;&nbsp; return $data;</tt><br>
<tt>} // End of function.</tt><br>
?&gt;
</dpeccode>
	
</dpecw1><br><br>
<a name="phe006"></a>
<br><dpecjs><b>*  Step 4</b>
<br>
Validate the first and last names. The form will be validated using 
regular expressions. For the first name value, the assumption is that it
 will contain only letters, a period (as in an initial), an apostrophe, a
 space, and the dash. Further, I expect the value to be within the range
 of 2 to 15 characters long.&nbsp; 
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # register.php</tt><br>
<tt>// This is the registration page for the site.</tt><br>
<tt>// Include the configuration file for error management and such.</tt><br>
<tt>require_once ('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title </tt>=<tt> 'Register';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>if (isset($_POST['submitted'])) {// Handle the form.</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>require_once ('./mysql_connect.php');</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>// Connect to the database.</tt><br>
<tt>&nbsp;&nbsp; // Check for a first name.</tt><br>
<tt>&nbsp;&nbsp; if (eregi ('^[[:alpha:]\.\' \-]</tt><br>
<tt>&nbsp;&nbsp; {2,15}$', stripslashes(trim($_POST</tt><br>
<tt>&nbsp;&nbsp; ['first_name'])))) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$fn = escape_data($_POST ['first_name']);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$fn = FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p&gt;</tt>&lt;<tt>font color="red" size="+1"&gt;Please</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;enter your first name!</tt>&lt;<tt>/font&gt;</tt>&lt;<tt>/p&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Check for a last name.</tt><br>
<tt>&nbsp;&nbsp; if (eregi ('^[[:alpha:]\.\' \-]{2,30}$', stripslashes</tt><br>
<tt>&nbsp;&nbsp; (trim($_POST ['last_name'])))) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ln = escape_data($_POST ['last_name']);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ln = FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p&gt;</tt>&lt;<tt>font color="red" size="+1"&gt;Please</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;enter your last name!</tt> &lt;<tt>/font&gt;</tt>&lt;<tt>/p&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br>
<a name="phe007"></a>
<br><dpecjs> If this condition is met, the <tt>$fn</tt> variable is assigned the value of the <tt>escape_data()</tt> version of the submitted value; otherwise, <tt>$fn</tt>
 will be false and an error message is printed.
The same process is used to validate the last name, although that 
regular expression allows for a longer length. Using regular expressions
 to validate all of the form data may be overkill, but I wanted to 
demonstrate more sample regular expression patterns.&nbsp; 
<br>

<a name="phe008"></a>
<br><dpecjs><b>*  Step 5</b>
<br>
Validate the email address.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp; // Check for a first name.</tt><br>
<tt>&nbsp;&nbsp; if (eregi ('^[[:alpha:]\.\' \-]</tt><br>
<tt>&nbsp;&nbsp; {2,15}$', stripslashes(trim($_POST</tt><br>
<tt>&nbsp;&nbsp; ['first_name'])))) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$fn = escape_data($_POST ['first_name']);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$fn = FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p&gt;</tt>&lt;<tt>font color="red" size="+1"&gt;Please</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;enter your first name!</tt>&lt;<tt>/font&gt;</tt>&lt;<tt>/p&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Check for a last name.</tt><br>
<tt>&nbsp;&nbsp; if (eregi ('^[[:alpha:]\.\' \-]{2,30}$', stripslashes</tt><br>
<tt>&nbsp;&nbsp; (trim($_POST ['last_name'])))) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ln = escape_data($_POST ['last_name']);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ln = FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p&gt;</tt>&lt;<tt>font color="red" size="+1"&gt;Please</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;enter your last name!</tt> &lt;<tt>/font&gt;</tt>&lt;<tt>/p&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Check for an email address.</tt><br>
<tt>&nbsp;&nbsp; if (eregi ('^[[:alnum:]][a-z0-9_\.\-]</tt><br>
<tt>&nbsp;&nbsp; *@[a-z0-9\.\-]+\.[a-z]{2,4}$', </tt><br>
<tt>&nbsp;&nbsp; stripslashes(trim($_POST ['email'])))) { </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$e </tt>=<tt> escape_data($_POST['email']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } else {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$e </tt>=<tt> FALSE;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color="red"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size="+1"</tt>&gt;<tt>Please enter a valid</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;email address!</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt>
</dpeccode><br>
<a name="phe009"></a>
<br><dpecjs> In all of the validation routines, I make sure to validate a
 trimmed version of the variable, with the slashes stripped to avoid 
problems with Magic Quotes. <dpec2c>Click Register.</dpec2c>&nbsp; 
<br>

<a name="phe010"></a>
<br><dpecjs><b>*  Step 6</b>
<br>
Validate the passwords.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp; //Check for a last name.</tt><br>
<tt>&nbsp;&nbsp; if (eregi ('^[[:alpha:]\.\' \-]{2,30}$', stripslashes</tt><br>
<tt>&nbsp;&nbsp; (trim($_POST ['last_name'])))) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ln = escape_data($_POST ['last_name']);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ln = FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p&gt;</tt>&lt;<tt>font color="red" size="+1"&gt;Please</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;enter your last name!</tt> &lt;<tt>/font&gt;</tt>&lt;<tt>/p&gt;';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Check for an email address.</tt><br>
<tt>&nbsp;&nbsp; if (eregi ('^[[:alnum:]][a-z0-9_\.\-]</tt><br>
<tt>&nbsp;&nbsp; *@[a-z0-9\.\-]+\.[a-z]{2,4}$', </tt><br>
<tt>&nbsp;&nbsp; stripslashes(trim($_POST ['email'])))) { </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$e </tt>=<tt> escape_data($_POST['email']);&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } else {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$e </tt>=<tt> FALSE;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color="red"</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size="+1"</tt>&gt;<tt>Please enter a valid</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;email address!</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Check for a password and match against the confirmed password.</tt><br>
<tt>&nbsp;&nbsp; if (eregi ('^[[:alnum:]]{4,20}$',</tt><br>
<tt>&nbsp;&nbsp; stripslashes(trim($_POST ['password1'])))) { </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($_POST['password1'] </tt>=<tt> $_POST</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;['password2']) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p </tt>=<tt> escape_data($_POST ['password1']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p </tt>=<tt> FALSE;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color="red" size</tt>=<tt>"+1"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your password did not match the confirmed</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;password! </tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } else {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p </tt>=<tt> FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red" size="+1"</tt>&gt;<tt>P</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;please enter a valid password!</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; } </tt><br>
</dpeccode><br>
<a name="phe011"></a>
<br><dpecjs> The password must be between 4 and 20 characters long and contain only letters and numbers. <dpec2c>Click Forgot Password.</dpec2c>&nbsp; 
<br>

<a name="phe012"></a>
<br><dpecjs> Furthermore, the first password (<i><tt>password1</tt></i>) must match the confirmed password (<i><tt>password2</tt></i>).&nbsp; 
<br>

<a name="phe013"></a>
<br><dpecjs><b>*  Step 7</b>
<br>
If every test was passed, check for a unique email address.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp; // Check for a password and match against the confirmed password.</tt><br>
<tt>&nbsp;&nbsp; if (eregi ('^[[:alnum:]]{4,20}$',</tt><br>
<tt>&nbsp;&nbsp; stripslashes(trim($_POST ['password1'])))) { </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($_POST['password1'] </tt>=<tt> $_POST</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;['password2']) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p </tt>=<tt> escape_data($_POST ['password1']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p </tt>=<tt> FALSE;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color="red" size</tt>=<tt>"+1"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your password did not match the confirmed</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;password! </tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } else {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p </tt>=<tt> FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red" size="+1"</tt>&gt;<tt>P</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;please enter a valid password!</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; } </tt><br>
<tt>&nbsp;&nbsp; if ($fn </tt>&amp;&amp;<tt> $ln </tt>&amp;&amp;<tt> $e </tt>&amp;&amp;<tt> $p) { If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Make sure the email address is available.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query </tt>=<tt> "SELECT user_id FROM users WHERE email</tt>=<tt>'$e'";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result </tt>=<tt> mysql_query ($query) or trigger_error</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("Query: $query\n</tt>&lt;<tt>br /</tt>&gt;<tt>MySQL Error: " .mysql_error());</tt><br>
</dpeccode><br>
<a name="phe014"></a>
<br><dpecjs> If the form passed every test, this conditional will be <tt>TRUE</tt>.
 Then I must search the database to see if the submitted email address 
is currently being used, since that column's value must be unique across
 each record.
As with the MySQL connection script, if a query doesn't run, I'll call 
the <tt>trigger_error()</tt> function to invoke my self-defined error 
reporting function. The specific error message will include both the 
query being run and the MySQL error, so that the problem can easily be 
debugged.&nbsp; 
<br>

<a name="phe015"></a>
<br><dpecjs><b>*  Step 8</b>
<br>
If the email address is unused, register the user. The query itself is 
rather simple, but it does require the creation of an activation code. 
The MySQL <tt>SHA()</tt> function is used to encrypt the password.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp; // Check for a password and match against the confirmed password.</tt><br>
<tt>&nbsp;&nbsp; if (eregi ('^[[:alnum:]]{4,20}$',</tt><br>
<tt>&nbsp;&nbsp; stripslashes(trim($_POST ['password1'])))) { </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($_POST['password1'] </tt>=<tt> $_POST</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;['password2']) {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p </tt>=<tt> escape_data($_POST ['password1']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p </tt>=<tt> FALSE;&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color="red" size</tt>=<tt>"+1"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Your password did not match the confirmed</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; password! </tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp; } else {&nbsp;&nbsp; </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p </tt>=<tt> FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red" size="+1"</tt>&gt;<tt>P</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;please enter a valid password!</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; } </tt><br>
<tt>&nbsp;&nbsp; if ($fn </tt>&amp;&amp;<tt> $ln </tt>&amp;&amp;<tt> $e </tt>&amp;&amp;<tt> $p) { If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Make sure the email address is available.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query </tt>=<tt> "SELECT user_id FROM users WHERE email</tt>=<tt>'$e'";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result </tt>=<tt> mysql_query ($query) or trigger_error</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("Query: $query\n</tt>&lt;<tt>br /</tt>&gt;<tt>MySQL Error: " .mysql_error());</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mysql_num_rows($result) </tt>==<tt> 0) { Available.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Create the activation code.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$a </tt>=<tt> md5(uniqid(rand(), true));</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the user.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query </tt>=<tt> "INSERT INTO users(email, pass, first_name,</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;last_name, active, registration_date) VALUES</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;('$e', SHA('$p'),'$fn', '$ln', '$a', NOW() )";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result </tt>=<tt> mysql_query ($query) or trigger_error</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("Query: $query\n</tt>&lt;<tt>br /</tt>&gt;<tt>MySQL Error: " .mysql_error());</tt><br>
</dpeccode><br>
<a name="phe016"></a>
<br><dpecjs><b>*  Step 9</b>
<br>
Send an email or print an error message, reflecting the success of the 
registration. With this registration process, the important thing is 
that the confirmation mail gets sent to the user, because he will not be
 able to log in until after he has activated his account. This email 
should contain a link to the activation page, <tt>activate.php</tt> (you'll need to change the domain name so that it's accurate).&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp; if (mysql_num_rows($result) </tt>==<tt> 0) { // Available.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Create the activation code.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$a </tt>=<tt> md5(uniqid(rand(), true));</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the user.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query </tt>=<tt> </tt>"<tt>INSERT INTO users(email, pass, first_name,</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;last_name, active, registration_date) VALUES</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(</tt>'<tt>$e</tt>'<tt>, SHA(</tt>'<tt>$p</tt>'<tt>),</tt>'<tt>$fn</tt>'<tt>, </tt>'<tt>$ln</tt>'<tt>, </tt>'<tt>$a</tt>'<tt>, NOW() )</tt>"<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result </tt>=<tt> mysql_query ($query) or trigger_error</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(</tt>"<tt>Query: $query\n</tt>&lt;<tt>br /</tt>&gt;<tt>MySQL Error: </tt>"<tt> .mysql_error());</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mysql_affected_rows() </tt>==<tt> 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If it ran OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Send the email.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $body </tt>=<tt> </tt>"<tt>Thank you for registering at the</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; User Registration site. To activate your account,</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; please click on this link:\n\n</tt>"<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $body .</tt>=<tt> </tt>"http://<tt>www.whateveraddressyouwanthere.com/</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; activate.php</tt>?<tt>x</tt>="<tt> . mysql_insert_id() . </tt>"&amp;<tt>y</tt>=<tt>$a</tt>"<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mail($_POST[</tt>'<tt>email</tt>'<tt>],</tt>'<tt>Registration Confirmation</tt>'<tt>,$body);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Finish the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo </tt>'&lt;<tt>h3</tt>&gt;<tt>Thank you for registering! A confirmation email has</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; been sent to your address. Please click on the link in that</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; email in order to activate your account.</tt>&lt;<tt>/h3</tt>&gt;'<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; include (</tt>'<tt>./includes/footer.html</tt>'<tt>); // Include the HTML footer.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exit();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { // If it did not run OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo </tt>'&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>="<tt>red</tt>"<tt> size</tt>="<tt>+1</tt>"&gt;<tt>You could not be</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; registered due to a system error. We apologize for any</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; inconvenience.</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;'<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
</dpeccode><br>
<a name="phe017"></a>
<br><dpecjs> The link also passes two values along in the URL. The first, generically called <i><tt>x</tt></i>, will be the user's ID from the database. The second, <i><tt>y</tt></i>, is the activation code. The URL, then, will be something like <tt>http://www</tt><i><tt>.domainname.</tt></i><tt>com/activate.php?x=22&amp;y=901e09ef25bf6e3ef95c93088450b008</tt>.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp; if (mysql_num_rows($result) </tt>==<tt> 0) { // Available.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Create the activation code.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$a </tt>=<tt> md5(uniqid(rand(), true));</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the user.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query </tt>=<tt> </tt>"<tt>INSERT INTO users(email, pass, first_name,</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;last_name, active, registration_date) VALUES</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(</tt>'<tt>$e</tt>'<tt>, SHA(</tt>'<tt>$p</tt>'<tt>),</tt>'<tt>$fn</tt>'<tt>, </tt>'<tt>$ln</tt>'<tt>, </tt>'<tt>$a</tt>'<tt>, NOW() )</tt>"<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result </tt>=<tt> mysql_query ($query) or trigger_error</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(</tt>"<tt>Query: $query\n</tt>&lt;<tt>br /</tt>&gt;<tt>MySQL Error: </tt>"<tt> .mysql_error());</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mysql_affected_rows() </tt>==<tt> 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If it ran OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Send the email.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $body </tt>=<tt> </tt>"<tt>Thank you for registering at the</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; User Registration site. To activate your account,</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; please click on this link:\n\n</tt>"<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $body .</tt>=<tt> </tt>"http://<tt>www.whateveraddressyouwanthere.com/</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; activate.php?x</tt>="<tt> . mysql_insert_id() . </tt>"&amp;<tt>y</tt>=<tt>$a</tt>"<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mail($_POST[</tt>'<tt>email</tt>'<tt>],</tt>'<tt>Registration Confirmation</tt>'<tt>,$body);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Finish the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo </tt>'&lt;<tt>h3</tt>&gt;<tt>Thank you for registering! A confirmation email has</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; been sent to your address. Please click on the link in that</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; email in order to activate your account.</tt>&lt;<tt>/h3</tt>&gt;'<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include (</tt>'<tt>./includes/footer.html</tt>'<tt>); // Include the HTML footer.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exit();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { // If it did not run OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo </tt>'&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>="<tt>red</tt>"<tt> size</tt>="<tt>+1</tt>"&gt;<tt>You could not be</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; registered due to a system error. We apologize for any</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; inconvenience.</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;'<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
</dpeccode><br>
<a name="phe018"></a>
<br><dpecjs> A thank-you message is printed out upon successful 
registration, along with the activation instructions. If the query 
failed for some reason, an error message is printed to the browser 
(although the live version of the site should never have a problem at 
this juncture).&nbsp; 
<br>

<a name="phe019"></a>
<br><dpecjs><b>*  Step 10</b>
<br>
Complete the conditionals and the PHP code.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { // If it did not run OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color="red" size="+1"</tt>&gt;<tt>You could not be</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; registered due to a system error. We apologize for any</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; inconvenience.</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { // The email address is not available.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red" size</tt>=<tt>"+1"</tt>&gt;<tt>That email</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;address has already been registered. If you have</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forgotten your password, use the link to have your</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;password sent to you.</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp; } else { // If one of the data tests failed.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red" size</tt>=<tt>"+1"</tt>&gt;<tt>Please try again.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; mysql_close(); // Close the database connection.</tt><br>
<tt>} // End of the main Submit conditional.</tt><br>
?&gt;<tt> </tt><br>
</dpeccode><br>
<a name="phe020"></a>
<br><dpecjs> The first <tt>else</tt> is executed if a person attempts to register with an email address that has already been used. The second <tt>else</tt> applies when the submitted data fails one of the validation routines.&nbsp; 
<br>

<a name="phe021"></a>
<br><dpecjs><b>*  Step 11</b>
<br>
Display the HTML form.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp; } else { // If one of the data tests failed.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red" size</tt>=<tt>"+1"</tt>&gt;<tt>Please try again.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; mysql_close(); // Close the database connection.</tt><br>
<tt>} // End of the main Submit conditional.</tt><br>
?&gt;<tt> </tt><br>
&lt;<tt>h1</tt>&gt;<tt>Register</tt>&lt;<tt>/h1</tt>&gt;<br>
&lt;<tt>form action="register.php" method="post"</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>fieldset</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>First Name:</tt>&lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>=<tt>"text" name</tt>=<tt>"first_name"</tt><br>
<tt>&nbsp;&nbsp; size</tt>=<tt>"15" maxlength</tt>=<tt>"15" value</tt>=<tt>"</tt>&lt;?<tt>php</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['first_name'])) echo $_POST['first_name'];</tt><br>
<tt>&nbsp;&nbsp; </tt>?&gt;<tt>" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Last Name:</tt>&lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>=<tt>"text" name</tt>=<tt>"last_name"</tt><br>
<tt>&nbsp;&nbsp; size</tt>=<tt>"30" maxlength</tt>=<tt>"30" value</tt>=<tt>"</tt>&lt;?<tt>php</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['last_name'])) echo $_POST['last_name'];</tt><br>
<tt>&nbsp;&nbsp; </tt>?&gt;<tt>" /</tt>&gt;&lt;<tt>/p</tt>&gt;
<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Email Address:</tt>&lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>=<tt>"text" name</tt>=<tt>"email"</tt><br>
<tt>&nbsp;&nbsp; size</tt>=<tt>"40" maxlength</tt>=<tt>"40" value</tt>=<tt>"</tt>&lt;?<tt>php</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['email'])) echo $_POST['email'];</tt><br>
<tt>&nbsp;&nbsp; </tt>?&gt;<tt>" /</tt>&gt;<tt> </tt>&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Password:</tt> &lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>=<tt>"password" name</tt>=<tt>"password1"</tt><br>
<tt>&nbsp;&nbsp; size</tt>=<tt>"20" maxlength</tt>=<tt>"20" /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>small</tt>&gt;<tt>Use only letters and numbers. Must be between 4 and</tt><br>
<tt>&nbsp;&nbsp; 20 characters long.</tt> &lt;<tt>/small&gt;</tt>&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p&gt;</tt>&lt;<tt>b&gt;Confirm Password:</tt> &lt;<tt>/b</tt>&gt;&lt;<tt>input type</tt>=<tt>"password"</tt><br>
<tt>&nbsp;&nbsp; name</tt>=<tt>"password2" size="20"maxlength="20" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/fieldset</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>div align</tt>=<tt>"center"</tt> &gt; &lt;<tt>input type</tt>=<tt>"submit" name="submit" value</tt>=<br>
<tt>&nbsp;&nbsp; "Register" /</tt>&gt;&lt;<tt>/div</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>input type</tt>=<tt>"hidden" name</tt>=<tt>"submitted" value</tt>=<tt>"TRUE" /</tt>&gt;<br>
&lt;<tt>/form</tt>&gt;<br>
</dpeccode><br>
<a name="phe022"></a>
<br><dpecjs> The registration form is blank when the user first arrives.&nbsp; 
<br>

<a name="phe023"></a>
<br><dpecjs><b>*  Step 12</b>
<br>
Include the HTML footer.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Last Name:</tt>&lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>=<tt>"text" name</tt>=<tt>"last_name"</tt><br>
<tt>&nbsp;&nbsp; size</tt>=<tt>"30" maxlength</tt>=<tt>"30" value</tt>=<tt>"</tt>&lt;?<tt>php</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['last_name'])) echo $_POST['last_name'];</tt><br>
<tt>&nbsp;&nbsp; </tt>?&gt;<tt>" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Email Address:</tt>&lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>=<tt>"text" name</tt>=<tt>"email"</tt><br>
<tt>&nbsp;&nbsp; size</tt>=<tt>"40" maxlength</tt>=<tt>"40" value</tt>=<tt>"</tt>&lt;?<tt>php</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['email'])) echo $_POST['email'];</tt><br>
<tt>&nbsp;&nbsp; </tt>?&gt;<tt>" /</tt>&gt;<tt> </tt>&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Password:</tt> &lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>=<tt>"password" name</tt>=<tt>"password1"</tt><br>
<tt>&nbsp;&nbsp; size</tt>=<tt>"20" maxlength</tt>=<tt>"20" /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>small</tt>&gt;<tt>Use only letters and numbers. Must be between 4 and</tt><br>
<tt>&nbsp;&nbsp; 20 characters long.</tt> &lt;<tt>/small&gt;</tt>&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p&gt;</tt>&lt;<tt>b&gt;Confirm Password:</tt> &lt;<tt>/b</tt>&gt;&lt;<tt>input type</tt>=<tt>"password"</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>name</tt>=<tt>"password2" size="20"maxlength="20" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/fieldset</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>div align</tt>=<tt>"center"</tt> &gt; &lt;<tt>input type</tt>=<tt>"submit" name="submit" value</tt>=<br>
<tt>&nbsp;&nbsp; "Register" /</tt>&gt;&lt;<tt>/div</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>input type</tt>=<tt>"hidden" name</tt>=<tt>"submitted" value</tt>=<tt>"TRUE" /</tt>&gt;<br>
&lt;<tt>/form</tt>&gt;<br>
<br>
&lt;?<tt>php</tt><br>
<tt>include ('./includes/footer.html');</tt><br>
?&gt;
</dpeccode><br>
<a name="phe024"></a>
<br><dpecjs><b>*  Step 13</b>
<br>
Save the file as <tt>register.php</tt>, upload to your Web server, and test in your Web browser. <dpec2c>Click the Register button.</dpec2c>&nbsp; 
<br>

<a name="phe025"></a>
<br><b>Filling out input  <br>  </b>  Because every column in the <tt><tt>users</tt></tt><i> </i>table cannot be <tt><tt></tt>NULL<tt></tt></tt>
 (except for the active column), I require that each input be correctly 
filled out. If a table had an optional field, you should still confirm 
that it is of the right type if submitted, but not require it.  <br><br>  <b>Form inputs and regular expressions  <br>  </b>
  Except for encrypted fields (such as the password), the maximum length
 of the form inputs and regular expressions should correspond to the 
maximum length of the column in the database.  <br><br>  <b>Magic Quotes  <br>  </b>  If Magic Quotes GPC (<tt><tt>GET</tt></tt>, <tt><tt>POST</tt></tt>, <tt><tt>COOKIE</tt></tt>) is turned on, the sticky part of the form should strip the slashes from the values before printing them. For example:  <tt><tt></tt>&lt;?php if (isset($_POST['first_ name'])) echo stripslashes($_ POST['first_name']); ?&gt;</tt>  <br><br>  
<a name="phe026"></a>
<br><dpecjs>The registration script uses regular expressions for security and a sticky form for user convenience.
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # register.php</tt><br>
<tt>// This is the registration page for the site.</tt><br>
<tt>// Include the configuration file for error management and such.</tt><br>
<tt>require_once (</tt>'<tt>./includes/config.inc.php</tt>'<tt>);</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title </tt>=<tt> </tt>'<tt>Register</tt>'<tt>;</tt><br>
<tt>include (</tt>'<tt>./includes/header.html</tt>'<tt>);</tt><br>
<tt>if (isset($_POST[</tt>'<tt>submitted</tt>'<tt>])) { // Handle the form.</tt><br>
<tt>&nbsp;&nbsp; require_once (</tt>'<tt>./mysql_connect.php</tt>'<tt>);</tt><br>
<tt>&nbsp;&nbsp; // Connect to the database.</tt><br>
<tt>&nbsp;&nbsp; // Check for a first name.</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>if (eregi (</tt>'<tt>^[[:alpha:]\.\</tt>'<tt> \-]{2,15}$</tt>'<tt>, stripslashes(trim($_POST [</tt>'<tt>first_name</tt>'<tt>])))) {</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>&nbsp;&nbsp; $fn </tt>=<tt> escape_data($_POST[</tt>'<tt>first_name</tt>'<tt>]);</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>} else {</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>&nbsp;&nbsp; $fn </tt>=<tt> FALSE;</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>&nbsp;&nbsp; echo </tt>'&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>="<tt>red</tt>"<tt> size</tt>="<tt>+1</tt>"&gt;<tt>Please enter your first name!</tt>&lt;<tt>/font&gt;</tt>&lt;<tt>/p</tt>&gt;'<tt>;</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>}</tt><br>
<tt>&nbsp;&nbsp; // Check for a last name.</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>if (eregi (</tt>'<tt>^[[:alpha:]\.\</tt>'<tt> \-]{2,30}$</tt>'<tt>, stripslashes(trim($_POST [</tt>'<tt>last_name</tt>'<tt>])))) {</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>&nbsp;&nbsp; $ln </tt>=<tt> escape_data($_POST[</tt>'<tt>last_name</tt>'<tt>]);</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>} else {</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>&nbsp;&nbsp; $ln </tt>=<tt> FALSE;</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>&nbsp;&nbsp; echo </tt>'&lt;<tt>p&gt;</tt>&lt;<tt>font color</tt>="<tt>red</tt>"<tt> size</tt>="<tt>+1</tt>"&gt;<tt>Please enter your last name!</tt> &lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>}</tt><br>
<tt>&nbsp;&nbsp; // Check for an email address.</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>if (eregi (</tt>'<tt>^[[:alnum:]][a-z0-9_\.\-]*@[a-z0-9\.\-]+\.[a-z]{2,4}$</tt>'<tt>, stripslashes(trim($_POST[</tt>'<tt>email</tt>'<tt>])))) {</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>&nbsp;&nbsp; $e </tt>=<tt> escape_data($_POST[</tt>'<tt>email</tt>'<tt>]);</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>} else {</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>&nbsp;&nbsp; $e </tt>=<tt> FALSE;</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>&nbsp;&nbsp; echo </tt>'&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>="<tt>red</tt>"<tt> size</tt>="<tt>+1</tt>"&gt;<tt>Please enter a valid email address!</tt> &lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;'<tt>;</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>}</tt><br>
<tt>&nbsp;&nbsp; // Check for a password and match against the confirmed password.</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>if (eregi (</tt>'<tt>^[[:alnum:]]{4,20}$</tt>'<tt>, stripslashes(trim($_POST[</tt>'<tt>password1</tt>'<tt>])))) {</tt><br>
<tt>&nbsp;&nbsp; </tt><tt>&nbsp;&nbsp; </tt><tt>if ($_POST[</tt>'<tt>password1</tt>'<tt>] </tt>==<tt> $_POST[</tt>'<tt>password2</tt>'<tt>]) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p </tt>=<tt> escape_data($_POST[</tt>'<tt>password1</tt>'<tt>]);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p </tt>=<tt> FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo </tt>'&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>="<tt>red</tt>"<tt> size</tt>="<tt>+1</tt>"&gt;<tt>Your password did not match the confirmed password! </tt>&lt;<tt>/font&gt;</tt>&lt;<tt>/p</tt>&gt;'<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p </tt>=<tt> FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo </tt>'&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>="<tt>red</tt>"<tt> size</tt>="<tt>+1</tt>"&gt;<tt>Please enter a valid password! </tt>&lt;<tt>/font&gt;</tt>&lt;<tt>/p</tt>&gt;'<tt>;</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; if ($fn </tt>&amp;&amp;<tt> $ln </tt>&amp;&amp;<tt> $e </tt>&amp;&amp;<tt> $p) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Make sure the email address is available.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><tt>$query </tt>=<tt> </tt>"<tt>SELECT user_id FROM users WHERE email</tt>='<tt>$e</tt>'"<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result </tt>=<tt> mysql_query ($query) or trigger_error(</tt>"<tt>Query: </tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query\n</tt>&lt;<tt>br/</tt>&gt;<tt>MySQL Error: </tt>"<tt> . mysql_error());</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mysql_num_rows($result) </tt>==<tt> 0) { // Available.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Create the activation code.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><tt>$a </tt>=<tt> md5(uniqid(rand(), true));</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the user.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><tt>$query </tt>=<tt> </tt>"<tt>INSERT</tt><tt> INTO users (email, pass,</tt><tt> </tt><tt>first_name, last_name, active, registration_date)</tt><tt> </tt><tt>VALUES (</tt>'<tt>$e</tt>'<tt>, SHA(</tt>'<tt>$p</tt>'<tt>), </tt>'<tt>$fn</tt>'<tt>, </tt>'<tt>$ln</tt>'<tt>,</tt>'<tt>$a</tt>'<tt>, NOW() )</tt>"<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result </tt>=<tt> mysql_query ($query) or trigger_error(</tt>"<tt>Query: $query\n</tt>&lt;<tt>br/</tt>&gt;<tt>MySQL Error: </tt>"<tt> . mysql_error());</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (mysql_affected_rows()</tt>==<tt> 1) {// If it ran OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Send the email.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$body </tt>=<tt> </tt>"<tt>Thank you for registering at the User Registration site. To activate your account, please click on this link:\n\n</tt>"<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$body .</tt> =<tt> </tt>"http://<tt>www.whateveraddressyouwanthere.com/activate.php</tt>?<tt>x</tt>="<tt> . mysql_insert_id() . </tt>"&amp;<tt>y</tt>=<tt>$a</tt>"<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><tt>mail($_POST[</tt>'<tt>email</tt>'<tt>],</tt>'<tt>Registration Confirmation</tt>'<tt>,</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><tt>$body, 'From: admin@sitename.com');</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Finish the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo </tt>'&lt;<tt>h3</tt>&gt;<tt>Thank
 you for registering! A confirmation email has been sent to your 
address. Please click on the link in that email in order to activate 
your account.</tt>&lt;<tt>/h3</tt>&gt;'<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include (</tt>'<tt>./includes/footer. html</tt>'<tt>); // Include the HTML footer.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // If it did not run OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo </tt>'&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>="<tt>red</tt>"<tt> size</tt>="<tt>+1</tt>"&gt;<tt>You could not be registered due to a system error. We apologize for any inconvenience.</tt> &lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;'<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else { // The email address is not available.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo </tt>'&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>="<tt>red</tt>"<tt> size</tt>="<tt>+1</tt>"&gt;<tt>That
 email address has already been registered. If you have forgotten your 
password,use the link to have your password sent to you.</tt>&lt;<tt>/font&gt;</tt>&lt;<tt>/p</tt>&gt;'<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { // If one of the data tests failed.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo </tt>'&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>="<tt>red</tt>" <tt>size</tt>="<tt>+1</tt>"&gt;<tt>Please try again.</tt>&lt;<tt>/font</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </tt>&lt;<tt>/p</tt>&gt;'<tt>;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>} // End of the main Submit conditional.</tt><br>
?&gt;<br>
&lt;<tt>h1&gt;Register</tt>&lt;<tt>/h1</tt>&gt;<br>
&lt;<tt>form action</tt>="<tt>register.php</tt>"<tt> method</tt>="<tt>post</tt>"&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>fieldset</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>First Name:</tt> &lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>="<tt>text</tt>"<tt> name</tt>="<tt>first_name</tt>"<tt> size</tt>="<tt>15</tt>"<tt>maxlength</tt>="<tt>15</tt>"<tt> value</tt>="&lt;?<tt>php</tt><br>
<tt>if (isset($_POST[</tt>'<tt>first_name</tt>'<tt>])) echo $_POST[</tt>'<tt>first_name</tt>'<tt>]; </tt>?&gt;"<tt> /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p&gt;</tt>&lt;<tt>b&gt;Last Name:</tt> &lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>="<tt>text</tt>"<tt> name</tt>="<tt>last_name</tt>"<tt> size</tt>="<tt>30</tt>"<tt>maxlength</tt>="<tt>30</tt>"<tt> value</tt>="&lt;?<tt>php</tt><br>
<tt>if (isset($_POST[</tt>'<tt>last_name</tt>'<tt>])) echo $_POST[</tt>'<tt>last_name</tt>'<tt>]; </tt>?&gt;"<tt> /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Email Address:</tt>&lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>="<tt>text</tt>"<tt> name</tt>="<tt>email</tt>"<tt> size</tt>="<tt>40</tt>"<tt>maxlength</tt>="<tt>40</tt>"<tt> value</tt>="&lt;?<tt>php</tt><br>
<tt>if (isset($_POST[</tt>'<tt>email</tt>'<tt>])) echo $_POST[</tt>'<tt>email</tt>'<tt>]; </tt>?&gt;"<tt> /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Password:</tt>&lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>="<tt>password</tt>"<tt> name</tt>="<tt>password1</tt>"<br>
<tt>&nbsp;&nbsp; size</tt>="<tt>20</tt>"<tt>maxlength</tt>="<tt>20</tt>"<tt> /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>small</tt>&gt;<tt>Use only letters and numbers. Must be between 4 and 20 characters long.</tt>&lt;<tt>/small</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Confirm Password:</tt>&lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>="<tt>password</tt>"<tt> name</tt>="<tt>password2</tt>"<tt>size</tt>="<tt>20</tt>"<tt> maxlength</tt>="<tt>20</tt>"<tt> /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/fieldset</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>div align</tt>="<tt>center</tt>"<tt> </tt>&gt;&lt;<tt>input type</tt>="<tt>submit</tt>"<tt> name</tt>="<tt>submit</tt>"<tt> value</tt>="<tt>Register</tt>"<tt> /</tt>&gt;&lt;<tt>/div</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>input type</tt>="<tt>hidden</tt>"<tt> name</tt>="<tt>submitted</tt>"<tt> value</tt>="<tt>TRUE</tt>"<tt> /</tt>&gt;<br>
&lt;<tt>/form&gt;</tt><br>
&lt;?<tt>php // Include the HTML footer.</tt><br>
<tt>include (</tt>'<tt>./includes/footer.html</tt>'<tt>);</tt><br>
?&gt;<br>
</dpeccode><br>
<a name="phe029"></a>

<script language="JavaScript">insertAccQuestion('5','phe029.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phe030"></a>
<br><a name="topic9"></a><h2>Topic 5.1 Exercises</h2><br><b>* Exercise 1</b><dpecw1>

<br>
Try creating the <tt>register.php</tt> script.

</dpecw1><br><dpecw2>

<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Step</b>

</th><th class="heading" scope="col">
<b>Action</b>

	</th></tr>
	<tr valign="top">
<td>
1
</td>
<td>
Open a text editor and begin a new document.
</td>
	</tr>
	<tr valign="top">
<td>
2
</td>
<td>
Include a configuration file and a HTML header. <ml_ins_href><ml_data_href><br>
[<b>Note</b>: Make sure that <tt>config.inc.php</tt> and <tt>header.html </tt>are available in the appropriate directory on your Web server. <ml_ins_href><ml_data_href>]
</ml_data_href></ml_ins_href></ml_data_href></ml_ins_href></td>
	</tr>
	<tr valign="top">
<td>
3
</td>
<td>
Validate the form (last name, first name, email address, passwords).
</td>
	</tr>
	<tr valign="top">
<td>
4
</td>
<td>
Check for a unique email address.
</td>
	</tr>
	<tr valign="top">
<td>
5
</td>
<td>
Register the user's email address if it is unused.
</td>
	</tr>
	<tr valign="top">
<td>
6
</td>
<td>
Send an email or print an error message, reflecting the success of the registration.
</td>
	</tr>
	<tr valign="top">
<td>
7
</td>
<td>
Complete the conditionals and the PHP code.
</td>
	</tr>
	<tr valign="top">
<td>
8
</td>
<td>
Display the HTML form.
</td>
	</tr>
	<tr valign="top0">
<td>
9
</td>
<td>
Include the HTML footer. <ml_ins_href><ml_data_href>
</ml_data_href></ml_ins_href></td>
	</tr>
	<tr valign="top1">
<td>
10
</td>
<td>
Save the file as <tt>register.php</tt>, upload to your Web server, and test in your Web browser.
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw2><br>
<br><a name="phe030a"></a>
<br><dpecw1>
	
<dpeccode>
&lt;?<tt>php # config.inc.php</tt><br>
<tt>// This script determines how errors are handled.</tt><br>
<tt>// Flag variable for site status:</tt><br>
<tt>$live = FALSE;</tt><br>
<tt>// Error log email address:</tt><br>
<tt>$email = '</tt><i><tt>InsertRealAddressHere</tt></i><tt>';</tt><br>
<tt>// Create the error handler.</tt><br>
<tt>function my_error_handler ($e_number,$e_message, $e_file, $e_line, $e_vars) {</tt><br>
<tt>&nbsp;&nbsp; global $live, $email;</tt><br>
<tt>&nbsp;&nbsp; // Build the error message.</tt><br>
<tt>&nbsp;&nbsp; $message = "An error occurred in script '$e_file' on line $e_line: \n&lt;br /&gt;</tt><br>
<tt>&nbsp;&nbsp; $e_message\n&lt;br /&gt;";</tt><br>
<tt>&nbsp;&nbsp; // Add the date and time.</tt><br>
<tt>&nbsp;&nbsp; $message .= "Date/Time: " . date('n-j-Y H:i:s') . "\n&lt;br /&gt;";</tt><br>
<tt>&nbsp;&nbsp; // Append $e_vars to the $message.</tt><br>
<tt>&nbsp;&nbsp; $message .= "&lt;pre&gt;" . print_r ($e_vars,1) . "&lt;/pre&gt;\n&lt;br /&gt;";</tt><br>
<tt>&nbsp;&nbsp; if ($live) { // Don't show the specific error.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error_log ($message, 1, $email);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Send email.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Only print an error message if the error isn't a notice.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($e_number != E_NOTICE) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '</tt>&lt;<tt>div id="Error"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 A system error occurred. We apologize for the inconvenience.</tt>&lt;<tt>/div</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp; } else { // Development (print the error).</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>div id="Error"</tt>&gt;<tt>' . $message .'</tt>&lt;<tt>/div</tt>&gt;&lt;<tt>br /</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>} // End of my_error_handler() definition.</tt><br>
<tt>// Use my error handler.</tt><br>
<tt>set_error_handler ('my_error_handler');</tt><br>
?<tt>&gt;</tt>
</dpeccode>
	
</dpecw1><br><br>
<br><a name="phe030b"></a>
<br><dpecw1>
	
<dpeccode>
&lt;<tt>?php # header.html</tt><br>
<tt>// This page begins the HTML header for the site.</tt><br>
<tt>// Start output buffering.</tt><br>
<tt>ob_start();</tt><br>
<tt>// Initialize a session.</tt><br>
<tt>session_start();</tt><br>
<tt>// Check for a $page_title value.</tt><br>
<tt>if (!isset($page_title)) {</tt><br>
<tt>&nbsp;&nbsp; $page_title = 'User Registration System';</tt><br>
<tt>}</tt><br>
<tt>?</tt>&gt;<br>
&lt;<tt>!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"</tt><br>
<tt>&nbsp;&nbsp; "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</tt><br>
&lt;<tt>html xmlns=http://www.w3.org/1999/xhtmlxml:lang="en" lang="en"</tt>&gt;<br>
&lt;<tt>head</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>meta http-equiv=</tt>"<tt>content-type</tt>"<tt> content=</tt>"<tt>text/html; charset=iso-8859-1</tt>"<tt> /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>title</tt>&gt;&lt;<tt>?php echo $page_title; ?</tt>&gt;&lt;<tt>/title</tt>&gt;<br>
&lt;<tt>style type="text/css" media="screen"</tt>&gt;<br>
<tt>@import "./includes/layout.css";</tt>&lt;<tt>/style</tt>&gt;<br>
&lt;<tt>/head</tt>&gt;<br>
&lt;<tt>body</tt>&gt;<br>
&lt;<tt>div id="Header"</tt>&gt;<tt>User Registration</tt>&lt;<tt>/div</tt>&gt;<br>
&lt;<tt>div id="Content"</tt>&gt;<br>
&lt;<tt>!-End of Header --</tt>&gt;<br>
<tt> </tt>
</dpeccode>
	
</dpecw1><br><br>
<br><a name="phe030c"></a>
<br><dpecw1>
	
<dpeccode>
&lt;<tt>!-End of Content --</tt>&gt;<br>
&lt;<tt>/div</tt>&gt;<br>
&lt;<tt>div id="Menu"</tt>&gt;<br>
&lt;<tt>a href="index.php"</tt>&gt;<tt>Home</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;?<tt>php # footer.html</tt>&gt;<br>
<tt>// This page completes the HTML template.</tt><br>
<tt>// Display links based upon the login status.</tt><br>
<tt>// Show LOGIN links if this is the LOGOUT page.</tt><br>
<tt>if (isset($_SESSION[</tt>'<tt>user_id</tt>'<tt>]) AND</tt>
<tt>(substr($_SERVER[</tt>'<tt>PHP_SELF</tt>'<tt>], -10)</tt>
<tt>!</tt><tt>=</tt><tt> </tt>'<tt>logout.php</tt>'<tt>)) {</tt><br>
<tt>&nbsp;&nbsp; echo '</tt>&lt;<tt>a href</tt><tt>="</tt><tt>logout.php</tt><tt>"</tt>&gt;<tt>Logout</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>a href</tt><tt>="</tt><tt>change_password.php</tt><tt>"</tt>&gt;<tt>Change</tt>
<tt> </tt><tt>Password</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
<tt>';</tt><br>
<tt>} else { // Not logged in.</tt><br>
<tt>&nbsp;&nbsp; echo ' </tt>&lt;<tt>a href</tt><tt>="</tt><tt>register.php</tt><tt>"</tt>&gt;<br>
<tt>&nbsp;&nbsp; Register</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>a href</tt><tt>="</tt><tt>login.php</tt><tt>"</tt>&gt;<tt>Login</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>a href</tt><tt>="</tt><tt>forgot_password.php</tt><tt>"</tt>&gt;<tt>Forgot Password</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
<tt>';</tt><br>
<tt>}</tt><br>
?&gt;<br>
&lt;<tt>a href="#</tt><tt> </tt><tt>"</tt>&gt;<tt>Some Page</tt>&lt;<tt>/a</tt>&gt;<tt><br <="" tt="">&gt;<br>
&lt;<tt>a href="#</tt><tt> </tt><tt>"</tt>&gt;<tt>Another Page</tt>&lt;<tt>/a</tt>&gt;&lt;<tt>br /</tt>&gt;<br>
&lt;<tt>/div</tt>&gt;<br>
&lt;<tt>/body</tt>&gt;&lt;<tt>/html</tt>&gt;&lt;?<tt>php // Flush the buffered output.<br>
</tt><tt>ob_end_flush();<br>
</tt></tt>?&gt;
</dpeccode>
	
</dpecw1><br><br>
<a name="phe031"></a>
<br><dpecw1>
	
In this lesson, you learned that the registration script allows a user 
the ability to log into an account by sending an email that contains an 
activation link.<br>
You also learned that the activation link contained in the email passes 
two values along in it's URL. The first, generically called <i><tt>x</tt></i>, which is the user's ID from a database. The second, <i><tt>y</tt></i>, is the activation code itself.
	
</dpecw1><br>
<a name="phf001"></a><br><a name="topic10"></a><h2>Lesson 6. Activating an Account</h2><dpecw1>

When a user registers, an activation code will be associated with his 
account. This will also be sent as a link in a registration confirmation
 email.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Create an activation page
	</li>
</ul>

</dpecw1><br>
<a name="phf002"></a>
<br><dpecw1>

A user can click on a link in the registration email, which will take 
her to the site's activation page. The link will pass to the activation 
script the user's ID number and the activation code.<br>
If these two values match those in the database, the activation code 
will be removed from the record, indicating an active account. The login
 page, developed next, will allow only users who have activated their 
accounts to log in.

</dpecw1><br>
<a name="phf003"></a>
<br><dpecjs><b>*  Creating the Activation Page</b>
<br>
Let's examine the steps required to create the activation page.<br>
<b>* Step 1</b><br>
Begin a new PHP script in your text editor.&nbsp; 
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # activate.php</tt><br>
<tt>// This page activates the user's account.</tt><br>
<tt>// Include the configuration file for error management and such.</tt><br>
<tt>require_once('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title </tt>=<tt> 'Activate Your Account';</tt><br>
<tt>include ('./includes/header.html');</tt>
</dpeccode><br>
<a name="phf004"></a>
<br><dpecjs><b>*  Step 2</b>
<br>
Validate the values that should be received by the page. As I mentioned,
 if the user clicks the link in the registration confirmation email, 
he'll pass two values to this page: the user ID and the activation code.
 I first check for the presence of <i><tt>x</tt> </i>(the user's ID); if it is there, I type-cast it as an integer, just in case. For <i><tt>y</tt> </i>(the
 activation code), I just check for its existence. In either case, if 
the value is not present, then the variable is set to 0.&nbsp; 
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # activate.php</tt><br>
<tt>// This page activates the user's account.</tt><br>
<tt>// Include the configuration file for error management and such.</tt><br>
<tt>require_once('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title </tt>=<tt> 'Activate Your Account';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Validate $_GET['x'] and $_GET['y'].</tt><br>
<tt>if (isset($_GET['x'])) {</tt><br>
<tt>&nbsp;&nbsp; $x </tt>=<tt> (int) $_GET['x'];</tt><br>
<tt>} else {</tt><br>
<tt>&nbsp;&nbsp; $x </tt>=<tt> 0;</tt><br>
<tt>}</tt><br>
<tt>if (isset($_GET['y'])) {</tt><br>
<tt>&nbsp;&nbsp; $y </tt>=<tt> $_GET['y'];</tt><br>
<tt>} else {</tt><br>
<tt>&nbsp;&nbsp; $y </tt>=<tt> 0;</tt><br>
<tt>}</tt><br>
</dpeccode><br>
<a name="phf005"></a>
<br><dpecjs><b>*  Step 3</b>
<br>
If <tt>$x</tt> and <tt>$y</tt> have the correct values, activate the user. The conditional checks that <tt>$x</tt> is a positive integer and that <tt>$y</tt> is 32 characters long, which is the length of the string returned by the <tt>md5()</tt> function in <tt>register.php</tt>. If both conditions are <tt>TRUE</tt>, an <tt>UPDATE</tt> query is run. This query removes the activation code from the user's record by setting the active<i> </i>column to <tt>NULL</tt>.&nbsp; 
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # activate.php</tt><br>
<tt>// This page activates the user's account.</tt><br>
<tt>// Include the configuration file for error management and such.</tt><br>
<tt>require_once('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title </tt>=<tt> 'Activate Your Account';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// Validate $_GET['x'] and $_GET['y'].</tt><br>
<tt>if (isset($_GET['x'])) {</tt><br>
<tt>&nbsp;&nbsp; $x </tt>=<tt> (int) $_GET['x'];</tt><br>
<tt>} else {</tt><br>
<tt>&nbsp;&nbsp; $x </tt>=<tt> 0;</tt><br>
<tt>}</tt><br>
<tt>if (isset($_GET['y'])) {</tt><br>
<tt>&nbsp;&nbsp; $y </tt>=<tt> $_GET['y'];</tt><br>
<tt>} else {</tt><br>
<tt>&nbsp;&nbsp; $y </tt>=<tt> 0;</tt><br>
<tt>}</tt><br>
<tt>// If $x and $y aren't correct, redirect the user.</tt><br>
<tt>if ( ($x </tt>&gt;<tt> 0) &amp;&amp; (strlen($y) </tt>==<tt> 32)) {</tt><br>
<tt>&nbsp;&nbsp; require_once ('./mysql_connect.php'); // Connect to the database.</tt><br>
<tt>&nbsp;&nbsp; $query </tt>=<tt> "UPDATE users SET active</tt>=<tt> NULL WHERE (user_id</tt>=<tt>$x AND</tt><br>
<tt>&nbsp;&nbsp; active</tt>=<tt>'" . escape_data($y) . "')LIMIT 1";</tt><br>
<tt>&nbsp;&nbsp; $result </tt>=<tt> mysql_query ($query) or trigger_error("Query: $query\n</tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>br /</tt>&gt;<tt>MySQL Error: " . mysql_error());</tt><br>
</dpeccode><br>
<a name="phf006"></a>
<br><dpecjs><b>*  Step 4</b>
<br>
Report upon the success of the query.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>// Validate $_GET['x'] and $_GET['y'].</tt><br>
<tt>if (isset($_GET['x'])) {</tt><br>
<tt>&nbsp;&nbsp; $x </tt>=<tt> (int) $_GET['x'];</tt><br>
<tt>} else {</tt><br>
<tt>&nbsp;&nbsp; $x </tt>=<tt> 0;</tt><br>
<tt>}</tt><br>
<tt>if (isset($_GET['y'])) {</tt><br>
<tt>&nbsp;&nbsp; $y </tt>=<tt> $_GET['y'];</tt><br>
<tt>} else {</tt><br>
<tt>&nbsp;&nbsp; $y </tt>=<tt> 0;</tt><br>
<tt>}</tt><br>
<tt>// If $x and $y aren't correct, redirect the user.</tt><br>
<tt>if ( ($x </tt>&gt;<tt> 0) &amp;&amp; (strlen($y) </tt>==<tt> 32)) {</tt><br>
<tt>&nbsp;&nbsp; require_once ('./mysql_connect.php'); // Connect to the database.</tt><br>
<tt>&nbsp;&nbsp; $query </tt>=<tt> "UPDATE users SET active</tt>=<tt> NULL WHERE (user_id</tt>=<tt>$x AND</tt><br>
<tt>&nbsp;&nbsp; active</tt>=<tt>'" . escape_data($y) . "')LIMIT 1";</tt><br>
<tt>&nbsp;&nbsp; $result </tt>=<tt> mysql_query ($query) or trigger_error("Query: $query\n</tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>br /</tt>&gt;<tt>MySQL Error: " . mysql_error());</tt><br>
<tt>&nbsp;&nbsp; // Print a customized message.</tt><br>
<tt>&nbsp;&nbsp; if (mysql_affected_rows() </tt>==<tt> 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "</tt>&lt;<tt>h3</tt>&gt;<tt>Your account is now active. You may now log in.</tt>&lt;<tt>/h3</tt>&gt;<tt>";</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<tt>Your account could not</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;be activated. Please re-check the link or contact the system</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;administrator.</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
</dpeccode><br>
<a name="phf007"></a>
<br><dpecjs> If one row was affected by the query, then the user's account is now active and a message says as much. <dpec2c>Click Login.</dpec2c>&nbsp; 
<br>

<a name="phf008"></a>
<br><dpecjs> If no rows are affected, the user is notified of the problem. This would most likely happen if someone tried to fake the <i><tt>x </tt></i>and <i><tt>y</tt> </i>values or if there's a problem in following the link from the email to the Web browser.&nbsp; 
<br>

<a name="phf009"></a>
<br><dpecjs><b>*  Step 5</b>
<br>
Complete the main conditional. The <tt>else</tt> clause takes effect if <tt>$x</tt> and <tt>$y</tt> are not of the proper value and length. In such a case, the user is just redirected to the index page.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>// If $x and $y aren't correct, redirect the user.</tt><br>
<tt>if ( ($x </tt>&gt;<tt> 0) &amp;&amp; (strlen($y) </tt>==<tt> 32)) {</tt><br>
<tt>&nbsp;&nbsp; require_once ('./mysql_connect.php'); // Connect to the database.</tt><br>
<tt>&nbsp;&nbsp; $query </tt>=<tt> "UPDATE users SET active</tt>=<tt> NULL WHERE (user_id</tt>=<tt>$x AND</tt><br>
<tt>&nbsp;&nbsp; active</tt>=<tt>'" . escape_data($y) . "')LIMIT 1";</tt><br>
<tt>&nbsp;&nbsp; $result </tt>=<tt> mysql_query ($query) or trigger_error("Query: $query\n</tt><br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>br /</tt>&gt;<tt>MySQL Error: " . mysql_error());</tt><br>
<tt>&nbsp;&nbsp; // Print a customized message.</tt><br>
<tt>&nbsp;&nbsp; if (mysql_affected_rows() </tt>==<tt> 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "</tt>&lt;<tt>h3</tt>&gt;<tt>Your account is now active. You may now log in.</tt>&lt;<tt>/h3</tt>&gt;<tt>";</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<tt>Your account could not</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;be activated. Please re-check the link or contact the system</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;administrator.</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;<tt>}</tt><br>
<tt>&nbsp;&nbsp; mysql_close();</tt><br>
<tt>} else { // Redirect.</tt><br>
<tt>&nbsp;&nbsp; // Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp; $url </tt>=<tt> 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER</tt><br>
<tt>&nbsp;&nbsp; ['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp; // Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp; if ((substr($url, -1) </tt>==<tt> '/') OR (substr($url, -1) </tt>==<tt> '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url </tt>=<tt> substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Add the page.</tt><br>
<tt>&nbsp;&nbsp; $url .</tt>=<tt> '/index.php';</tt><br>
<tt>&nbsp;&nbsp; ob_end_clean(); // Delete the buffer.</tt><br>
<tt>&nbsp;&nbsp; header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp; exit(); // Quit the script.</tt><br>
<tt>} // End of main IF-ELSE.</tt>
</dpeccode><br>
<a name="phf010"></a>
<br><dpecjs><b>* Step 6</b>
<br>
Complete the page.
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp; mysql_close();</tt><br>
<tt>} else { // Redirect.</tt><br>
<tt>&nbsp;&nbsp; // Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp; $url </tt>=<tt> 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER</tt><br>
<tt>&nbsp;&nbsp; ['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp; // Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp; if ((substr($url, -1) </tt>==<tt> '/') OR (substr($url, -1) </tt>==<tt> '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url </tt>=<tt> substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Add the page.</tt><br>
<tt>&nbsp;&nbsp; $url .</tt>=<tt> '/index.php';</tt><br>
<tt>&nbsp;&nbsp; ob_end_clean(); // Delete the buffer.</tt><br>
<tt>&nbsp;&nbsp; header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp; exit(); // Quit the script.</tt><br>
<tt>} // End of main IF-ELSE.</tt><br>
<tt>include ('./includes/footer.html');</tt><br>
?&gt;
<br>
</dpeccode><br>
<a name="phf011"></a>
<br><dpecjs><b>*  Step 7</b>
<br>
Save the file as <tt>activate.php</tt>, upload to your Web server, and test by clicking the link in the registration email.&nbsp; 
<br>

<a name="phf012"></a>
<br><b>ID number and code  <br>  </b>  I specifically use the vague <tt><tt>x</tt></tt><i> </i>and <tt><tt>y</tt></tt><i> </i>as
 the names in the URL for security purposes.  While someone may figure 
out that the one is an ID number and the other is a code, it's sometimes
 best not to be explicit about such things.  <br><br>  <b>Adding a<i> </i><tt><tt>From</tt></tt><i> </i>parameter  <br>  </b>  You may want to add a <tt><tt>From</tt></tt><i> </i>parameter to your <tt>mail()</tt> call in <tt>register.php</tt> so that you can indicate who sent the confirmation email.  <br><br>  
<a name="phf013"></a>

<script language="JavaScript">insertAccQuestion('6','phf013.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phf015"></a>
<br><a name="topic11"></a><h2>Topic 6.1 Exercises</h2><br><b>* Exercise 1</b><dpecw1>

<br>
Try creating an activation page.

</dpecw1><br><dpecw2>

<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Step</b>

</th><th class="heading" scope="col">
<b>Action</b>

	</th></tr>
	<tr valign="top">
<td>
1
</td>
<td>
Open a text editor and begin a new PHP script.
</td>
	</tr>
	<tr valign="top">
<td>
2
</td>
<td>
Validate the values that should be received by your page.
</td>
	</tr>
	<tr valign="top">
<td>
3
</td>
<td>
Activate a user.
</td>
	</tr>
	<tr valign="top">
<td>
4
</td>
<td>
Report upon the success of the query.
</td>
	</tr>
	<tr valign="top">
<td>
5
</td>
<td>
Complete the main conditional and the page.
</td>
	</tr>
	<tr valign="top">
<td>
6
</td>
<td>
Save the file as <tt>activate.php</tt>, upload to your Web server, and test by clicking the link in the registration email.
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw2><br>
<a name="phf016"></a>
<br><dpecw1>
	
In this lesson, you learned that the activation script compares the 
user's ID number and the activation code from the registration page to 
those in the database. Once the match is determined the activation code 
will be removed from the record, indicating there is an active account.
	
</dpecw1><br>
<a name="phg001"></a><br><a name="topic12"></a><h2>Lesson 7. Logging In and Logging Out</h2><dpecw1>

The login query itself is slightly different in that it also checks that the active<i> </i>column has a <tt>NULL</tt> value, which means that the user has activated the account.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Create the <tt>login.php</tt> and <tt>logout.php</tt> scripts
	</li>
</ul>

</dpecw1><br>
<a name="phg002"></a>
<br><dpecjs><b>*  Writing <tt></tt></b><tt>
<br>login.php</tt>
Let's examine the steps required to create the <tt>login.php</tt> query.<br>
<b>* Step 1</b><br>
Create a new document in your text editor.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>&lt;?php # login.php</tt><br>
<tt>// This is the login page for the site.</tt>
</dpeccode><br>
<a name="phg003"></a>
<br><dpecjs><b>* Step 2</b>
<br>
Require the configuration file and the HTML header.
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # login.php</tt><br>
<tt>// This is the login page for the site.</tt><br>
<tt>// Include the configuration file for error management and such.</tt><br>
<tt>require_once ('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title </tt>=<tt> 'Login';</tt><br>
<tt>include ('./includes/header.html');</tt>
</dpeccode><br>
<a name="phg004"></a>
<br><dpecjs><b>* Step 3</b>
<br>
Check if the form has been submitted, require the database connection, and validate the submitted data.
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # login.php</tt><br>
<tt>// This is the login page for the site.</tt><br>
<tt>// Include the configuration file for error management and such.</tt><br>
<tt>require_once ('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title = 'Login';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>if (isset($_POST['submitted'])) { // Check if the form</tt><br>
<tt>has been submitted.</tt><br>
<tt>&nbsp;&nbsp; require_once ('./mysql_connect.php');</tt><br>
<tt>&nbsp;&nbsp; // Connect to the database.</tt><br>
<tt>&nbsp;&nbsp; // Validate the email address.</tt><br>
<tt>&nbsp;&nbsp; if (!empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$e </tt>=<tt> escape_data($_POST ['email']);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<tt> You forgot to enter your email address!</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$e = FALSE;</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Validate the password.</tt><br>
<tt>&nbsp;&nbsp; if (!empty($_POST['pass'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p = escape_data($_POST ['pass']);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p = FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<tt> You forgot to enter your password!</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; } </tt>
</dpeccode><br>
<a name="phg005"></a>
<br><dpecjs> I could certainly validate the submitted data using regular
 expressions; however, that level of testing is unwarranted and will 
slow down the login process.
If, for example, the user enters <i>12345 </i>as his email address, then
 the login query will not return a match anyway.
Therefore, it's unnecessary to apply a regular expression first. If the 
user does not enter any values into the form, error messages will be 
printed.&nbsp; 
<br>

<a name="phg006"></a>
<br><dpecjs><b>* Step 4</b>
<br>
If both validation routines were passed, retrieve the user information. 
The query will attempt to retrieve the user ID and first name for the 
record whose email address and password match those submitted.
The MySQL query uses the <tt>SHA()</tt> function on the pass<i> </i>column, as the password is encrypted using that function in the first place. The query also checks that the active<i> </i>column has a NULL value, meaning that the user has successfully accessed the <tt>activate.php</tt> page.
<br>
</dpecjs><br><dpeccode>
<tt>if (isset($_POST['submitted'])) { // Check if the form</tt><br>
<tt>has been submitted.</tt><br>
<tt>&nbsp;&nbsp; require_once ('./mysql_connect.php');</tt><br>
<tt>&nbsp;&nbsp; // Connect to the database.</tt><br>
<tt>&nbsp;&nbsp; // Validate the email address.</tt><br>
<tt>&nbsp;&nbsp; if (!empty($_POST['email'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$e </tt>=<tt> escape_data($_POST ['email']);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<tt> You forgot to enter your email address!</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$e = FALSE;</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Validate the password.</tt><br>
<tt>&nbsp;&nbsp; if (!empty($_POST['pass'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p = escape_data($_POST ['pass']);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p = FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<tt> You forgot to enter your password!</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; } </tt><br>
<tt>if ($e </tt>&amp;&amp;<tt> $p) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp; // Query the database.</tt><br>
<tt>&nbsp;&nbsp; $query </tt>=<tt> "SELECT user_id, first_name FROM users WHERE (email</tt>=<tt>'$e' AND pass=SHA('$p')) AND active IS NULL";</tt><br>
<tt>&nbsp;&nbsp; $result </tt>=<tt> mysql_query ($query) or trigger_error("Query: $query\n </tt>&lt;<tt>br /</tt>&gt;<tt>MySQL Error: " . mysql_error());</tt>
</dpeccode><br>
<a name="phg007"></a>
<br><dpecjs><b>* Step 5</b>
<br>
If a match was made in the database, log the user in and redirect her. 
The login process consists of storing the retrieved values in the 
session (which was already started in <tt>header.html</tt>) and then redirecting the user to the home page. The <tt>ob_end_clean()</tt> function will delete the existing buffer (the output buffering is also begun in <tt>header.html</tt>), since it will not be used.
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp; // Validate the password.</tt><br>
<tt>&nbsp;&nbsp; if (!empty($_POST['pass'])) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p = escape_data($_POST ['pass']);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p = FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;You forgot to enter your password!</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; } </tt><br>
<tt>if ($e </tt>&amp;&amp;<tt> $p) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp; // Query the database.</tt><br>
<tt>&nbsp;&nbsp; $query </tt>=<tt> "SELECT user_id, first_name FROM users WHERE (email</tt>=<tt>'$e' AND pass=SHA('$p')) AND active IS NULL";</tt><br>
<tt>&nbsp;&nbsp; $result </tt>=<tt> mysql_query ($query) or trigger_error("Query: $query\n </tt>&lt;<tt>br /</tt>&gt;<tt>MySQL Error: " . mysql_error());</tt><br>
<tt>&nbsp;&nbsp; if (@mysql_num_rows($result) </tt>==<tt> 1) { // A match was made.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Register the values &amp; redirect.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$row </tt>=<tt> mysql_fetch_array ($result,MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_free_result($result);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['first_name'] </tt>=<tt> $row[1];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['user_id'] </tt>=<tt> $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((substr($url, -1) </tt>==<tt> '/') OR(substr($url, -1) </tt>==<tt> '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url </tt>=<tt> substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .</tt>=<tt> '/index.php';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ob_end_clean(); // Delete the buffer.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt>
</dpeccode><br>
<a name="phg008"></a>
<br><dpecjs><b>* Step 6</b>
<br>
Complete the conditionals and close the database connection.
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (@mysql_num_rows($result) </tt>==<tt> 1) { // A match was made.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Register the values &amp; redirect.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$row </tt>=<tt> mysql_fetch_array ($result,MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_free_result($result);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['first_name'] </tt>=<tt> $row[1];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_SESSION['user_id'] </tt>=<tt> $row[0];</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((substr($url, -1) </tt>==<tt> '/') OR(substr($url, -1) </tt>==<tt> '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $url </tt>=<tt> substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add the page.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url .</tt>=<tt> '/index.php';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ob_end_clean(); // Delete the buffer.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); // Quit the script.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { No match was made.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<tt>Either the email address and password entered do not match those on file or you have not yet activated your account.</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<tt>Please try again.</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; mysql_close();</tt><br>
<tt>} // End of SUBMIT conditional.</tt><br>
&gt;?<br>
</dpeccode><br>
<a name="phg009"></a>
<br><dpecjs> The error message indicates that the login process could 
fail for two possible reasons. One is that the submitted email address 
and password do not match those on file. The other reason is that the 
user has not yet activated his account.&nbsp; 
<br>

<a name="phg010"></a>
<br><dpecjs><b>* Step 7</b>
<br>
Display the HTML login form.
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { No match was made.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<tt>Either the email address and password entered do not match those on file or you have not yet activated your account.</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<tt>Please try again.</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; mysql_close();</tt><br>
<tt>} // End of SUBMIT conditional.</tt><br>
&gt;?<br>
&lt;<tt>h1</tt>&gt;<tt>Login</tt>&lt;<tt>/h1</tt>&gt;<br>
&lt;<tt>p</tt>&gt;<tt>Your browser must allow cookies in order to log in.</tt>&lt;<tt>/p</tt>&gt;<br>
&lt;<tt>form action</tt>=<tt>"login.php"method</tt>=<tt>"post"</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>fieldset</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Email Address:</tt>&lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>=<tt>"text" name</tt>=<tt>"email" size</tt>=<tt>"20" maxlength</tt>=<tt>"40" value</tt>=<tt>"</tt>&lt;?<tt>php if (isset($_POST['email'])) echo $_POST['email']; </tt>?&gt;<tt>" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Password:</tt>&lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>=<tt>"password" name</tt>=<tt>"pass" size</tt>=<tt>"20" maxlength="20" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>div align</tt>=<tt>"center"</tt>&gt;&lt;<tt>input type</tt>=<tt>"submit" name</tt>=<tt>"submit" value</tt>=<tt>"Login" /</tt>&gt;&lt;<tt>/div</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>input type</tt>=<tt>"hidden" name</tt>=<tt>"submitted" value</tt>=<tt>"TRUE" /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/fieldset</tt>&gt;<br>
&lt;<tt>/form</tt>&gt;<br>
</dpeccode><br>
<a name="phg011"></a>
<br><dpecjs> The login form, like the registration form, will submit the
 data back to itself. It also remembers the submitted email address, 
should there be a problem and the form is displayed again. Notice that I
 add a message informing the user that cookies must be enabled to use 
the site (if a user does not allow cookies, the user will never get 
access to the logged-in user pages). <dpec2c>Click the Login button.</dpec2c>&nbsp; 
<br>

<a name="phg012"></a>
<br><dpecjs><b>* Step 8</b>
<br>
Include the HTML footer.
<br>
</dpecjs><br><dpeccode>
&lt;<tt>h1</tt>&gt;<tt>Login</tt>&lt;<tt>/h1</tt>&gt;<br>
&lt;<tt>p</tt>&gt;<tt>Your browser must allow cookies in order to log in.</tt>&lt;<tt>/p</tt>&gt;<br>
&lt;<tt>form action</tt>=<tt>"login.php"method</tt>=<tt>"post"</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>fieldset</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Email Address:</tt>&lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>=<tt>"text" name</tt>=<tt>"email" size</tt>=<tt>"20" maxlength</tt>=<tt>"40" value</tt>=<tt>"</tt>&lt;?<tt>php if (isset($_POST['email'])) echo $_POST['email']; </tt>?&gt;<tt>" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Password:</tt>&lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>=<tt>"password" name</tt>=<tt>"pass" size</tt>=<tt>"20" maxlength="20" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>div align</tt>=<tt>"center"</tt>&gt;&lt;<tt>input type</tt>=<tt>"submit" name</tt>=<tt>"submit" value</tt>=<tt>"Login" /</tt>&gt;&lt;<tt>/div</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>input type</tt>=<tt>"hidden" name</tt>=<tt>"submitted" value</tt>=<tt>"TRUE" /</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/fieldset</tt>&gt;<br>
&lt;<tt>/form</tt>&gt;<br>
&lt;?<tt>php</tt><br>
<tt>include ('./includes/footer.html');</tt><br>
?&gt;<br>
</dpeccode><br>
<a name="phg013"></a>
<br><dpecjs><b>*  Step 9</b>
<br>
Save the file as <tt>login.php</tt>, upload to your Web server, and test
 in your Web browser. Upon successfully logging in, the user will be 
redirected to the home page, where he will be greeted by name.&nbsp; 
<br>

<a name="phg014"></a>
<br><dpecjs><b>*  Writing <tt></tt></b><tt>
<br>logout.php</tt>
Let's examine the steps required to create the <tt>logout.php</tt> script.<br>
<b>* Step 1</b><br>
Create a new document in your text editor and include the necessary files.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>&lt;?php # logout.php</tt><br>
<tt>// This is the logout page for the site.</tt><br>
<tt>// Include the configuration file for error management and such.</tt><br>
<tt>require_once ('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title = 'Logout';</tt><br>
<tt>include ('./includes/header.html');</tt>

</dpeccode><br>
<a name="phg015"></a>
<br><dpecjs><b>* Step 2</b>
<br>
Redirect the user if she is not logged in. If the user is not currently logged in (determined by checking for a <tt>$_SESSION['first_name']</tt> variable), the user will be redirected to the home page.
<br>
</dpecjs><br><dpeccode>
<tt><!--?php # logout.php</TT--><br>
<tt>// This is the logout page for the site.</tt><br>
<tt>// Include the configuration file for error management and such.</tt><br>
<tt>require_once ('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title = 'Logout';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// If no first_name variable exists, redirect the user.</tt><br>
<tt>if (!isset($_SESSION['first_name'])) {</tt><br>
<tt>&nbsp;&nbsp; // Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp; $url </tt>=<tt> 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp; // Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp; if ((substr($url, -1) </tt>==<tt> '/') OR(substr($url, -1) </tt>==<tt> '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url </tt>=<tt> substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Add the page.</tt><br>
<tt>&nbsp;&nbsp; $url .</tt>=<tt> '/index.php';</tt><br>
<tt>&nbsp;&nbsp; ob_end_clean(); // Delete the buffer.</tt><br>
<tt>&nbsp;&nbsp; header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp; exit(); // Quit the script.</tt></tt>
</dpeccode><br>
<a name="phg016"></a>
<br><dpecjs><b>* Step 3</b>
<br>
Log out the user if he is currently logged in. To log the user out, the 
session values will be reset, the session data will be destroyed on the 
server, and the session cookie will be deleted.
<br>
</dpecjs><br><dpeccode>
<tt>// If no first_name variable exists, redirect the user.</tt><br>
<tt>if (!isset($_SESSION['first_name'])) {</tt><br>
<tt>&nbsp;&nbsp; // Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp; $url </tt>=<tt> 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp; // Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp; if ((substr($url, -1) </tt>==<tt> '/') OR(substr($url, -1) </tt>==<tt> '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url </tt>=<tt> substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Add the page.</tt><br>
<tt>&nbsp;&nbsp; $url .</tt>=<tt> '/index.php';</tt><br>
<tt>&nbsp;&nbsp; ob_end_clean(); // Delete the buffer.</tt><br>
<tt>&nbsp;&nbsp; header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp; exit(); // Quit the script.</tt><br>
<tt>} else { // Logout the user.</tt><br>
<tt>&nbsp;&nbsp; $_SESSION = array();</tt><br>
<tt>&nbsp;&nbsp; session_destroy();</tt><br>
<tt>&nbsp;&nbsp; setcookie (session_name(), '',time()-300, '/', '', 0); // Destroy the cookie.</tt><br>
<tt>} </tt><br>
</dpeccode><br>
<a name="phg017"></a>
<br><dpecjs><b>* Step 4</b>
<br>
Print a logged-out message and complete the PHP page.
<br>
</dpecjs><br><dpeccode>
<tt>// If no first_name variable exists, redirect the user.</tt><br>
<tt>if (!isset($_SESSION['first_name'])) {</tt><br>
<tt>&nbsp;&nbsp; // Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp; $url </tt>=<tt> 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp; // Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp; if ((substr($url, -1) </tt>==<tt> '/') OR(substr($url, -1) </tt>==<tt> '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url </tt>=<tt> substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Add the page.</tt><br>
<tt>&nbsp;&nbsp; $url .</tt>=<tt> '/index.php';</tt><br>
<tt>&nbsp;&nbsp; ob_end_clean(); // Delete the buffer.</tt><br>
<tt>&nbsp;&nbsp; header("Location: $url");</tt><br>
<tt>&nbsp;&nbsp; exit(); // Quit the script.</tt><br>
<tt>} else { // Logout the user.</tt><br>
<tt>&nbsp;&nbsp; $_SESSION = array();</tt><br>
<tt>&nbsp;&nbsp; session_destroy();</tt><br>
<tt>&nbsp;&nbsp; setcookie (session_name(), '',time()-300, '/', '', 0); // Destroy the cookie.</tt><br>
<tt>} </tt><br>
<tt>// Print a customized message.</tt><br>
<tt>echo "</tt>&lt;<tt>h3</tt>&gt;<tt>You are now logged out.</tt>&lt;<tt>/h3</tt>&gt;<tt>";</tt><br>
<tt>include ('./includes/footer.html');</tt><br>
?&gt;<br>
</dpeccode><br>
<a name="phg018"></a>
<br><dpecjs><b>*  Step 5</b>
<br>
Save the file as <tt>logout.php</tt>, upload to your Web server, and test in your Web browser.&nbsp; 
<br>

<a name="phg019"></a>
<br><b>Determining the number of users online  <br>  </b>  If you added a <tt>loggedin</tt> field to the <tt><tt>users</tt></tt><i> </i>table, you could set this to <tt>1</tt> when a user logs in, and then be able to count how many people are currently online at any given moment. Set the value to <tt>0</tt> when the user logs out.  <br><br>  <b>Updating the <tt>last_login DATETIME</tt> field  <br>  </b>  By adding a <tt>last_login DATETIME</tt> field to the <tt><tt>users</tt></tt><i> </i>table,
 you could update it when a user logs in.  Then you would know the last 
time a person accessed the site and have an alternative method for 
counting how many users are currently logged in (say, everyone that 
logged in within the past so many minutes).  <br><br>  
<a name="phg021"></a>

<script language="JavaScript">insertAccQuestion('7','phg021.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phg022"></a>

<script language="JavaScript">insertAccQuestion('8','phg022.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phg023"></a>
<br><a name="topic13"></a><h2>Topic 7.1 Exercises</h2><br><b>* Exercise 1</b><dpecw1>

<br>
Try creating a <tt>logout.php</tt> script.

</dpecw1><br><dpecw2>

<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Step</b>

</th><th class="heading" scope="col">
<b>Action</b>

	</th></tr>
	<tr valign="top">
<td>
1
</td>
<td>
Open a text editor and begin a new document.
</td>
	</tr>
	<tr valign="top">
<td>
2
</td>
<td>
Redirect a user if they are not logged in.
</td>
	</tr>
	<tr valign="top">
<td>
3
</td>
<td>
Print a logged-out message and complete the PHP page.
</td>
	</tr>
	<tr valign="top">
<td>
4
</td>
<td>
Save the file as <tt>logout.php</tt>, upload to your Web server, and test in your Web browser.
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw2><br>
<a name="phg024"></a>
<br><dpecw1>
	
In this lesson, you learned that the login form checks that the active column has a <tt>NULL</tt>
 value, which means that a user has activated his account. You now know 
that the login form checks only if values are entered into it, without 
using regular expressions (which simply slows down the login process).<br>
You also learned the logout form destroys all of the session 
information, and deletes the session cookie. You now know that the 
logout form will redirect a user if he is not logged in.
	
</dpecw1><br>
<a name="phh001"></a><br><a name="topic14"></a><h2>Lesson 8. Resetting a Password</h2><dpecw1>

There are two processes to consider when managing passwords: resetting a forgotten password and changing an existing one.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Create a script that can reset a forgotten password
	</li>
</ul>

</dpecw1><br>
<a name="phh002"></a>
<br><dpecw1>

<b>* Password Management</b><br>
The final aspect of the public side of a site is the management of passwords.<br>
It inevitably happens that people forget their login passwords for Web 
sites, so having a contingency plan for these occasions is important.<br>
One option would be to have the user email the administrator when this 
occurs, but administering a site is difficult enough without this extra 
hassle. Thus, I will make a script whose purpose is to reset a forgotten
 password.

</dpecw1><br>
<a name="phh003"></a>
<br><dpecw1>

Because the passwords stored in the database are encrypted using MySQL's <tt>SHA()</tt> function, there's no way to retrieve an unencrypted version.<br>
The alternative is to create a new, random password and change the existing password to this value.<br>
Rather than just display the new password in the Web browser (that would
 be terribly insecure), it will be emailed to the address with which the
 user registered.

</dpecw1><br>
<a name="phh004"></a>
<br><dpecjs><b>*  Writing <tt></tt></b><tt>
<br>forgot_password.php</tt>
Let's examine the steps required to create a script that can reset a forgotten password.<br>
<b>* Step 1</b><br>
Create a new document in your text editor and include the necessary files.&nbsp; 
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # forgot_password.php</tt><br>
<tt>// This page allows a user to reset his password, if forgotten.</tt><br>
<tt>// Include the configuration file for error management and such.</tt><br>
<tt>require_once ('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title </tt>=<tt> 'Forgot Your Password';</tt><br>
<tt>include ('./includes/header.html');</tt>
<tt></tt>
</dpeccode><br>
<a name="phh005"></a>
<br><dpecjs><b>* Step 2</b>
<br>
Check if the form has been submitted and validate the email address.
<br>
</dpecjs><br><dpeccode>
&lt;?<tt>php # forgot_password.php</tt><br>
<tt>// This page allows a user to reset his password, if forgotten.</tt><br>
<tt>// Include the configuration file for error management and such.</tt><br>
<tt>require_once ('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title </tt>=<tt> 'Forgot Your Password';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>if (isset($_POST['submitted'])) { // Handle the form.</tt><br>
<tt>&nbsp;&nbsp; require_once ('./mysql_connect.php'); // Connect to the database.</tt><br>
<tt>&nbsp;&nbsp; if (empty($_POST['email'])) { //Validate the email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$uid </tt>=<tt> FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<tt>You forgot to enter your email address!</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for the existence of that email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query </tt>=<tt> "SELECT user_id FROM users WHERE email</tt>=<tt>'". escape_data($_POST['email']) . "'";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result </tt>=<tt> mysql_query ($query)or trigger_error("Query:$query\n</tt>&lt;<tt>br /</tt>&gt;<tt>MySQL Error: " .mysql_error());</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mysql_num_rows($result)</tt>==<tt> 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Retrieve the user ID.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; list($uid) </tt>=<tt> mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<tt>The submitted email address does not match those on file!</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$uid </tt>=<tt> FALSE;</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>}</tt><br>
</dpeccode><br>
<a name="phh006"></a>
<br><dpecjs> This form will take an email address input and update the 
password for that record. The first step is to validate that an email 
address was entered (there's no need for the extra overhead of a regular
 expression).
Second, an attempt is made to retrieve the user ID for that email 
address in the database. If no such record could be found, an error 
message is displayed. I'll be using <tt>$uid</tt> (user ID) as my flag variable, as I'll need this value in order to update the password in the database. <dpec2c>Click Reset My Password.</dpec2c>&nbsp; 
<br>

<a name="phh007"></a>
<br><dpecjs><b>* Step 3</b>
<br>
Create a new, random password. To create a new, random password, I'll make use of four PHP functions. The first is <tt>uniqid()</tt>, which will return a unique identifier. It is fed the arguments <tt>rand()</tt> and <tt>1</tt>, which makes the returned string more random.
This returned value is then sent through the <tt>md5()</tt> function, 
which calculates the MD5 hash of a string. At this stage, a hashed 
version of the unique ID is returned, which ends up being a string 32 
characters long.
From this string, the password is determined by pulling out 10 
characters starting with the third one, using the <tt>substr()</tt> 
function. All in all, this code will return a very random and 
meaningless 10-character string (containing both letters and numbers) to
 be used as the temporary password.
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp; if (empty($_POST['email'])) { //Validate the email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$uid </tt>=<tt> FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<tt>You forgot to enter your email address!</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for the existence of that email address.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query </tt>=<tt> "SELECT user_id FROM users WHERE email</tt>=<tt>'". escape_data($_POST['email']) . "'";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result </tt>=<tt> mysql_query ($query)or trigger_error("Query:$query\n</tt>&lt;<tt>br /</tt>&gt;<tt>MySQL Error: " .mysql_error());</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mysql_num_rows($result)</tt>==<tt> 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Retrieve the user ID.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; list($uid) </tt>=<tt> mysql_fetch_array ($result, MYSQL_NUM);</tt><br>
<tt>&nbsp;&nbsp; } else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<tt>The submitted email address does not match those on file!</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$uid </tt>=<tt> FALSE;</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>}</tt><br>
<tt>&nbsp;&nbsp; if ($uid) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Create a new, random password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p </tt>=<tt> substr ( md5(uniqid(rand(),1)), 3, 10);</tt><br>
</dpeccode><br>
<a name="phh008"></a>
<br><dpecjs><b>* Step 4</b>
<br>
Update the password in the database.
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp; if ($uid) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Create a new, random password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p </tt>=<tt> substr ( md5(uniqid(rand(),1)), 3, 10);</tt><br>
<br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Make the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query = "UPDATE users SET pass=SHA('$p') WHERE user_id</tt>=<tt>$uid";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result </tt>=<tt> mysql_query ($query) or trigger_error("Query: $query\n</tt>&lt;<tt>br /</tt>&gt;<tt>MySQL Error: " .mysql_error());</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mysql_affected_rows() </tt>==<tt> 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If it ran OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Send an email.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$body </tt>=<tt> 
"Your password to log into SITENAME has been temporarily changed to 
'$p'. Please log in using this password and your username. At that time 
you may change your password to something more familiar.";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mail ($_POST['email'], 'Your temporary password.', $body,</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'From: admin@sitename.com');</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h3</tt>&gt;<tt>Your password has been changed. You will receive the</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new, temporary 
password at the email address with which you registered. Once you have 
logged in with this password, you may change it by clicking on the 
"Change Password" link.</tt>&lt;<tt>/h3</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include ('./includes/footer.html'); // Include the HTML footer.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit();</tt><br>
</dpeccode><br>
<a name="phh009"></a>
<br><dpecjs> Using the user ID (the primary key for the table) that was 
retrieved earlier, the password for this particular user is updated to 
the <tt>SHA()</tt> version of <tt>$p</tt>, the random password. Then an email is sent to the user and a message is printed.&nbsp; 
<br>

<a name="phh010"></a>
<br><dpecjs><b>* Step 5</b>
<br>
Complete the conditionals and the PHP code.
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Make the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query = "UPDATE users SET pass=SHA('$p') WHERE user_id</tt>=<tt>$uid";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result </tt>=<tt> mysql_query ($query) or trigger_error("Query: $query\n</tt>&lt;<tt>br /</tt>&gt;<tt>MySQL Error: " .mysql_error());</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mysql_affected_rows() </tt>==<tt> 1) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If it ran OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Send an email.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$body </tt>=<tt> 
"Your password to log into SITENAME has been temporarily changed to 
'$p'. Please log in using this password and your username. At that time 
you may change your password to something more familiar.";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mail 
($_POST['email'], 'Your temporary password.', $body, 'From: 
admin@sitename.com');</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>h3</tt>&gt;<tt>Your
 password has been changed. You will receive the new, temporary password
 at the email address with which you registered. Once you have logged in
 with this password, you may change it by clicking on the "Change 
Password" link.</tt>&lt;<tt>/h3</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include ('./includes/footer.html'); // Include the HTML footer.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { If it did not run OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<tt>Your password could not be changed due to a system error. We apologize for any inconvenience.</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp; } else { // Failed the validation test.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color="red"size</tt>=<tt>"+1"</tt>&gt;<tt>Please try again.</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; mysql_close(); // Close the database connection.</tt><br>
<tt>} // End of the main Submit conditional.</tt><br>
&gt;?<br>
</dpeccode><br>
<a name="phh011"></a>
<br><dpecjs><b>* Step 6</b>
<br>
Make the HTML form.
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { If it did not run OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color</tt>=<tt>"red"size</tt>=<tt>"+1"</tt>&gt;<tt>Your password could not be changed due to a system error. We apologize for any inconvenience.</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp; } else { // Failed the validation test.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '</tt>&lt;<tt>p</tt>&gt;&lt;<tt>font color="red"size</tt>=<tt>"+1"</tt>&gt;<tt>Please try again.</tt>&lt;<tt>/font</tt>&gt;&lt;<tt>/p</tt>&gt;<tt>';</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; mysql_close(); // Close the database connection.</tt><br>
<tt>} // End of the main Submit conditional.</tt><br>
&gt;?<br>
&lt;<tt>h1</tt>&gt;<tt>Reset Your Password</tt>&lt;<tt>/h1</tt>&gt;<br>
&lt;<tt>p</tt>&gt;<tt>Enter your email address below and your password will be reset.</tt>&lt;<tt>/p</tt>&gt;<br>
&lt;<tt>form action</tt>=<tt>"forgot_password.php" method</tt>=<tt>"post"</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>fieldset</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Email Address:</tt>&lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>=<tt>"text"</tt><br>
<tt>&nbsp;&nbsp; name</tt>=<tt>"email" size</tt>=<tt>"20" maxlength</tt>=<tt>"40" value</tt>=<tt>"</tt>&lt;?<tt>php if (isset($_POST['email'])) echo $_POST['email']; </tt>?&gt;<tt>" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/fieldset</tt>&gt;
<tt>&nbsp;&nbsp; </tt>&lt;<tt>div align</tt>=<tt>"center"</tt>&gt;&lt;<tt>input type</tt>=<tt>"submit" name</tt>=<tt>"submit" value</tt>=<tt>"Reset My Password" /</tt>&gt;&lt;<tt>/div</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>input type</tt>=<tt>"hidden" name</tt>=<tt>"submitted" value</tt>=<tt>"TRUE" /</tt>&gt;<br>
&lt;<tt>/form</tt>&gt;<br>
</dpeccode><br>
<a name="phh012"></a>
<br><dpecjs> The form takes only one input, the email address.&nbsp; 
<br>

<a name="phh013"></a>
<br><dpecjs> If there is a problem when the form has been submitted, the submitted email address value will be given again.&nbsp; 
<br>

<a name="phh014"></a>
<br><dpecjs><b>* Step 7</b>
<br>
Include the HTML footer.
<br>
</dpecjs><br><dpeccode>
&lt;<tt>h1</tt>&gt;<tt>Reset Your Password</tt>&lt;<tt>/h1</tt>&gt;<br>
&lt;<tt>p</tt>&gt;<tt>Enter your email address below and your password will be reset.</tt>&lt;<tt>/p</tt>&gt;<br>
&lt;<tt>form action</tt>=<tt>"forgot_password.php" method</tt>=<tt>"post"</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>fieldset</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>p</tt>&gt;&lt;<tt>b</tt>&gt;<tt>Email Address:</tt>&lt;<tt>/b</tt>&gt;<tt> </tt>&lt;<tt>input type</tt>=<tt>"text" name</tt>=<tt>"email" size</tt>=<tt>"20" maxlength</tt>=<tt>"40" value</tt>=<tt>"</tt>&lt;?<tt>php if (isset($_POST['email'])) echo $_POST['email']; </tt>?&gt;<tt>" /</tt>&gt;&lt;<tt>/p</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>/fieldset</tt>&gt;
<tt>&nbsp;&nbsp; </tt>&lt;<tt>div align</tt>=<tt>"center"</tt>&gt;&lt;<tt>input type</tt>=<tt>"submit" name</tt>=<tt>"submit" value</tt>=<tt>"Reset My Password" /</tt>&gt;&lt;<tt>/div</tt>&gt;<br>
<tt>&nbsp;&nbsp; </tt>&lt;<tt>input type</tt>=<tt>"hidden" name</tt>=<tt>"submitted" value</tt>=<tt>"TRUE" /</tt>&gt;<br>
&lt;<tt>/form</tt>&gt;<br>
&lt;?<tt>php</tt><br>
<tt>include ('./includes/footer.html');</tt><br>
?&gt;
</dpeccode><br>
<a name="phh015"></a>
<br><dpecjs><b>*  Step 8</b>
<br>
Save the file as <tt>forgot_password.php</tt>, upload to your Web server, and test in your Web browser.&nbsp; 
<br>

<a name="phh016"></a>
<br><dpecjs><b>*  Step 9</b>
<br>
Check your email to see the resulting message after a successful password reset.&nbsp; 
<br>

<a name="phh017"></a>

<script language="JavaScript">insertAccQuestion('9','phh017.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phh018"></a>

<script language="JavaScript">insertAccQuestion('10','phh018.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phh019"></a>

<script language="JavaScript">insertAccQuestion('11','phh019.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phh020"></a>
<br><a name="topic15"></a><h2>Topic 8.1 Exercises</h2><br><b>* Exercise 1</b><dpecw1>

<br>
Try creating a <tt>forgot_password.php</tt> script.

</dpecw1><br><dpecw2>

<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Step</b>

</th><th class="heading" scope="col">
<b>Action</b>

	</th></tr>
	<tr valign="top">
<td>
1
</td>
<td>
Open a text editor and begin a new document.
</td>
	</tr>
	<tr valign="top">
<td>
2
</td>
<td>
Include a configuration file and the HTML header.
</td>
	</tr>
	<tr valign="top">
<td>
3
</td>
<td>
Check if the form has been submitted and validate the email address.
</td>
	</tr>
	<tr valign="top">
<td>
4
</td>
<td>
Create a new, random password.
</td>
	</tr>
	<tr valign="top">
<td>
5
</td>
<td>
Update the password in the database.
</td>
	</tr>
	<tr valign="top">
<td>
6
</td>
<td>
Complete the conditionals and the PHP code.
</td>
	</tr>
	<tr valign="top">
<td>
7
</td>
<td>
Make the HTML form.
</td>
	</tr>
	<tr valign="top">
<td>
8
</td>
<td>
Include the HTML footer.
</td>
	</tr>
	<tr valign="top0">
<td>
9
</td>
<td>
Save the file as <tt>forgot_password.php</tt>, and upload it to your Web server to test in your Web browser.
</td>
	</tr>
	<tr valign="top1">
<td>
10
</td>
<td>
Check your email to see the resulting message after a successful password reset.
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw2><br>
<a name="phh021"></a>
<br><dpecw1>
	
In this lesson, you learned that a <tt>forgot_password.php</tt> script 
can be created to reset a forgotten password. You now know the only way 
to remedy a forgotten password is to create a new, random password and 
change the existing password to this value.<br>
You also learned that a more secure alternative to just displaying a new
 password in a user's Web browser, is to simply email it to the user's 
registered email address.
	
</dpecw1><br>
<a name="phi001"></a><br><a name="topic16"></a><h2>Lesson 9. Changing a Password</h2><dpecw1>

When creating a <tt>change_password.php</tt> script, a user's new password must pass the validation routines, otherwise she will see error messages.<br>
After completing this lesson, you should be able to:<br>
<ul>
	<li>
Create a script that can change a user's password
	</li>
</ul>

</dpecw1><br>
<a name="phi002"></a>
<br><dpecjs> The <tt>change_password.php</tt> script developed here will
 allow only users who are logged in to be able to access it. Therefore, 
the form will only need to accept the new password and a confirmation of
 it (the user's existing password and email address will have already 
been confirmed by the login page).<br> 
<br><b>* Writing the <tt></tt></b><tt>change_password.php</tt><br>
Let's examine the steps required to write <tt>change_password.php</tt>.<br>
<b>* Step 1</b><br>
Create a new document in your text editor and include the necessary files.&nbsp; 
<br>
</dpecjs><br><dpeccode>
<tt>&lt;?php # change_password.php</tt><br>
<tt>// This page allows a logged-in user to change his password.</tt><br>
<tt>// Include the configuration file for error managment and such.</tt><br>
<tt>require_once ('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title = 'Change Your Password';</tt><br>
<tt>include ('./includes/header.html');</tt>
</dpeccode><br>
<a name="phi003"></a>
<br><dpecjs><b>* Step 2</b>
<br>
Check that the user is logged in. The assumption will be that this page 
is accessed only by logged-in users. To enforce this idea, the script 
checks for the existence of the <tt>$_SESSION['first_ name']</tt> variable. If it is not set, then the user will be redirected.
<br>
</dpecjs><br><dpeccode>
<tt>&lt;?php # change_password.php</tt><br>
<tt>// This page allows a logged-in user to change his password.</tt><br>
<tt>// Include the configuration file for error managment and such.</tt><br>
<tt>require_once ('./includes/config.inc.php');</tt><br>
<tt>// Set the page title and include the HTML header.</tt><br>
<tt>$page_title = 'Change Your Password';</tt><br>
<tt>include ('./includes/header.html');</tt><br>
<tt>// If no first_name variable exists, redirect the user.</tt><br>
<tt>if (!isset($_SESSION['first_name'])) {</tt><br>
<tt>&nbsp;&nbsp; // Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp; $url = 'http://' . $_SERVER['HTTP_HOST']</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;. dirname($_SERVER['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp; // Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp; if ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Add the page.</tt><br>
<tt>&nbsp;&nbsp; $url .= '/index.php'; </tt><br>
<tt>ob_end_clean(); // Delete the buffer.</tt><br>
<tt>header("Location: $url"); </tt><br>
<tt>exit(); // Quit the script.</tt>
</dpeccode><br>
<a name="phi004"></a>
<br><dpecjs><b>* Step 3</b>
<br>
Check if the form has been submitted and include the MySQL connection. 
The key to understanding how this script functions is that there are 
three possible scenarios: the user is not logged in (and therefore 
redirected), the user is logged in and viewing the form, and the user is
 logged in and has submitted the form.
This <tt>else</tt> clause takes effect if the user is logged in, in 
which case the script then needs to determine if the form has been 
submitted or not.
<br>
</dpecjs><br><dpeccode>
<tt>// If no first_name variable exists, redirect the user.</tt><br>
<tt>if (!isset($_SESSION['first_name'])) {</tt><br>
<tt>&nbsp;&nbsp; // Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp; $url = 'http://' . $_SERVER['HTTP_HOST']</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;. dirname($_SERVER['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp; // Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp; if ((substr($url, -1) == '/') OR (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Add the page.</tt><br>
<tt>&nbsp;&nbsp; $url .= '/index.php'; </tt><br>
<tt>ob_end_clean(); // Delete the buffer.</tt><br>
<tt>header("Location: $url"); </tt><br>
<tt>exit(); // Quit the script.</tt><br>
<tt>} else {</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) { // Handle the form.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('./mysql_connect.php'); // Connect to the database.</tt>
</dpeccode><br>
<a name="phi005"></a>
<br><dpecjs><b>* Step 4</b>
<br>
Validate the submitted password.
<br>
</dpecjs><br><dpeccode>
<tt>// If no first_name variable exists, redirect the user.</tt><br>
<tt>if (!isset($_SESSION['first_name'])) {</tt><br>
<tt>&nbsp;&nbsp; // Start defining the URL.</tt><br>
<tt>&nbsp;&nbsp; $url = 'http://' . $_SERVER['HTTP_HOST'] . dirname($_SERVER['PHP_SELF']);</tt><br>
<tt>&nbsp;&nbsp; // Check for a trailing slash.</tt><br>
<tt>&nbsp;&nbsp; if ((substr($url, -1) == '/') OR</tt><br>
<tt>&nbsp;&nbsp; (substr($url, -1) == '\\') ) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = substr ($url, 0, -1); // Chop off the slash.</tt><br>
<tt>&nbsp;&nbsp; }</tt><br>
<tt>&nbsp;&nbsp; // Add the page.</tt><br>
<tt>&nbsp;&nbsp; $url .= '/index.php'; </tt><br>
<tt>ob_end_clean(); // Delete the buffer.</tt><br>
<tt>header("Location: $url"); </tt><br>
<tt>exit(); // Quit the script.</tt><br>
<tt>} else {</tt><br>
<tt>&nbsp;&nbsp; if (isset($_POST['submitted'])) { // Handle the form.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once ('../mysql_connect.php'); // Connect to the database.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a new password and match against the confirmed password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (eregi ('&nbsp;[[:alnum:]]{4,20}$',</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stripslashes(trim($_POST['password1'])))) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($_POST['password1'] == $_POST['password2']) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password1']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '&lt;p&gt;&lt;font color="red"size="+1"&gt;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Your 
password did not match the confirmed password!&lt;/font&gt;&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p = FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo 
'&lt;p&gt;&lt;font color="red"size="+1"&gt;Please enter a valid 
password!&lt;/font&gt;&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt>
</dpeccode><br>
<a name="phi006"></a>
<br><dpecjs> The new password should be validated using the same tests 
as those in the registration process. Error messages will be displayed 
if problems are found.&nbsp; 
<br>

<a name="phi007"></a>
<br><dpecjs><b>* Step 5</b>
<br>
Update the password.
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check for a new password and match against the confirmed password.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (eregi ('&nbsp;[[:alnum:]]{4,20}$', stripslashes(trim($_POST['password1'])))) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($_POST['password1'] == $_POST['password2']) {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = escape_data($_POST['password1']);</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $p = FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo 
'&lt;p&gt;&lt;font color="red"size="+1"&gt;Your password did not match 
the confirmed password!&lt;/font&gt;&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p = FALSE;</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo 
'&lt;p&gt;&lt;font color="red"size="+1"&gt;Please enter a valid 
password!&lt;/font&gt;&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($p) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Make the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query = "UPDATE users SET pass=SHA('$p')</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WHERE user_id={$_SESSION['user_id']}";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result = 
mysql_query ($query) or trigger_error("Query: $query\n&lt;br /&gt;MySQL 
Error: " .mysql_error());</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mysql_affected_rows() == 1) { // If it ran OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Send an email, if desired.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '&lt;h3&gt;Your password has been changed.&lt;/h3&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; include ('./includes/footer.html'); // Include the HTML footer.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exit();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { // If it did not run OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Send a message to the error log, if desired.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo 
'&lt;p&gt;&lt;font color="red"size="+1"&gt; Your password could not be 
changed due to a system error. We apologize for any 
inconvenience.&lt;/font&gt;&lt;/p&gt;';</tt>
</dpeccode><br>
<a name="phi008"></a>
<br><dpecjs><b>* Step 6</b>
<br>
Close the database connection and complete the conditionals and the PHP code.
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($p) { // If everything's OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Make the query.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$query = "UPDATE users SET pass=SHA('$p') WHERE user_id={$_SESSION['user_id']}";</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result = 
mysql_query ($query) or trigger_error("Query: $query\n&lt;br /&gt;MySQL 
Error: " .mysql_error());</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mysql_affected_rows() == 1) { // If it ran OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Send an email, if desired.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo '&lt;h3&gt;Your password has been changed.&lt;/h3&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mysql_close(); // Close the database connection.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; include ('./includes/footer.html'); // Include the HTML footer.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exit();</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { // If it did not run OK.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Send a message to the error log, if desired.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo 
'&lt;p&gt;&lt;font color="red"size="+1"&gt;Your password could not be 
changed due to a system error. We apologize for any 
inconvenience.&lt;/font&gt;&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { // Failed the validation test.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo 
'&lt;p&gt;&lt;font color="red"size="+1"&gt;Please try 
again.&lt;/font&gt;&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>} // End of the main Submit conditional.</tt><br>
<tt>?&gt;</tt>
</dpeccode><br>
<a name="phi009"></a>
<br><dpecjs> Using the user's ID — stored in the session when the user 
logged in — the password field can be updated in the database. If the 
update worked, a confirmation message is printed to the Web browser. <dpec2c>Click Change Password.</dpec2c>&nbsp; 
<br>

<a name="phi010"></a>
<br><dpecjs><b>* Step 7</b>
<br>
Create the HTML form.
<br>
</dpecjs><br><dpeccode>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { // Failed the validation test.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo '&lt;p&gt;&lt;font color="red"size="+1"&gt;Please try again.</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/font&gt;&lt;/p&gt;';</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</tt><br>
<tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql_close(); // Close the database connection.</tt><br>
<tt>} // End of the main Submit conditional.</tt><br>
<tt>?&gt;</tt><br>
<tt>&lt;h1&gt;Change Your Password&lt;/h1&gt;</tt><br>
<tt>&lt;form action="change_password.php"method="post"&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;fieldset&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;&lt;b&gt;New Password:&lt;/b&gt; &lt;input type="password" name="password1" size="20" maxlength="20" /&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;small&gt;Use only letters and numbers. Must be 
between 4 and 20 characters long.&lt;/small&gt;&lt;/p&gt;&lt;p&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;b&gt;Confirm New Password:&lt;/b&gt;&lt;input 
type="password" name="password2" size="20" maxlength="20" 
/&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;/fieldset&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;div align="center"&gt;&lt;input type="submit" name="submit" value="Change My Password" /&gt;&lt;/div&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;input type="hidden" name="submitted" value="TRUE" /&gt;</tt><br>
<tt>&lt;/form&gt; </tt>
</dpeccode><br>
<a name="phi011"></a>
<br><dpecjs> This form takes two inputs: the new password and a 
confirmation of it. A description of the proper format is given as well.
 Since password inputs in HTML forms cannot be given preset values, 
there's no reason to set them using PHP (to make the form sticky). <dpec2c>Click Change My Password.</dpec2c>&nbsp; 
<br>

<a name="phi012"></a>
<br><dpecjs><b>* Step 8</b>
<br>
Complete the HTML page.
<br>
</dpecjs><br><dpeccode>
<tt>&lt;h1&gt;Change Your Password&lt;/h1&gt;</tt><br>
<tt>&lt;form action="change_password.php"method="post"&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;fieldset&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;p&gt;&lt;b&gt;New Password:&lt;/b&gt; &lt;input type="password" name="password1" size="20" maxlength="20" /&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;small&gt;Use only letters and numbers. Must be 
between 4 and 20 characters long.&lt;/small&gt;&lt;/p&gt;&lt;p&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;b&gt;Confirm New Password:&lt;/b&gt;&lt;input 
type="password"name="password2" size="20" maxlength="20" /&gt;&lt;/p&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;/fieldset&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;div align="center"&gt;&lt;input type="submit" name="submit" value="Change My Password" /&gt;&lt;/div&gt;</tt><br>
<tt>&nbsp;&nbsp; &lt;input type="hidden" name="submitted" value="TRUE" /&gt;</tt><br>
<tt>&lt;/form&gt; </tt><br>
<tt>&lt;?php</tt><br>
<tt>} // End of the !isset($_SESSION['first_name']) ELSE.</tt><br>
<tt>include ('./includes/footer.html');</tt><br>
<tt>?&gt;</tt>
</dpeccode><br>
<a name="phi013"></a>
<br><dpecjs><b>*  Step 9</b>
<br>
Save the file as <tt>change_password.php</tt>, upload to your Web server, and test in your Web browser.&nbsp; 
<br>

<a name="phi014"></a>
<br><b>Resetting and changing passwords  <br>  </b>  Once this script 
has been completed, users can reset their passwords with the previous 
script and then log in using the temporary, random passwords.  After 
logging in, users can change their passwords back to something more 
memorable with this page.  <br><br>  <b>The <tt>mysql_affected_rows()</tt> function  <br>  </b>  The <tt>mysql_affected_rows()</tt> function will return <tt>0</tt> if an <tt>UPDATE</tt>
 query does not actually alter the value of any column in a record.  For
 this reason, if users attempt to change their passwords but use their 
current passwords as the new one, this page will do nothing.  Hopefully,
 this limitation should not be a problem, but you can rewrite the 
messages and error handling to allow for this possibility.  <br><br>  <b>Site authentication  <br>  </b>
  Because the site's authentication does not rely upon the user's 
password from page to page (in other words, the password is not checked 
on each subsequent page after logging in), changing a password will not 
require the user to log back in.  <br><br>  
<a name="phi015"></a>
<br><dpecw1>
	
<b>* Site Administration</b><br>
For this application, how the site administration works depends upon 
what you want it to do. For starters, you could add an administrator<i> </i>column to the users table (an unsigned <tt>TINYINT</tt>), indicating which users are administrators (<i><tt>1</tt> </i>for administrators, <i><tt>0</tt> </i>for common users). Then, when you logged in as an administrator, different links could appear.<br>
One additional page you would probably want is a <tt>view_users.php</tt> script. You could use this to link to an <tt>edit_user.php</tt>
 page, which would allow you to manually activate an account or change a
 person's password. You could also delete a user using such a page.
	
</dpecw1><br>
<a name="phi018"></a>
<br><a name="topic17"></a><h2>Topic 9.1 Exercises</h2><br><b>* Exercise 1</b><dpecw1>

<br>
Try creating a <tt>change_password.php</tt> script.

</dpecw1><br><dpecw2>

<br>
<ml_ins_table>
<table summary="Take these steps in the order indicated" width="92%" border="1" cellpadding="4" cellspacing="0">
	<tbody><tr valign="top">
<th class="heading" scope="col">
<b>Step</b>

</th><th class="heading" scope="col">
<b>Action</b>

	</th></tr>
	<tr valign="top">
<td>
1
</td>
<td>
Open a text editor and begin a new document.
</td>
	</tr>
	<tr valign="top">
<td>
2
</td>
<td>
Include the necessary files such as configuration file, header file, etc.
</td>
	</tr>
	<tr valign="top">
<td>
3
</td>
<td>
Check that a user is logged in.
</td>
	</tr>
	<tr valign="top">
<td>
4
</td>
<td>
Check if the form has been submitted and include the MySQL connection.
</td>
	</tr>
	<tr valign="top">
<td>
5
</td>
<td>
Validate a submitted password.
</td>
	</tr>
	<tr valign="top">
<td>
6
</td>
<td>
Update the password.
</td>
	</tr>
	<tr valign="top">
<td>
7
</td>
<td>
Close the database connection and complete the conditionals and the PHP code.
</td>
	</tr>
	<tr valign="top">
<td>
8
</td>
<td>
Create the HTML form and complete the HTML page..
</td>
	</tr>
	<tr valign="top0">
<td>
9
</td>
<td>
Save the file as <tt>change_password.php</tt>, upload to your Web server, and test in your Web browser.
</td>
	</tr>
</tbody></table>
</ml_ins_table>

</dpecw2><br>
<a name="phi019"></a>
<br><dpecw1>
	
In this lesson, you learned that the <tt>change_password.php</tt> script only needs two inputs to work properly: the new password and a confirmation of it.<br>
You also learned that the key to understanding how the <tt>change_password.php</tt>
 script functions is that there are three possible scenarios: the user 
is not logged in (and therefore redirected), the user is logged in and 
viewing the form, and the user is logged in and has submitted the form.
	
</dpecw1><br>
<a name="phj001"></a>
<br><a name="topic18"></a><h2>Lesson 10. Course in Review</h2><dpecw1>

This lesson allows you an opportunity to review the principles and practices you have learned in this course.<br>
It reviews the material presented in this course through questions and activities.

</dpecw1><br>
<a name="phj002"></a>

<script language="JavaScript">insertAccQuestion('12','phj002.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phj003"></a>

<script language="JavaScript">insertAccQuestion('13','phj003.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phj004"></a>

<script language="JavaScript">insertAccQuestion('14','phj004.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<a name="phj010"></a>

<script language="JavaScript">insertAccQuestion('15','phj010.htm',true)</script>
<noscript>Please download a browser that supports JavaScript.<BR></noscript>
<script language="JavaScript">
<!--
writeCopyrightInfo();
var totalTopics =18;
//-->
</script><br><br><center>© 2006 MindLeaders, Inc. All Rights Reserved.
<noscript><P>Your browser does not support script tags. Please update your system with a browser that supports them.</P></noscript>

</center></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></dpecjs></body></html>